{"version":3,"file":"lisco.modern.js","sources":["../src/common/Utils.js","../src/common/I18nLoader.js","../src/common/JsonResponse.js","../node_modules/safe-buffer/index.js","../node_modules/jws/lib/data-stream.js","../node_modules/buffer-equal-constant-time/index.js","../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","../node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js","../node_modules/jwa/index.js","../node_modules/jws/lib/tostring.js","../node_modules/jws/lib/sign-stream.js","../node_modules/jws/lib/verify-stream.js","../node_modules/jws/index.js","../node_modules/jsonwebtoken/lib/JsonWebTokenError.js","../node_modules/jsonwebtoken/lib/NotBeforeError.js","../node_modules/jsonwebtoken/lib/TokenExpiredError.js","../node_modules/ms/index.js","../node_modules/jsonwebtoken/lib/timespan.js","../node_modules/semver/semver.js","../node_modules/jsonwebtoken/lib/psSupported.js","../node_modules/jsonwebtoken/verify.js","../node_modules/lodash.includes/index.js","../node_modules/lodash.isboolean/index.js","../node_modules/lodash.isinteger/index.js","../node_modules/lodash.isnumber/index.js","../node_modules/lodash.isplainobject/index.js","../node_modules/lodash.isstring/index.js","../node_modules/lodash.once/index.js","../node_modules/jsonwebtoken/sign.js","../node_modules/jsonwebtoken/index.js","../node_modules/jsonwebtoken/decode.js","../src/common/TokenGenerator.js","../src/server/Server.js","../src/server/ClusterServer.js","../src/events/EventHandler.js","../src/logger/Logger.js","../src/auth/AuthController.js","../src/auth/IAuthHandler.js","../src/auth/jwt/JwtAuthHandler.js","../src/auth/cookie/CookieAuthHandler.js","../node_modules/tarn/dist/TimeoutError.js","../node_modules/tarn/dist/PromiseInspection.js","../node_modules/tarn/dist/utils.js","../node_modules/tarn/dist/PendingOperation.js","../node_modules/tarn/dist/Resource.js","../node_modules/tarn/dist/Pool.js","../node_modules/tarn/dist/tarn.js","../node_modules/knex/lib/util/string.js","../node_modules/knex/lib/util/timeout.js","../node_modules/knex/lib/execution/internal/ensure-connection-callback.js","../node_modules/knex/lib/execution/runner.js","../node_modules/knex/node_modules/ms/index.js","../node_modules/knex/node_modules/debug/src/common.js","../node_modules/knex/node_modules/debug/src/browser.js","../node_modules/knex/lib/util/noop.js","../node_modules/knex/lib/query/method-constants.js","../node_modules/knex/lib/util/is.js","../node_modules/knex/lib/execution/batch-insert.js","../node_modules/knex/lib/knex-builder/make-knex.js","../node_modules/knex/lib/knex-builder/FunctionHelper.js","../node_modules/knex/lib/execution/internal/delay.js","../node_modules/knex/lib/util/finally-mixin.js","../node_modules/knex/lib/execution/transaction.js","../node_modules/knex/lib/execution/internal/query-executioner.js","../node_modules/knex/lib/constants.js","../node_modules/knex/lib/util/helpers.js","../node_modules/knex/lib/query/joinclause.js","../node_modules/knex/lib/util/save-async-stack.js","../node_modules/knex/lib/builder-interface-augmenter.js","../node_modules/knex/lib/query/querybuilder.js","../node_modules/knex/lib/query/constants.js","../node_modules/knex/lib/query/analytic.js","../node_modules/knex/lib/formatter/formatterUtils.js","../node_modules/knex/lib/formatter/wrappingFormatter.js","../node_modules/knex/lib/formatter/rawFormatter.js","../node_modules/knex/lib/util/nanoid.js","../node_modules/knex/lib/raw.js","../node_modules/knex/lib/query/querycompiler.js","../node_modules/knex/lib/schema/builder.js","../node_modules/knex/lib/schema/internal/helpers.js","../node_modules/knex/lib/schema/compiler.js","../node_modules/knex/lib/schema/tablebuilder.js","../node_modules/knex/lib/schema/tablecompiler.js","../node_modules/knex/lib/schema/columnbuilder.js","../node_modules/knex/lib/schema/columncompiler.js","../node_modules/knex/lib/ref.js","../node_modules/knex/lib/formatter.js","../node_modules/colorette/index.cjs","../node_modules/knex/lib/logger.js","../node_modules/knex/lib/schema/viewbuilder.js","../node_modules/knex/lib/schema/viewcompiler.js","../node_modules/knex/lib/client.js","../node_modules/pg-connection-string/index.js","../node_modules/knex/lib/knex-builder/internal/parse-connection.js","../node_modules/knex/lib/dialects/sqlite3/execution/sqlite-transaction.js","../node_modules/knex/lib/dialects/sqlite3/query/sqlite-querycompiler.js","../node_modules/knex/lib/dialects/sqlite3/schema/sqlite-compiler.js","../node_modules/knex/lib/dialects/sqlite3/schema/sqlite-columncompiler.js","../node_modules/knex/lib/dialects/sqlite3/schema/sqlite-tablecompiler.js","../node_modules/knex/lib/dialects/sqlite3/schema/sqlite-viewcompiler.js","../node_modules/knex/lib/dialects/sqlite3/schema/internal/tokenizer.js","../node_modules/knex/lib/dialects/sqlite3/schema/internal/parser.js","../node_modules/knex/lib/dialects/sqlite3/schema/internal/parser-combinator.js","../node_modules/knex/lib/dialects/sqlite3/schema/internal/compiler.js","../node_modules/knex/lib/dialects/sqlite3/schema/internal/utils.js","../node_modules/knex/lib/dialects/sqlite3/schema/ddl.js","../node_modules/knex/lib/dialects/sqlite3/schema/internal/sqlite-ddl-operations.js","../node_modules/knex/lib/dialects/sqlite3/query/sqlite-querybuilder.js","../node_modules/knex/lib/dialects/sqlite3/index.js","../node_modules/knex/lib/dialects/better-sqlite3/index.js","../node_modules/knex/lib/dialects/postgres/execution/pg-transaction.js","../node_modules/knex/lib/dialects/postgres/query/pg-querycompiler.js","../node_modules/knex/lib/dialects/postgres/query/pg-querybuilder.js","../node_modules/knex/lib/dialects/postgres/schema/pg-columncompiler.js","../node_modules/knex/lib/dialects/postgres/schema/pg-tablecompiler.js","../node_modules/knex/lib/dialects/postgres/schema/pg-viewcompiler.js","../node_modules/knex/lib/dialects/postgres/schema/pg-viewbuilder.js","../node_modules/knex/lib/dialects/postgres/schema/pg-compiler.js","../node_modules/knex/lib/dialects/postgres/index.js","../node_modules/knex/lib/dialects/cockroachdb/crdb-querycompiler.js","../node_modules/knex/lib/dialects/cockroachdb/crdb-columncompiler.js","../node_modules/knex/lib/dialects/cockroachdb/crdb-tablecompiler.js","../node_modules/knex/lib/dialects/cockroachdb/crdb-viewcompiler.js","../node_modules/knex/lib/dialects/cockroachdb/crdb-querybuilder.js","../node_modules/knex/lib/dialects/cockroachdb/index.js","../node_modules/knex/lib/dialects/mssql/mssql-formatter.js","../node_modules/knex/lib/dialects/mssql/transaction.js","../node_modules/knex/lib/dialects/mssql/query/mssql-querycompiler.js","../node_modules/knex/lib/dialects/mssql/schema/mssql-compiler.js","../node_modules/knex/lib/dialects/mssql/schema/mssql-tablecompiler.js","../node_modules/knex/lib/dialects/mssql/schema/mssql-viewcompiler.js","../node_modules/knex/lib/dialects/mssql/schema/mssql-columncompiler.js","../node_modules/knex/lib/dialects/mssql/index.js","../node_modules/knex/lib/dialects/mysql/transaction.js","../node_modules/knex/lib/dialects/mysql/query/mysql-querycompiler.js","../node_modules/knex/lib/dialects/mysql/schema/mysql-compiler.js","../node_modules/knex/lib/dialects/mysql/schema/mysql-tablecompiler.js","../node_modules/knex/lib/dialects/mysql/schema/mysql-columncompiler.js","../node_modules/knex/lib/dialects/mysql/schema/mysql-viewcompiler.js","../node_modules/knex/lib/dialects/mysql/schema/mysql-viewbuilder.js","../node_modules/knex/lib/dialects/mysql/index.js","../node_modules/knex/lib/dialects/mysql2/transaction.js","../node_modules/knex/lib/dialects/mysql2/index.js","../node_modules/knex/lib/dialects/oracle/utils.js","../node_modules/knex/lib/dialects/oracle/schema/oracle-compiler.js","../node_modules/knex/lib/dialects/oracle/schema/internal/trigger.js","../node_modules/knex/lib/dialects/oracle/schema/oracle-columnbuilder.js","../node_modules/knex/lib/dialects/oracle/schema/internal/incrementUtils.js","../node_modules/knex/lib/dialects/oracle/schema/oracle-columncompiler.js","../node_modules/knex/lib/dialects/oracle/schema/oracle-tablecompiler.js","../node_modules/knex/lib/dialects/oracle/index.js","../node_modules/knex/lib/dialects/oracle/query/oracle-querycompiler.js","../node_modules/knex/lib/dialects/oracledb/utils.js","../node_modules/knex/lib/dialects/oracledb/query/oracledb-querycompiler.js","../node_modules/knex/lib/dialects/oracledb/schema/oracledb-tablecompiler.js","../node_modules/knex/lib/dialects/oracledb/schema/oracledb-columncompiler.js","../node_modules/knex/lib/dialects/oracledb/schema/oracledb-viewcompiler.js","../node_modules/knex/lib/dialects/oracledb/schema/oracledb-viewbuilder.js","../node_modules/knex/lib/dialects/oracledb/transaction.js","../node_modules/knex/lib/dialects/oracledb/index.js","../node_modules/knex/lib/dialects/pgnative/index.js","../node_modules/knex/lib/dialects/redshift/transaction.js","../node_modules/knex/lib/dialects/redshift/query/redshift-querycompiler.js","../node_modules/knex/lib/dialects/redshift/schema/redshift-columnbuilder.js","../node_modules/knex/lib/dialects/redshift/schema/redshift-columncompiler.js","../node_modules/knex/lib/dialects/redshift/schema/redshift-tablecompiler.js","../node_modules/knex/lib/dialects/redshift/schema/redshift-compiler.js","../node_modules/knex/lib/dialects/redshift/schema/redshift-viewcompiler.js","../node_modules/knex/lib/dialects/redshift/index.js","../node_modules/knex/lib/dialects/index.js","../node_modules/knex/lib/knex-builder/internal/config-resolver.js","../node_modules/knex/lib/knex-builder/Knex.js","../node_modules/knex/lib/index.js","../node_modules/knex/knex.js","../src/db/knex/KnexConnector.js","../src/db/knex/filters/KnexFilterParser.js","../src/db/knex/dao/BaseKnexDao.js","../src/db/IUserDao.js","../src/base/BaseController.js","../src/base/BaseService.js","../src/App.js","../src/common/Runtime.js"],"sourcesContent":["import crypto from 'crypto';\r\nimport util from 'util';\r\n\r\nexport default class Utils {\r\n    static arrayToLower(mcArray) {\r\n        let tmp = mcArray.join('~').toLowerCase();\r\n        return tmp.split('~');\r\n    }\r\n\r\n    static replaceAll(str, find, replace) {\r\n        return str.replace(new RegExp(find.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replace);\r\n    }\r\n\r\n    /**\r\n     * Metodo de encript para las contraseñas y demas.\r\n     * \r\n     * @param {*} text \r\n     */\r\n    static encrypt(text) {\r\n        const algorithm = 'aes-256-cbc';\r\n        const secret = Buffer.from(process.env.CRYPT_SECRET, 'hex');\r\n        const iv = Buffer.from(process.env.CRYPT_IV, 'hex');\r\n\r\n        const cipher = crypto.createCipheriv(algorithm, secret, iv);\r\n        let encrypted = cipher.update(text);\r\n        encrypted = Buffer.concat([encrypted, cipher.final()]);\r\n        return encrypted.toString('hex');\r\n    }\r\n\r\n    /**\r\n     * Metodo de decrypt para las contraseñas y demas\r\n     * @param {*} text \r\n     */\r\n    static decrypt(text) {\r\n        const algorithm = 'aes-256-cbc';\r\n        const secret = Buffer.from(process.env.CRYPT_SECRET, 'hex');\r\n        const iv = Buffer.from(process.env.CRYPT_IV, 'hex');\r\n\r\n        const encryptedText = Buffer.from(text, 'hex');\r\n\r\n        const decipher = crypto.createDecipheriv(algorithm, secret, iv);\r\n        let decrypted = decipher.update(encryptedText);\r\n        decrypted = Buffer.concat([decrypted, decipher.final()]);\r\n        return decrypted.toString();\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * Utiliza una promise para ejecutar un setTimeout y hacer un falso sleep.\r\n     * \r\n     * @param {*} ms \r\n     */\r\n    static sleep(ms) {\r\n        let promise_sleep = util.promisify(setTimeout);\r\n\r\n        return promise_sleep(ms);\r\n    }\r\n\r\n    /**\r\n     * Genera dos claves para los metodos crypt y decrypt\r\n     */\r\n    static generateKeys() {\r\n        return {\r\n            key: crypto.randomBytes(32).toString('hex'),\r\n            iv: crypto.randomBytes(16).toString('hex')\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \"aplana\" un objeto jerarquico en una estructura clave-valor.\r\n     * \r\n     * @param {*} ob \r\n     * @returns \r\n     */\r\n    static flattenObject(ob) {\r\n        let toReturn = {};\r\n        let flatObject;\r\n        for (let i in ob) {\r\n            if (!ob.hasOwnProperty(i)) {\r\n                continue;\r\n            }\r\n            //Devolver los arrays tal cual\r\n            if (ob[i] && Array === ob[i].constructor) {\r\n                toReturn[i] = ob[i];\r\n                continue;\r\n            }\r\n            if ((typeof ob[i]) === 'object') {\r\n                flatObject = Utils.flattenObject(ob[i]);\r\n                for (let x in flatObject) {\r\n                    if (!flatObject.hasOwnProperty(x)) {\r\n                        continue;\r\n                    }\r\n                    //Exclude arrays from the final result\r\n                    if (flatObject[x] && Array === flatObject.constructor) {\r\n                        continue;\r\n                    }\r\n                    toReturn[i + (!!isNaN(x) ? '.' + x : '')] = flatObject[x];\r\n                }\r\n            } else {\r\n                toReturn[i] = ob[i];\r\n            }\r\n        }\r\n        return toReturn;\r\n    }\r\n\r\n    /**\r\n     * Invierte un objeto aplanado recuperando su forma original\r\n     * \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static unflatten(data) {\r\n        var result = {}\r\n        for (var i in data) {\r\n            var keys = i.split('.')\r\n            keys.reduce(function (r, e, j) {\r\n                return r[e] || (r[e] = isNaN(Number(keys[j + 1])) ? (keys.length - 1 == j ? data[i] : {}) : [])\r\n            }, result)\r\n        }\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    static expressHandler() {\r\n\r\n        return (fn) => {\r\n            return function asyncUtilWrap(...args) {\r\n                const fnReturn = fn(...args);\r\n                const next = args[args.length - 1];\r\n                return Promise.resolve(fnReturn).catch((e) => {\r\n                    return next(e);\r\n                });\r\n            };\r\n        };\r\n    }\r\n}\r\n\r\n","import fs from \"fs\";\r\nimport util from \"util\";\r\nimport Utils from \"./Utils.js\";\r\n\r\nimport chokidar from \"chokidar\";\r\n\r\nexport default class I18nLoader {\r\n    constructor() {\r\n        this.watcher = {};\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param lang\r\n     * @param callback\r\n     */\r\n    async load(custom) {\r\n        const lang = custom || process.env.DEFAULT_LANG;\r\n\r\n        if (!this.currentData) {\r\n            this.currentData = {};\r\n        }\r\n        if (!this.currentDataFlat) {\r\n            this.currentDataFlat = {};\r\n        }\r\n\r\n        const file = process.cwd() + \"/i18n/lang_\" + lang + \".json\";\r\n\r\n        // Initialize watcher.\r\n        this.watcher[lang] = chokidar.watch(file, {\r\n            ignored: /(^|[/\\\\])\\../, // ignore dotfiles\r\n            persistent: true,\r\n        });\r\n        //Add change watcher\r\n        this.watcher[lang].on(\"change\", (path) => this.loadFile(path, lang));\r\n\r\n        //Initialize file load\r\n        await this.loadFile(file, lang);\r\n    }\r\n\r\n    /**\r\n     * Carga el archivo de traducciones.\r\n     *\r\n     * @param {*} file\r\n     * @param {*} lang\r\n     */\r\n    async loadFile(file, lang) {\r\n        const readfile = util.promisify(fs.readFile);\r\n        try {\r\n            const data = await readfile(file, \"utf8\");\r\n            var parsedData = JSON.parse(data);\r\n\r\n            this.currentDataFlat[lang] = Utils.flattenObject(parsedData);\r\n            this.currentData[lang] = parsedData;\r\n        } catch (ex) {\r\n            if (ex?.code === \"ENOENT\") {\r\n                return console.log(\"Lang file does not exist. Create it on ./i18n/lang_{xx}.json\");\r\n            }\r\n            console.error(ex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} key\r\n     */\r\n    async translate(key, lang) {\r\n        if (!lang) lang = process.env.DEFAULT_LANG;\r\n\r\n        if (this.currentDataFlat && this.currentDataFlat[lang] && this.currentDataFlat[lang][key]) {\r\n            return this.currentData[lang][key];\r\n        }\r\n\r\n        if (!this.currentDataFlat || !this.currentDataFlat[lang]) {\r\n            await this.load(lang);\r\n            if (this.currentDataFlat && this.currentDataFlat[lang] && this.currentDataFlat[key]) {\r\n                return this.currentDataFlat[lang][key];\r\n            }\r\n        }\r\n        return \"undefined.\" + key;\r\n    }\r\n}\r\n","export default class JsonResponse {\r\n    constructor(success, data, message, total) {\r\n        this.data = data;\r\n        this.success = success;\r\n        this.total = total;\r\n        this.message = message || '';\r\n    }\r\n\r\n    toJson() {\r\n        return (this);\r\n    }\r\n}\r\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*global module, process*/\nvar Buffer = require('safe-buffer').Buffer;\nvar Stream = require('stream');\nvar util = require('util');\n\nfunction DataStream(data) {\n  this.buffer = null;\n  this.writable = true;\n  this.readable = true;\n\n  // No input\n  if (!data) {\n    this.buffer = Buffer.alloc(0);\n    return this;\n  }\n\n  // Stream\n  if (typeof data.pipe === 'function') {\n    this.buffer = Buffer.alloc(0);\n    data.pipe(this);\n    return this;\n  }\n\n  // Buffer or String\n  // or Object (assumedly a passworded key)\n  if (data.length || typeof data === 'object') {\n    this.buffer = data;\n    this.writable = false;\n    process.nextTick(function () {\n      this.emit('end', data);\n      this.readable = false;\n      this.emit('close');\n    }.bind(this));\n    return this;\n  }\n\n  throw new TypeError('Unexpected data type ('+ typeof data + ')');\n}\nutil.inherits(DataStream, Stream);\n\nDataStream.prototype.write = function write(data) {\n  this.buffer = Buffer.concat([this.buffer, Buffer.from(data)]);\n  this.emit('data', data);\n};\n\nDataStream.prototype.end = function end(data) {\n  if (data)\n    this.write(data);\n  this.emit('end', data);\n  this.emit('close');\n  this.writable = false;\n  this.readable = false;\n};\n\nmodule.exports = DataStream;\n","/*jshint node:true */\n'use strict';\nvar Buffer = require('buffer').Buffer; // browserify\nvar SlowBuffer = require('buffer').SlowBuffer;\n\nmodule.exports = bufferEq;\n\nfunction bufferEq(a, b) {\n\n  // shortcutting on type is necessary for correctness\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    return false;\n  }\n\n  // buffer sizes should be well-known information, so despite this\n  // shortcutting, it doesn't leak any information about the *contents* of the\n  // buffers.\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var c = 0;\n  for (var i = 0; i < a.length; i++) {\n    /*jshint bitwise:false */\n    c |= a[i] ^ b[i]; // XOR\n  }\n  return c === 0;\n}\n\nbufferEq.install = function() {\n  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {\n    return bufferEq(this, that);\n  };\n};\n\nvar origBufEqual = Buffer.prototype.equal;\nvar origSlowBufEqual = SlowBuffer.prototype.equal;\nbufferEq.restore = function() {\n  Buffer.prototype.equal = origBufEqual;\n  SlowBuffer.prototype.equal = origSlowBufEqual;\n};\n","'use strict';\n\nfunction getParamSize(keySize) {\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n\treturn result;\n}\n\nvar paramBytesForAlg = {\n\tES256: getParamSize(256),\n\tES384: getParamSize(384),\n\tES512: getParamSize(521)\n};\n\nfunction getParamBytesForAlg(alg) {\n\tvar paramBytes = paramBytesForAlg[alg];\n\tif (paramBytes) {\n\t\treturn paramBytes;\n\t}\n\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nmodule.exports = getParamBytesForAlg;\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar getParamBytesForAlg = require('./param-bytes-for-alg');\n\nvar MAX_OCTET = 0x80,\n\tCLASS_UNIVERSAL = 0,\n\tPRIMITIVE_BIT = 0x20,\n\tTAG_SEQ = 0x10,\n\tTAG_INT = 0x02,\n\tENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6),\n\tENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\n\nfunction base64Url(base64) {\n\treturn base64\n\t\t.replace(/=/g, '')\n\t\t.replace(/\\+/g, '-')\n\t\t.replace(/\\//g, '_');\n}\n\nfunction signatureAsBuffer(signature) {\n\tif (Buffer.isBuffer(signature)) {\n\t\treturn signature;\n\t} else if ('string' === typeof signature) {\n\t\treturn Buffer.from(signature, 'base64');\n\t}\n\n\tthrow new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\n\nfunction derToJose(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\t// the DER encoded param should at most be the param size, plus a padding\n\t// zero, since due to being a signed integer\n\tvar maxEncodedParamLength = paramBytes + 1;\n\n\tvar inputLength = signature.length;\n\n\tvar offset = 0;\n\tif (signature[offset++] !== ENCODED_TAG_SEQ) {\n\t\tthrow new Error('Could not find expected \"seq\"');\n\t}\n\n\tvar seqLength = signature[offset++];\n\tif (seqLength === (MAX_OCTET | 1)) {\n\t\tseqLength = signature[offset++];\n\t}\n\n\tif (inputLength - offset < seqLength) {\n\t\tthrow new Error('\"seq\" specified length of \"' + seqLength + '\", only \"' + (inputLength - offset) + '\" remaining');\n\t}\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"r\"');\n\t}\n\n\tvar rLength = signature[offset++];\n\n\tif (inputLength - offset - 2 < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", only \"' + (inputLength - offset - 2) + '\" available');\n\t}\n\n\tif (maxEncodedParamLength < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar rOffset = offset;\n\toffset += rLength;\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"s\"');\n\t}\n\n\tvar sLength = signature[offset++];\n\n\tif (inputLength - offset !== sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", expected \"' + (inputLength - offset) + '\"');\n\t}\n\n\tif (maxEncodedParamLength < sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar sOffset = offset;\n\toffset += sLength;\n\n\tif (offset !== inputLength) {\n\t\tthrow new Error('Expected to consume entire buffer, but \"' + (inputLength - offset) + '\" bytes remain');\n\t}\n\n\tvar rPadding = paramBytes - rLength,\n\t\tsPadding = paramBytes - sLength;\n\n\tvar dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);\n\n\tfor (offset = 0; offset < rPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);\n\n\toffset = paramBytes;\n\n\tfor (var o = offset; offset < o + sPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);\n\n\tdst = dst.toString('base64');\n\tdst = base64Url(dst);\n\n\treturn dst;\n}\n\nfunction countPadding(buf, start, stop) {\n\tvar padding = 0;\n\twhile (start + padding < stop && buf[start + padding] === 0) {\n\t\t++padding;\n\t}\n\n\tvar needsSign = buf[start + padding] >= MAX_OCTET;\n\tif (needsSign) {\n\t\t--padding;\n\t}\n\n\treturn padding;\n}\n\nfunction joseToDer(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\tvar signatureBytes = signature.length;\n\tif (signatureBytes !== paramBytes * 2) {\n\t\tthrow new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n\t}\n\n\tvar rPadding = countPadding(signature, 0, paramBytes);\n\tvar sPadding = countPadding(signature, paramBytes, signature.length);\n\tvar rLength = paramBytes - rPadding;\n\tvar sLength = paramBytes - sPadding;\n\n\tvar rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n\n\tvar shortLength = rsBytes < MAX_OCTET;\n\n\tvar dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);\n\n\tvar offset = 0;\n\tdst[offset++] = ENCODED_TAG_SEQ;\n\tif (shortLength) {\n\t\t// Bit 8 has value \"0\"\n\t\t// bits 7-1 give the length.\n\t\tdst[offset++] = rsBytes;\n\t} else {\n\t\t// Bit 8 of first octet has value \"1\"\n\t\t// bits 7-1 give the number of additional length octets.\n\t\tdst[offset++] = MAX_OCTET\t| 1;\n\t\t// length, base 256\n\t\tdst[offset++] = rsBytes & 0xff;\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = rLength;\n\tif (rPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\toffset += signature.copy(dst, offset, 0, paramBytes);\n\t} else {\n\t\toffset += signature.copy(dst, offset, rPadding, paramBytes);\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = sLength;\n\tif (sPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\tsignature.copy(dst, offset, paramBytes);\n\t} else {\n\t\tsignature.copy(dst, offset, paramBytes + sPadding);\n\t}\n\n\treturn dst;\n}\n\nmodule.exports = {\n\tderToJose: derToJose,\n\tjoseToDer: joseToDer\n};\n","var bufferEqual = require('buffer-equal-constant-time');\nvar Buffer = require('safe-buffer').Buffer;\nvar crypto = require('crypto');\nvar formatEcdsa = require('ecdsa-sig-formatter');\nvar util = require('util');\n\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".'\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\n\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\nif (supportsKeyObjects) {\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\n  MSG_INVALID_SECRET += 'or a KeyObject';\n}\n\nfunction checkIsPublicKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.type !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.asymmetricKeyType !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n};\n\nfunction checkIsPrivateKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (typeof key === 'object') {\n    return;\n  }\n\n  throw typeError(MSG_INVALID_SIGNER_KEY);\n};\n\nfunction checkIsSecretKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return key;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (key.type !== 'secret') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n}\n\nfunction fromBase64(base64) {\n  return base64\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n\n  var padding = 4 - base64url.length % 4;\n  if (padding !== 4) {\n    for (var i = 0; i < padding; ++i) {\n      base64url += '=';\n    }\n  }\n\n  return base64url\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n}\n\nfunction typeError(template) {\n  var args = [].slice.call(arguments, 1);\n  var errMsg = util.format.bind(util, template).apply(null, args);\n  return new TypeError(errMsg);\n}\n\nfunction bufferOrString(obj) {\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\n}\n\nfunction normalizeInput(thing) {\n  if (!bufferOrString(thing))\n    thing = JSON.stringify(thing);\n  return thing;\n}\n\nfunction createHmacSigner(bits) {\n  return function sign(thing, secret) {\n    checkIsSecretKey(secret);\n    thing = normalizeInput(thing);\n    var hmac = crypto.createHmac('sha' + bits, secret);\n    var sig = (hmac.update(thing), hmac.digest('base64'))\n    return fromBase64(sig);\n  }\n}\n\nfunction createHmacVerifier(bits) {\n  return function verify(thing, signature, secret) {\n    var computedSig = createHmacSigner(bits)(thing, secret);\n    return bufferEqual(Buffer.from(signature), Buffer.from(computedSig));\n  }\n}\n\nfunction createKeySigner(bits) {\n return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\n    // keys as well.\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify(publicKey, signature, 'base64');\n  }\n}\n\nfunction createPSSKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign({\n      key: privateKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createPSSKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify({\n      key: publicKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, signature, 'base64');\n  }\n}\n\nfunction createECDSASigner(bits) {\n  var inner = createKeySigner(bits);\n  return function sign() {\n    var signature = inner.apply(null, arguments);\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\n    return signature;\n  };\n}\n\nfunction createECDSAVerifer(bits) {\n  var inner = createKeyVerifier(bits);\n  return function verify(thing, signature, publicKey) {\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\n    var result = inner(thing, signature, publicKey);\n    return result;\n  };\n}\n\nfunction createNoneSigner() {\n  return function sign() {\n    return '';\n  }\n}\n\nfunction createNoneVerifier() {\n  return function verify(thing, signature) {\n    return signature === '';\n  }\n}\n\nmodule.exports = function jwa(algorithm) {\n  var signerFactories = {\n    hs: createHmacSigner,\n    rs: createKeySigner,\n    ps: createPSSKeySigner,\n    es: createECDSASigner,\n    none: createNoneSigner,\n  }\n  var verifierFactories = {\n    hs: createHmacVerifier,\n    rs: createKeyVerifier,\n    ps: createPSSKeyVerifier,\n    es: createECDSAVerifer,\n    none: createNoneVerifier,\n  }\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);\n  if (!match)\n    throw typeError(MSG_INVALID_ALGORITHM, algorithm);\n  var algo = (match[1] || match[3]).toLowerCase();\n  var bits = match[2];\n\n  return {\n    sign: signerFactories[algo](bits),\n    verify: verifierFactories[algo](bits),\n  }\n};\n","/*global module*/\nvar Buffer = require('buffer').Buffer;\n\nmodule.exports = function toString(obj) {\n  if (typeof obj === 'string')\n    return obj;\n  if (typeof obj === 'number' || Buffer.isBuffer(obj))\n    return obj.toString();\n  return JSON.stringify(obj);\n};\n","/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\n\nfunction base64url(string, encoding) {\n  return Buffer\n    .from(string, encoding)\n    .toString('base64')\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction jwsSecuredInput(header, payload, encoding) {\n  encoding = encoding || 'utf8';\n  var encodedHeader = base64url(toString(header), 'binary');\n  var encodedPayload = base64url(toString(payload), encoding);\n  return util.format('%s.%s', encodedHeader, encodedPayload);\n}\n\nfunction jwsSign(opts) {\n  var header = opts.header;\n  var payload = opts.payload;\n  var secretOrKey = opts.secret || opts.privateKey;\n  var encoding = opts.encoding;\n  var algo = jwa(header.alg);\n  var securedInput = jwsSecuredInput(header, payload, encoding);\n  var signature = algo.sign(securedInput, secretOrKey);\n  return util.format('%s.%s', securedInput, signature);\n}\n\nfunction SignStream(opts) {\n  var secret = opts.secret||opts.privateKey||opts.key;\n  var secretStream = new DataStream(secret);\n  this.readable = true;\n  this.header = opts.header;\n  this.encoding = opts.encoding;\n  this.secret = this.privateKey = this.key = secretStream;\n  this.payload = new DataStream(opts.payload);\n  this.secret.once('close', function () {\n    if (!this.payload.writable && this.readable)\n      this.sign();\n  }.bind(this));\n\n  this.payload.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.sign();\n  }.bind(this));\n}\nutil.inherits(SignStream, Stream);\n\nSignStream.prototype.sign = function sign() {\n  try {\n    var signature = jwsSign({\n      header: this.header,\n      payload: this.payload.buffer,\n      secret: this.secret.buffer,\n      encoding: this.encoding\n    });\n    this.emit('done', signature);\n    this.emit('data', signature);\n    this.emit('end');\n    this.readable = false;\n    return signature;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nSignStream.sign = jwsSign;\n\nmodule.exports = SignStream;\n","/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\nvar JWS_REGEX = /^[a-zA-Z0-9\\-_]+?\\.[a-zA-Z0-9\\-_]+?\\.([a-zA-Z0-9\\-_]+)?$/;\n\nfunction isObject(thing) {\n  return Object.prototype.toString.call(thing) === '[object Object]';\n}\n\nfunction safeJsonParse(thing) {\n  if (isObject(thing))\n    return thing;\n  try { return JSON.parse(thing); }\n  catch (e) { return undefined; }\n}\n\nfunction headerFromJWS(jwsSig) {\n  var encodedHeader = jwsSig.split('.', 1)[0];\n  return safeJsonParse(Buffer.from(encodedHeader, 'base64').toString('binary'));\n}\n\nfunction securedInputFromJWS(jwsSig) {\n  return jwsSig.split('.', 2).join('.');\n}\n\nfunction signatureFromJWS(jwsSig) {\n  return jwsSig.split('.')[2];\n}\n\nfunction payloadFromJWS(jwsSig, encoding) {\n  encoding = encoding || 'utf8';\n  var payload = jwsSig.split('.')[1];\n  return Buffer.from(payload, 'base64').toString(encoding);\n}\n\nfunction isValidJws(string) {\n  return JWS_REGEX.test(string) && !!headerFromJWS(string);\n}\n\nfunction jwsVerify(jwsSig, algorithm, secretOrKey) {\n  if (!algorithm) {\n    var err = new Error(\"Missing algorithm parameter for jws.verify\");\n    err.code = \"MISSING_ALGORITHM\";\n    throw err;\n  }\n  jwsSig = toString(jwsSig);\n  var signature = signatureFromJWS(jwsSig);\n  var securedInput = securedInputFromJWS(jwsSig);\n  var algo = jwa(algorithm);\n  return algo.verify(securedInput, signature, secretOrKey);\n}\n\nfunction jwsDecode(jwsSig, opts) {\n  opts = opts || {};\n  jwsSig = toString(jwsSig);\n\n  if (!isValidJws(jwsSig))\n    return null;\n\n  var header = headerFromJWS(jwsSig);\n\n  if (!header)\n    return null;\n\n  var payload = payloadFromJWS(jwsSig);\n  if (header.typ === 'JWT' || opts.json)\n    payload = JSON.parse(payload, opts.encoding);\n\n  return {\n    header: header,\n    payload: payload,\n    signature: signatureFromJWS(jwsSig)\n  };\n}\n\nfunction VerifyStream(opts) {\n  opts = opts || {};\n  var secretOrKey = opts.secret||opts.publicKey||opts.key;\n  var secretStream = new DataStream(secretOrKey);\n  this.readable = true;\n  this.algorithm = opts.algorithm;\n  this.encoding = opts.encoding;\n  this.secret = this.publicKey = this.key = secretStream;\n  this.signature = new DataStream(opts.signature);\n  this.secret.once('close', function () {\n    if (!this.signature.writable && this.readable)\n      this.verify();\n  }.bind(this));\n\n  this.signature.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.verify();\n  }.bind(this));\n}\nutil.inherits(VerifyStream, Stream);\nVerifyStream.prototype.verify = function verify() {\n  try {\n    var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);\n    var obj = jwsDecode(this.signature.buffer, this.encoding);\n    this.emit('done', valid, obj);\n    this.emit('data', valid);\n    this.emit('end');\n    this.readable = false;\n    return valid;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nVerifyStream.decode = jwsDecode;\nVerifyStream.isValid = isValidJws;\nVerifyStream.verify = jwsVerify;\n\nmodule.exports = VerifyStream;\n","/*global exports*/\nvar SignStream = require('./lib/sign-stream');\nvar VerifyStream = require('./lib/verify-stream');\n\nvar ALGORITHMS = [\n  'HS256', 'HS384', 'HS512',\n  'RS256', 'RS384', 'RS512',\n  'PS256', 'PS384', 'PS512',\n  'ES256', 'ES384', 'ES512'\n];\n\nexports.ALGORITHMS = ALGORITHMS;\nexports.sign = SignStream.sign;\nexports.verify = VerifyStream.verify;\nexports.decode = VerifyStream.decode;\nexports.isValid = VerifyStream.isValid;\nexports.createSign = function createSign(opts) {\n  return new SignStream(opts);\n};\nexports.createVerify = function createVerify(opts) {\n  return new VerifyStream(opts);\n};\n","var JsonWebTokenError = function (message, error) {\n  Error.call(this, message);\n  if(Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  }\n  this.name = 'JsonWebTokenError';\n  this.message = message;\n  if (error) this.inner = error;\n};\n\nJsonWebTokenError.prototype = Object.create(Error.prototype);\nJsonWebTokenError.prototype.constructor = JsonWebTokenError;\n\nmodule.exports = JsonWebTokenError;\n","var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar NotBeforeError = function (message, date) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'NotBeforeError';\n  this.date = date;\n};\n\nNotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);\n\nNotBeforeError.prototype.constructor = NotBeforeError;\n\nmodule.exports = NotBeforeError;","var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar TokenExpiredError = function (message, expiredAt) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'TokenExpiredError';\n  this.expiredAt = expiredAt;\n};\n\nTokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);\n\nTokenExpiredError.prototype.constructor = TokenExpiredError;\n\nmodule.exports = TokenExpiredError;","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","var ms = require('ms');\n\nmodule.exports = function (time, iat) {\n  var timestamp = iat || Math.floor(Date.now() / 1000);\n\n  if (typeof time === 'string') {\n    var milliseconds = ms(time);\n    if (typeof milliseconds === 'undefined') {\n      return;\n    }\n    return Math.floor(timestamp + milliseconds / 1000);\n  } else if (typeof time === 'number') {\n    return timestamp + time;\n  } else {\n    return;\n  }\n\n};","exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar R = 0\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\nvar NUMERICIDENTIFIERLOOSE = R++\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')'\n\nvar MAINVERSIONLOOSE = R++\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')'\n\nvar PRERELEASEIDENTIFIERLOOSE = R++\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))'\n\nvar PRERELEASELOOSE = R++\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?'\n\nsrc[FULL] = '^' + FULLPLAIN + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?'\n\nvar LOOSE = R++\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$'\n\nvar GTLT = R++\nsrc[GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\nvar XRANGEIDENTIFIER = R++\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\nvar XRANGEPLAIN = R++\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?'\n\nvar XRANGEPLAINLOOSE = R++\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?'\n\nvar XRANGE = R++\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$'\nvar XRANGELOOSE = R++\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++\nsrc[LONETILDE] = '(?:~>?)'\n\nvar TILDETRIM = R++\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+'\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\nvar TILDE = R++\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'\nvar TILDELOOSE = R++\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++\nsrc[LONECARET] = '(?:\\\\^)'\n\nvar CARETTRIM = R++\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+'\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\nvar CARET = R++\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'\nvar CARETLOOSE = R++\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$'\nvar COMPARATOR = R++\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\nvar HYPHENRANGELOOSE = R++\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[LOOSE] : re[FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1]\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return thisComparators.every(function (thisComparator) {\n      return range.set.some(function (rangeComparators) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options)\n        })\n      })\n    })\n  })\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[CARETLOOSE] : re[CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '')\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  var match = version.match(re[COERCE])\n\n  if (match == null) {\n    return null\n  }\n\n  return parse(match[1] +\n    '.' + (match[2] || '0') +\n    '.' + (match[3] || '0'))\n}\n","var semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '^6.12.0 || >=8.0.0');\n","var JsonWebTokenError = require('./lib/JsonWebTokenError');\nvar NotBeforeError    = require('./lib/NotBeforeError');\nvar TokenExpiredError = require('./lib/TokenExpiredError');\nvar decode            = require('./decode');\nvar timespan          = require('./lib/timespan');\nvar PS_SUPPORTED      = require('./lib/psSupported');\nvar jws               = require('jws');\n\nvar PUB_KEY_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512'];\nvar RSA_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nvar HS_ALGS = ['HS256', 'HS384', 'HS512'];\n\nif (PS_SUPPORTED) {\n  PUB_KEY_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n  RSA_KEY_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nmodule.exports = function (jwtString, secretOrPublicKey, options, callback) {\n  if ((typeof options === 'function') && !callback) {\n    callback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  //clone this object since we are going to mutate it.\n  options = Object.assign({}, options);\n\n  var done;\n\n  if (callback) {\n    done = callback;\n  } else {\n    done = function(err, data) {\n      if (err) throw err;\n      return data;\n    };\n  }\n\n  if (options.clockTimestamp && typeof options.clockTimestamp !== 'number') {\n    return done(new JsonWebTokenError('clockTimestamp must be a number'));\n  }\n\n  if (options.nonce !== undefined && (typeof options.nonce !== 'string' || options.nonce.trim() === '')) {\n    return done(new JsonWebTokenError('nonce must be a non-empty string'));\n  }\n\n  var clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1000);\n\n  if (!jwtString){\n    return done(new JsonWebTokenError('jwt must be provided'));\n  }\n\n  if (typeof jwtString !== 'string') {\n    return done(new JsonWebTokenError('jwt must be a string'));\n  }\n\n  var parts = jwtString.split('.');\n\n  if (parts.length !== 3){\n    return done(new JsonWebTokenError('jwt malformed'));\n  }\n\n  var decodedToken;\n\n  try {\n    decodedToken = decode(jwtString, { complete: true });\n  } catch(err) {\n    return done(err);\n  }\n\n  if (!decodedToken) {\n    return done(new JsonWebTokenError('invalid token'));\n  }\n\n  var header = decodedToken.header;\n  var getSecret;\n\n  if(typeof secretOrPublicKey === 'function') {\n    if(!callback) {\n      return done(new JsonWebTokenError('verify must be called asynchronous if secret or public key is provided as a callback'));\n    }\n\n    getSecret = secretOrPublicKey;\n  }\n  else {\n    getSecret = function(header, secretCallback) {\n      return secretCallback(null, secretOrPublicKey);\n    };\n  }\n\n  return getSecret(header, function(err, secretOrPublicKey) {\n    if(err) {\n      return done(new JsonWebTokenError('error in secret or public key callback: ' + err.message));\n    }\n\n    var hasSignature = parts[2].trim() !== '';\n\n    if (!hasSignature && secretOrPublicKey){\n      return done(new JsonWebTokenError('jwt signature is required'));\n    }\n\n    if (hasSignature && !secretOrPublicKey) {\n      return done(new JsonWebTokenError('secret or public key must be provided'));\n    }\n\n    if (!hasSignature && !options.algorithms) {\n      options.algorithms = ['none'];\n    }\n\n    if (!options.algorithms) {\n      options.algorithms = ~secretOrPublicKey.toString().indexOf('BEGIN CERTIFICATE') ||\n        ~secretOrPublicKey.toString().indexOf('BEGIN PUBLIC KEY') ? PUB_KEY_ALGS :\n        ~secretOrPublicKey.toString().indexOf('BEGIN RSA PUBLIC KEY') ? RSA_KEY_ALGS : HS_ALGS;\n\n    }\n\n    if (!~options.algorithms.indexOf(decodedToken.header.alg)) {\n      return done(new JsonWebTokenError('invalid algorithm'));\n    }\n\n    var valid;\n\n    try {\n      valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey);\n    } catch (e) {\n      return done(e);\n    }\n\n    if (!valid) {\n      return done(new JsonWebTokenError('invalid signature'));\n    }\n\n    var payload = decodedToken.payload;\n\n    if (typeof payload.nbf !== 'undefined' && !options.ignoreNotBefore) {\n      if (typeof payload.nbf !== 'number') {\n        return done(new JsonWebTokenError('invalid nbf value'));\n      }\n      if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {\n        return done(new NotBeforeError('jwt not active', new Date(payload.nbf * 1000)));\n      }\n    }\n\n    if (typeof payload.exp !== 'undefined' && !options.ignoreExpiration) {\n      if (typeof payload.exp !== 'number') {\n        return done(new JsonWebTokenError('invalid exp value'));\n      }\n      if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('jwt expired', new Date(payload.exp * 1000)));\n      }\n    }\n\n    if (options.audience) {\n      var audiences = Array.isArray(options.audience) ? options.audience : [options.audience];\n      var target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];\n\n      var match = target.some(function (targetAudience) {\n        return audiences.some(function (audience) {\n          return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;\n        });\n      });\n\n      if (!match) {\n        return done(new JsonWebTokenError('jwt audience invalid. expected: ' + audiences.join(' or ')));\n      }\n    }\n\n    if (options.issuer) {\n      var invalid_issuer =\n              (typeof options.issuer === 'string' && payload.iss !== options.issuer) ||\n              (Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1);\n\n      if (invalid_issuer) {\n        return done(new JsonWebTokenError('jwt issuer invalid. expected: ' + options.issuer));\n      }\n    }\n\n    if (options.subject) {\n      if (payload.sub !== options.subject) {\n        return done(new JsonWebTokenError('jwt subject invalid. expected: ' + options.subject));\n      }\n    }\n\n    if (options.jwtid) {\n      if (payload.jti !== options.jwtid) {\n        return done(new JsonWebTokenError('jwt jwtid invalid. expected: ' + options.jwtid));\n      }\n    }\n\n    if (options.nonce) {\n      if (payload.nonce !== options.nonce) {\n        return done(new JsonWebTokenError('jwt nonce invalid. expected: ' + options.nonce));\n      }\n    }\n\n    if (options.maxAge) {\n      if (typeof payload.iat !== 'number') {\n        return done(new JsonWebTokenError('iat required when maxAge is specified'));\n      }\n\n      var maxAgeTimestamp = timespan(options.maxAge, payload.iat);\n      if (typeof maxAgeTimestamp === 'undefined') {\n        return done(new JsonWebTokenError('\"maxAge\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n      }\n      if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('maxAge exceeded', new Date(maxAgeTimestamp * 1000)));\n      }\n    }\n\n    if (options.complete === true) {\n      var signature = decodedToken.signature;\n\n      return done(null, {\n        header: header,\n        payload: payload,\n        signature: signature\n      });\n    }\n\n    return done(null, payload);\n  });\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = includes;\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && objectToString.call(value) == boolTag);\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isBoolean;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = isInteger;\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = once;\n","var timespan = require('./lib/timespan');\nvar PS_SUPPORTED = require('./lib/psSupported');\nvar jws = require('jws');\nvar includes = require('lodash.includes');\nvar isBoolean = require('lodash.isboolean');\nvar isInteger = require('lodash.isinteger');\nvar isNumber = require('lodash.isnumber');\nvar isPlainObject = require('lodash.isplainobject');\nvar isString = require('lodash.isstring');\nvar once = require('lodash.once');\n\nvar SUPPORTED_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512', 'none']\nif (PS_SUPPORTED) {\n  SUPPORTED_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nvar sign_options_schema = {\n  expiresIn: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"expiresIn\" should be a number of seconds or string representing a timespan' },\n  notBefore: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"notBefore\" should be a number of seconds or string representing a timespan' },\n  audience: { isValid: function(value) { return isString(value) || Array.isArray(value); }, message: '\"audience\" must be a string or array' },\n  algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '\"algorithm\" must be a valid string enum value' },\n  header: { isValid: isPlainObject, message: '\"header\" must be an object' },\n  encoding: { isValid: isString, message: '\"encoding\" must be a string' },\n  issuer: { isValid: isString, message: '\"issuer\" must be a string' },\n  subject: { isValid: isString, message: '\"subject\" must be a string' },\n  jwtid: { isValid: isString, message: '\"jwtid\" must be a string' },\n  noTimestamp: { isValid: isBoolean, message: '\"noTimestamp\" must be a boolean' },\n  keyid: { isValid: isString, message: '\"keyid\" must be a string' },\n  mutatePayload: { isValid: isBoolean, message: '\"mutatePayload\" must be a boolean' }\n};\n\nvar registered_claims_schema = {\n  iat: { isValid: isNumber, message: '\"iat\" should be a number of seconds' },\n  exp: { isValid: isNumber, message: '\"exp\" should be a number of seconds' },\n  nbf: { isValid: isNumber, message: '\"nbf\" should be a number of seconds' }\n};\n\nfunction validate(schema, allowUnknown, object, parameterName) {\n  if (!isPlainObject(object)) {\n    throw new Error('Expected \"' + parameterName + '\" to be a plain object.');\n  }\n  Object.keys(object)\n    .forEach(function(key) {\n      var validator = schema[key];\n      if (!validator) {\n        if (!allowUnknown) {\n          throw new Error('\"' + key + '\" is not allowed in \"' + parameterName + '\"');\n        }\n        return;\n      }\n      if (!validator.isValid(object[key])) {\n        throw new Error(validator.message);\n      }\n    });\n}\n\nfunction validateOptions(options) {\n  return validate(sign_options_schema, false, options, 'options');\n}\n\nfunction validatePayload(payload) {\n  return validate(registered_claims_schema, true, payload, 'payload');\n}\n\nvar options_to_payload = {\n  'audience': 'aud',\n  'issuer': 'iss',\n  'subject': 'sub',\n  'jwtid': 'jti'\n};\n\nvar options_for_objects = [\n  'expiresIn',\n  'notBefore',\n  'noTimestamp',\n  'audience',\n  'issuer',\n  'subject',\n  'jwtid',\n];\n\nmodule.exports = function (payload, secretOrPrivateKey, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else {\n    options = options || {};\n  }\n\n  var isObjectPayload = typeof payload === 'object' &&\n                        !Buffer.isBuffer(payload);\n\n  var header = Object.assign({\n    alg: options.algorithm || 'HS256',\n    typ: isObjectPayload ? 'JWT' : undefined,\n    kid: options.keyid\n  }, options.header);\n\n  function failure(err) {\n    if (callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  if (!secretOrPrivateKey && options.algorithm !== 'none') {\n    return failure(new Error('secretOrPrivateKey must have a value'));\n  }\n\n  if (typeof payload === 'undefined') {\n    return failure(new Error('payload is required'));\n  } else if (isObjectPayload) {\n    try {\n      validatePayload(payload);\n    }\n    catch (error) {\n      return failure(error);\n    }\n    if (!options.mutatePayload) {\n      payload = Object.assign({},payload);\n    }\n  } else {\n    var invalid_options = options_for_objects.filter(function (opt) {\n      return typeof options[opt] !== 'undefined';\n    });\n\n    if (invalid_options.length > 0) {\n      return failure(new Error('invalid ' + invalid_options.join(',') + ' option for ' + (typeof payload ) + ' payload'));\n    }\n  }\n\n  if (typeof payload.exp !== 'undefined' && typeof options.expiresIn !== 'undefined') {\n    return failure(new Error('Bad \"options.expiresIn\" option the payload already has an \"exp\" property.'));\n  }\n\n  if (typeof payload.nbf !== 'undefined' && typeof options.notBefore !== 'undefined') {\n    return failure(new Error('Bad \"options.notBefore\" option the payload already has an \"nbf\" property.'));\n  }\n\n  try {\n    validateOptions(options);\n  }\n  catch (error) {\n    return failure(error);\n  }\n\n  var timestamp = payload.iat || Math.floor(Date.now() / 1000);\n\n  if (options.noTimestamp) {\n    delete payload.iat;\n  } else if (isObjectPayload) {\n    payload.iat = timestamp;\n  }\n\n  if (typeof options.notBefore !== 'undefined') {\n    try {\n      payload.nbf = timespan(options.notBefore, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.nbf === 'undefined') {\n      return failure(new Error('\"notBefore\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  if (typeof options.expiresIn !== 'undefined' && typeof payload === 'object') {\n    try {\n      payload.exp = timespan(options.expiresIn, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.exp === 'undefined') {\n      return failure(new Error('\"expiresIn\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  Object.keys(options_to_payload).forEach(function (key) {\n    var claim = options_to_payload[key];\n    if (typeof options[key] !== 'undefined') {\n      if (typeof payload[claim] !== 'undefined') {\n        return failure(new Error('Bad \"options.' + key + '\" option. The payload already has an \"' + claim + '\" property.'));\n      }\n      payload[claim] = options[key];\n    }\n  });\n\n  var encoding = options.encoding || 'utf8';\n\n  if (typeof callback === 'function') {\n    callback = callback && once(callback);\n\n    jws.createSign({\n      header: header,\n      privateKey: secretOrPrivateKey,\n      payload: payload,\n      encoding: encoding\n    }).once('error', callback)\n      .once('done', function (signature) {\n        callback(null, signature);\n      });\n  } else {\n    return jws.sign({header: header, payload: payload, secret: secretOrPrivateKey, encoding: encoding});\n  }\n};\n","module.exports = {\n  decode: require('./decode'),\n  verify: require('./verify'),\n  sign: require('./sign'),\n  JsonWebTokenError: require('./lib/JsonWebTokenError'),\n  NotBeforeError: require('./lib/NotBeforeError'),\n  TokenExpiredError: require('./lib/TokenExpiredError'),\n};\n","var jws = require('jws');\n\nmodule.exports = function (jwt, options) {\n  options = options || {};\n  var decoded = jws.decode(jwt, options);\n  if (!decoded) { return null; }\n  var payload = decoded.payload;\n\n  //try parse the payload\n  if(typeof payload === 'string') {\n    try {\n      var obj = JSON.parse(payload);\n      if(obj !== null && typeof obj === 'object') {\n        payload = obj;\n      }\n    } catch (e) { }\n  }\n\n  //return header if `complete` option is enabled.  header includes claims\n  //such as `kid` and `alg` used to select the key within a JWKS needed to\n  //verify the signature\n  if (options.complete === true) {\n    return {\n      header: decoded.header,\n      payload: payload,\n      signature: decoded.signature\n    };\n  }\n  return payload;\n};\n","/**\r\n * Example to refresh tokens using https://github.com/auth0/node-jsonwebtoken\r\n * It was requested to be introduced at as part of the jsonwebtoken library,\r\n * since we feel it does not add too much value but it will add code to mantain\r\n * we won't include it.\r\n *\r\n * I create this gist just to help those who want to auto-refresh JWTs.\r\n */\r\nimport jsonwebtoken from 'jsonwebtoken';\r\nimport * as uuid from 'uuid';\r\n\r\nexport default class TokenGenerator {\r\n\r\n    constructor(privateKey, options) {\r\n        this.privateKey = privateKey;\r\n        this.options = options;\r\n    }\r\n\r\n    sign(payload) {\r\n        const jwtSignOptions = { ...this.options, jwtid: uuid.v4() };\r\n        return jsonwebtoken.sign(payload, this.privateKey, jwtSignOptions);\r\n    }\r\n\r\n    verify(token) {\r\n        return jsonwebtoken.verify(token, this.privateKey, this.options);\r\n    }\r\n\r\n    refresh(token) {\r\n        const payload = jsonwebtoken.verify(token, this.privateKey, this.options);\r\n        delete payload.sub;\r\n        delete payload.iss;\r\n        delete payload.aud;\r\n        delete payload.iat;\r\n        delete payload.exp;\r\n        delete payload.nbf;\r\n        delete payload.jti; //We are generating a new token, if you are using jwtid during signing, pass it in refreshOptions\r\n        const jwtSignOptions = { ...this.options, jwtid: uuid.v4() };\r\n        // The first signing converted all needed options into claims, they are already in the payload\r\n        return jsonwebtoken.sign(payload, this.privateKey, jwtSignOptions);\r\n    }\r\n}\r\n","import helmet from \"helmet\";\r\nimport express from \"express\";\r\nimport compression from \"compression\";\r\nimport cors from \"cors\";\r\nimport fileUpload from \"express-fileupload\";\r\nimport url from \"url\";\r\nimport lodash from \"lodash\";\r\nimport { JsonResponse, Utils } from \"../common/index.js\";\r\n\r\n/**\r\n * Clase servidor encargada de configurar las rutas.\r\n *\r\n * que el codigo se disperse entre diferentes proyectos.\r\n */\r\nexport default class Server {\r\n    /**\r\n     *\r\n     * @param {*} config\r\n     * @param {*} statics\r\n     * @param {*} routes\r\n     */\r\n    constructor(config, statics, routes) {\r\n        this.app = express();\r\n        this.express_config = lodash.defaultsDeep(config, {\r\n            helmet: true,\r\n            json: true,\r\n            urlencoded: true,\r\n            compression: true,\r\n            cors: { origin: true, credentials: true },\r\n            fileupload: true,\r\n            socketio: { transports: [\"websocket\"] },\r\n            traceRequests: false,\r\n        });\r\n        this.statics = statics;\r\n        this.routes = routes;\r\n    }\r\n\r\n    /**\r\n     * Inicializa el servidor\r\n     */\r\n    async initialize() {\r\n        this.config(this.express_config);\r\n        if (this.customizeExpress) {\r\n            await this.customizeExpress(this.app);\r\n        }\r\n        await this.configureRoutes(this.routes);\r\n        await this.errorHandler();\r\n    }\r\n\r\n    /**\r\n     * Funcion sobreescribible para personalizar los componentes cargados en Express\r\n     *\r\n     * Aqui se pueden poner cosas como:\r\n     *\r\n     * this.app.use(cookieParser())... etc\r\n     */\r\n    customizeExpress() {}\r\n\r\n    /**\r\n     * Se encarga de realizar la configuración inicial del servidor\r\n     *\r\n     */\r\n    config(config) {\r\n        if (config && config.helmet) {\r\n            //Security\r\n            this.app.use(helmet(config && lodash.isObject(config.helmet) && config.helmet));\r\n        }\r\n        if (config && config.json) {\r\n            //mount json form parser\r\n            this.app.use(express.json());\r\n        }\r\n\r\n        if (config && config.urlencoded) {\r\n            //mount query string parser\r\n            this.app.use(express.urlencoded({ extended: true }));\r\n        }\r\n        if (config && config.compression) {\r\n            // compress responses\r\n            this.app.use(compression());\r\n        }\r\n        if (config && config.cors) {\r\n            //Enable cors to allow external references\r\n            this.app.options(\"*\", cors(config && lodash.isObject(config.cors) && config.cors));\r\n            this.app.use(cors(config && lodash.isObject(config.cors) && config.cors));\r\n        }\r\n        if (config && config.fileupload) {\r\n            // upload middleware\r\n            this.app.use(fileUpload());\r\n        }\r\n\r\n        if (this.statics) {\r\n            //add static paths\r\n            for (const idx in this.statics) {\r\n                this.app.use(idx, express.static(this.statics[idx]));\r\n            }\r\n        }\r\n\r\n        //Logging\r\n        if (config && config.traceRequests === true && process.env.DISABLE_LOGGER != \"true\") {\r\n            this.app.use((request, response, next) => {\r\n                request.requestTime = Date.now();\r\n                response.on(\"finish\", () => {\r\n                    let pathname = url.parse(request.url).pathname;\r\n                    let end = Date.now() - request.requestTime;\r\n                    let user = (request && request.session && request.session.user_id) || \"\";\r\n\r\n                    console.debug(\"APIRequest[\" + process.pid + \"]::. [\" + request.method + \"] (user:\" + user + \")  \" + pathname + \" |-> took: \" + end + \" ms\");\r\n                    console.debug(JSON.stringify(request.body));\r\n                });\r\n                next();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Crea el cargador automatico de rutas\r\n     */\r\n    configureRoutes(routes) {\r\n        const router = express.Router();\r\n        this.app.use(router);\r\n\r\n        //create controllers\r\n        this.loadRoutes(this.app, routes);\r\n    }\r\n\r\n    /**\r\n     * Instancia la lista de rutas disponibles\r\n     * @param apps\r\n     * @returns {*}\r\n     */\r\n    loadRoutes(app, routes) {\r\n        if (!routes) return;\r\n\r\n        for (const route of routes) {\r\n            if (!route) {\r\n                console.warn(\"Empty route\");\r\n                continue;\r\n            }\r\n            let router = route.configure();\r\n\r\n            //perform autoconfig for base api crud operations\r\n            if (route.entity) {\r\n                router = route.configure(route.entity, { service: route.service, table: route.table });\r\n            }\r\n\r\n            //load shorthand routes\r\n            if (!lodash.isEmpty(route.routes)) {\r\n                const exAsync = Utils.expressHandler();\r\n                for (const path in route.routes) {\r\n                    const cfg = route.routes[path];\r\n                    for (const method in cfg) {\r\n                        const handler = cfg[method];\r\n                        if (Array.isArray(handler)) {\r\n                            //Securización (keycloak)\r\n                            router[method](path, handler[0], exAsync(handler[1]));\r\n                        } else {\r\n                            router[method](path, exAsync(handler));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (router) {\r\n                app.use(router);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Errores\r\n     */\r\n    errorHandler() {\r\n        // error handler\r\n        this.app.use((err, req, res, next) => {\r\n            let jsRes = new JsonResponse();\r\n            jsRes.success = false;\r\n            jsRes.message = err.message; //!FIXME protect error displaying in REST Responses\r\n            console.error(err);\r\n\r\n            res.status(500).json(jsRes.toJson());\r\n        });\r\n    }\r\n}\r\n","import http from \"http\";\r\nimport https from \"https\";\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nimport cluster from \"cluster\";\r\nimport { Server } from \"socket.io\";\r\nimport os from \"os\";\r\nimport { EventEmitter } from \"events\";\r\n\r\nimport ClusterMessages from \"cluster-messages\";\r\n\r\n/**\r\n * Inicializa la escucha del server en modo cluster\r\n */\r\nexport default class ClusterServer extends EventEmitter {\r\n    constructor(app) {\r\n        super();\r\n\r\n        if (!process.env.PORT) {\r\n            console.log(\"Using 3000 as default port. Customize via env PORT.\");\r\n        }\r\n        this.port = this.normalizePort(process.env.PORT || 3000);\r\n        this.clustered = process.env.CLUSTERED;\r\n        this.workers = [];\r\n        this.app = app;\r\n\r\n        this.executeOnlyMain = () => {};\r\n    }\r\n\r\n    setServerCls(cls) {\r\n        this.server = cls;\r\n    }\r\n\r\n    /**\r\n     * Iniciar el servidor en el puerto y con la configuración seleccionadas.\r\n     */\r\n    async start() {\r\n        if (this.clustered == \"true\") {\r\n            this.initClustered();\r\n        } else {\r\n            this.configureSocketIO();\r\n            this.executeOnlyMain();\r\n\r\n            await this.initUnclustered();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inicializa el servidor de socketio en el puerto siguiente al configurado.\r\n     *\r\n     * Se puede desactivar mediante la config socketio: false al realizar el App.init()\r\n     */\r\n    configureSocketIO() {\r\n        if (this.server.express_config && this.server.express_config.socketio) {\r\n            this.app.io = new Server(this.server.express_config && this.server.express_config.socketio);\r\n            this.app.io.listen(this.port + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inicializa la clase server encargada del control de las solicitudes en forma multiproceso.\r\n     *\r\n     */\r\n    async initClustered() {\r\n        //Launch cluster\r\n        if (cluster.isPrimary) {\r\n            this.configureSocketIO();\r\n\r\n            this.executeOnlyMain();\r\n\r\n            let messages = new ClusterMessages();\r\n            messages.on(\"event\", (msg, callback) => {\r\n                if (msg && msg.event) {\r\n                    if (process.env.DEBUG_EVENTS == true) {\r\n                        console.debug(`Received '${msg.event}' from ${msg.props.owner} at Master`);\r\n                    }\r\n                    //Desencadenar en el proceso principal tambien\r\n                    this.app.events.emit(msg.event, msg.props, callback);\r\n                }\r\n            });\r\n\r\n            //Count the machine's CPUs\r\n            const cpuCount = os.cpus().length;\r\n\r\n            //Create a worker for each CPU\r\n            for (let idx = 0; idx < cpuCount; idx += 1) {\r\n                this.initWorker();\r\n            }\r\n\r\n            //Listen for dying workers\r\n            cluster.on(\"exit\", (worker) => {\r\n                //Replace the dead worker, we're not sentimental\r\n                console.log(\"Worker \" + worker.id + \" died :(\");\r\n                this.initWorker();\r\n            });\r\n        } else {\r\n            await this.initUnclustered();\r\n            console.log(`Worker ${process.pid} started`);\r\n        }\r\n    }\r\n    /**\r\n     * Inicia un worker\r\n     */\r\n    initWorker() {\r\n        let worker = cluster.fork();\r\n        console.log(`Running worker ${worker.process.pid}`);\r\n\r\n        this.workers.push(worker);\r\n    }\r\n\r\n    /**\r\n     * Inicializa la clase server encargada del control de las solicitudes en un unico proceso.\r\n     *\r\n     */\r\n    async initUnclustered() {\r\n        this.server.port = this.port;\r\n        //create http server\r\n        let server = http.Server(this.server.app);\r\n\r\n        await this.server.initialize();\r\n\r\n        if (this.server.beforeListen) await this.server.beforeListen();\r\n        //listen on provided ports\r\n        server.listen(this.server.port);\r\n\r\n        if (this.server.afterListen) await this.server.afterListen();\r\n\r\n        //add error handler\r\n        server.on(\"error\", (err) => {\r\n            this.handleErrors(err, this.server.port);\r\n        });\r\n        //start listening on port\r\n        server.on(\"listening\", () => {\r\n            console.log(\"Server Worker running on port: \" + this.port + \"!\");\r\n            this.emit(\"listening\", this.port);\r\n        });\r\n\r\n        if (process.env.SSL && process.env.SSL == \"true\") {\r\n            if (!process.env.SSL_KEY || !process.env.SSL_CERT || !process.env.SSL_PASS) {\r\n                console.error(\"Invalid SSL configuration. SLL_KEY, SSL_CERT and SSL_PASS needed\");\r\n                process.exit(0);\r\n            }\r\n\r\n            var key = fs.readFileSync(path.resolve(process.cwd(), process.env.SSL_KEY || \"key.pem\"));\r\n            var cert = fs.readFileSync(path.resolve(process.cwd(), process.env.SSL_CERT || \"cert.pem\"));\r\n\r\n            var options = {\r\n                key: key,\r\n                cert: cert,\r\n                passphrase: process.env.SSL_PASS,\r\n            };\r\n\r\n            if (!process.env.SSL_PORT) {\r\n                console.log(\"Using 3443 as ssl default port. Customize via env SSL_PORT.\");\r\n            }\r\n            var sslPort = this.normalizePort(process.env.SSL_PORT || 3443);\r\n            var serverSsl = https.createServer(options, this.server.app);\r\n            serverSsl.listen(sslPort);\r\n            //add error handler\r\n            serverSsl.on(\"error\", (err) => {\r\n                this.handleErrors(err, sslPort);\r\n            });\r\n            //start listening on port\r\n            serverSsl.on(\"listening\", () => {\r\n                console.log(\"Server Worker running on port: \" + sslPort + \"!\");\r\n                this.emit(\"listening_ssl\", sslPort);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Controla los posibles errores de formato en el puerto\r\n     * @param val\r\n     * @returns {*}\r\n     */\r\n    normalizePort(val) {\r\n        let port = parseInt(val, 10);\r\n\r\n        if (isNaN(port)) {\r\n            //named pipe\r\n            return val;\r\n        }\r\n\r\n        if (port >= 0) {\r\n            //port number\r\n            return port;\r\n        }\r\n\r\n        return false;\r\n    }\r\n    /**\r\n     * Gestiona los errores en el listen del servidor\r\n     */\r\n    handleErrors(error, port) {\r\n        if (error.syscall !== \"listen\") {\r\n            throw error;\r\n        }\r\n\r\n        let bind = typeof port === \"string\" ? \"Pipe \" + port : \"Port \" + port;\r\n\r\n        //handle specific listen errors with friendly messages\r\n        switch (error.code) {\r\n            case \"EACCES\":\r\n                console.error(bind + \" requires elevated privileges\");\r\n                process.exit(1);\r\n                break;\r\n            case \"EADDRINUSE\":\r\n                console.error(bind + \" is already in use\");\r\n                process.exit(1);\r\n                break;\r\n            default:\r\n                throw error;\r\n        }\r\n    }\r\n}\r\n","import cluster from \"cluster\";\r\nimport { EventEmitter } from \"events\";\r\nimport ClusterMessages from \"cluster-messages\";\r\n\r\n/**\r\n * Clase encargada de la generacion de eventos.\r\n */\r\nexport default class EventHandler extends EventEmitter {\r\n    constructor(app) {\r\n        super();\r\n        this.messages = new ClusterMessages();\r\n\r\n        this.app = app; //Se recibe el singleton App para evitar referencias cruzadas\r\n\r\n        if (cluster.isWorker) {\r\n            // Levanto, en los worker, la escucha para recibir los eventos en broadcast de los demas hilos\r\n            this.messages.on(\"event\", (msg, callback) => {\r\n                if (msg && msg.event && process.pid !== msg.props.owner) {\r\n                    if (process.env.DEBUG_EVENTS == true) {\r\n                        console.debug(`Receiving broadcast ${msg.event} - ${process.pid}`);\r\n                    }\r\n                    super.emit(msg.event, { ...msg.props }, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sobreescribir el emitter para notificar a los hijos\r\n     *\r\n     * @param {*} evt\r\n     * @param {*} props\r\n     */\r\n    emit(evt, props, callback) {\r\n        //Desencadenar en local\r\n        super.emit(evt, props, callback);\r\n\r\n        if (evt && props && cluster.isWorker && process.pid !== props.owner) {\r\n            if (process.env.DEBUG_EVENTS == true) {\r\n                console.debug(`${evt} -> Firing from ${process.pid} to master`);\r\n            }\r\n            if (!props) {\r\n                props = {};\r\n            }\r\n            props.owner = process.pid;\r\n            this.messages.send(\"event\", { event: evt, props: { ...props } }, callback);\r\n        }\r\n\r\n        if (evt && props && cluster.isPrimary && this.app && this.app.server && this.app.server.workers) {\r\n            if (process.env.DEBUG_EVENTS == true) {\r\n                console.debug(`${evt} -> Firing from master to workers`);\r\n            }\r\n            this.messages.send(\"event\", { event: evt, props: { ...props } }, callback);\r\n        }\r\n    }\r\n}\r\n","import log4js from \"log4js\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport util from \"util\";\r\n\r\nconst { configure, getLogger } = log4js;\r\n\r\nexport default class Logger {\r\n    static async configure() {\r\n        const readfile = util.promisify(fs.readFile);\r\n\r\n        const json = await readfile(path.resolve(process.cwd(), \"./log4js.json\"), \"utf8\");\r\n\r\n        configure(JSON.parse(json));\r\n\r\n        //Nota para el futuro:\r\n        // Esto sobreescribe los metodos de console.log\r\n        // Es necesario que la sitaxis se mantenga tal cual....\r\n        (() => {\r\n            const log_logger = getLogger(\"log\");\r\n            const error_logger = getLogger(\"error\");\r\n            const debug_logger = getLogger(\"debug\");\r\n            console.log = function () {\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // log.apply(this, args);\r\n                log_logger.log(\"info\", args[0]);\r\n            };\r\n            console.error = function () {\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // error.apply(this, args);\r\n                error_logger.log(\"error\", args[0]);\r\n            };\r\n            console.info = function () {\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // info.apply(this, args);\r\n                log_logger.log(\"info\", args[0]);\r\n            };\r\n            console.debug = function () {\r\n                /*if (global.settings.debug.value) {*/\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // debug.apply(this, [args[1], args[2]]);\r\n                debug_logger.log(\"debug\", args[0]);\r\n            };\r\n\r\n            console.custom = function (logger, level, message) {\r\n                const custom_logger = getLogger(logger);\r\n                custom_logger.log(level, message);\r\n            };\r\n        })();\r\n    }\r\n}\r\n","import express from \"express\";\r\nimport url from \"url\";\r\nimport { JsonResponse, Utils } from \"../common/index.js\";\r\n\r\nimport { pathToRegexp } from \"path-to-regexp\";\r\n\r\nexport default class AuthController {\r\n    constructor(publicPathsList, AuthHandler) {\r\n        this.router = express.Router();\r\n        this.publicPathsList = [...publicPathsList, \"/login\"];\r\n\r\n        this.AuthHandler = AuthHandler;\r\n    }\r\n\r\n    configure() {\r\n        const exAsync = Utils.expressHandler();\r\n        this.router.use(exAsync((...args) => this.check(...args)));\r\n        this.router.post(\r\n            \"/login\",\r\n            exAsync((...args) => this.loginPost(...args))\r\n        );\r\n        this.router.post(\r\n            \"/logout\",\r\n            exAsync((...args) => this.logout(...args))\r\n        );\r\n\r\n        return this.router;\r\n    }\r\n\r\n    /**\r\n     * Controla que los usuarios tengan sesion para acceder a los metodos privados de la API\r\n     *\r\n     * @param {*} request\r\n     * @param {*} response\r\n     * @param {*} next\r\n     */\r\n    async check(request, response, next) {\r\n        try {\r\n            //Rutas ublicas\r\n            for (let path of this.publicPathsList) {\r\n                const expr = pathToRegexp(path);\r\n                if (expr.exec(url.parse(request.url).pathname) !== null) {\r\n                    return next();\r\n                }\r\n            }\r\n\r\n            if (await this.AuthHandler.check(request)) {\r\n                return next();\r\n            }\r\n\r\n            return response.status(403).json(new JsonResponse(false, null, \"Forbidden\").toJson());\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return response.status(403).json(new JsonResponse(false, null, \"Forbidden\").toJson());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Valida los credenciales de un usuario\r\n     *\r\n     * TODO logger console.custom(\"access\", INFO);\r\n     *\r\n     * @param {*} request\r\n     * @param {*} response\r\n     */\r\n    async loginPost(request, response) {\r\n        if (request.body.username) {\r\n            try {\r\n                let data = await this.AuthHandler.validate(request, request.body.username, request.body.password);\r\n                if (data) {\r\n                    return response.status(200).json(new JsonResponse(true, data).toJson());\r\n                }\r\n                return response.status(401).json(new JsonResponse(false, null, \"Unauthorized - Incorrect credentials\").toJson());\r\n            } catch (ex) {\r\n                console.error(ex);\r\n                return response.status(401).json(new JsonResponse(false, null, \"Unauthorized - Error, check log\").toJson());\r\n            }\r\n        }\r\n        return response.status(401).json(new JsonResponse(false, null, \"Unauthorized - Missing parameters\").toJson());\r\n    }\r\n\r\n    /**\r\n     * Cierra la sesion del usuario\r\n     *\r\n     * @param {*} request\r\n     * @param {*} response\r\n     */\r\n    async logout(request, response) {\r\n        if (this.AuthHandler.logout) {\r\n            //Depende de que el authHandler implementado pueda realizar esta accion\r\n            try {\r\n                await this.AuthHandler.logout(request);\r\n                return response.status(200).json(new JsonResponse(true).toJson());\r\n            } catch (ex) {\r\n                console.error(ex);\r\n                return response.status(500).json(new JsonResponse(false, null, ex).toJson());\r\n            }\r\n        }\r\n        return response.status(200).json(new JsonResponse(true).toJson());\r\n    }\r\n}\r\n","export default class IAuthHandler {\r\n    constructor() {\r\n        if (!this.check) {\r\n            throw new Error(\"AuthHandler must have 'check' vethod\");\r\n        }\r\n        if (!this.validate) {\r\n            throw new Error(\"AuthHandler must have 'validate' vethod\");\r\n        }\r\n        // logout method is optional\r\n    }\r\n}\r\n\r\n","import { TokenGenerator, Utils } from '../../common/index.js';\r\nimport IAuthHandler from '../IAuthHandler.js'\r\nimport lodash from 'lodash';\r\nimport moment from 'moment';\r\n\r\nexport default class JwtAuthHandler extends IAuthHandler {\r\n    constructor(UserDao) {\r\n        super();\r\n\r\n        this.tokenGenerator = new TokenGenerator(process.env.JWT_SECRET, { audience: process.env.JWT_AUDIENCE, issuer: process.env.JWT_ISSUER, subject: process.env.JWT_SUBJECT, algorithm: process.env.JWT_ALGORITHM, expiresIn: process.env.JWT_EXPIRES })\r\n\r\n        if (!UserDao) {\r\n            throw new Error(\"Need 'UserDao' for user validation. Create 'UserDao' class extending 'IUserDao'\");\r\n        }\r\n        this.userDao = UserDao;\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de realizar la comprobacion para validar si la sesion del usuario es válida\r\n     * \r\n     * @param {*} request \r\n     */\r\n    async check(request) {\r\n        if (request.headers.authorization) {\r\n            const token = (request.headers.authorization || '').split(' ')[1] || '';\r\n\r\n            if (!token) {\r\n                console.error(\"Token needed\");\r\n                return false;\r\n            }\r\n            try {\r\n                var decoded = this.tokenGenerator.verify(token);\r\n                const { sub, username, exp } = decoded;\r\n\r\n                if (!sub || !username || moment(exp).isAfter(new Date())) {\r\n                    return false;\r\n                }\r\n\r\n                //Si la sesion es valida, lo introducimos en el contexto de la solicitud\r\n                request.session = { ...request.session, ...decoded };\r\n                return true;\r\n            } catch (ex) {\r\n                console.error(ex);\r\n                return false;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Método encargado de realizar la validación de un usuario. Utiliza IUserDao como interfaz para la realización de la query a BD.\r\n     * \r\n     * @param {*} username \r\n     * @param {*} password \r\n     */\r\n    async validate(request, username, password) {\r\n\r\n        const user = await this.userDao.findByUsername(username);\r\n\r\n        if (user && user.username === username && user.password === Utils.encrypt(password)) {\r\n            return this.tokenGenerator.sign(lodash.omit(user, ['password']));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n}","import { Utils } from \"../../common/index.js\";\r\nimport IAuthHandler from \"../IAuthHandler.js\";\r\nimport lodash from \"lodash\";\r\n\r\n/**\r\n * Necesario:\r\n *  Instalar -->   express-session y algun session store\r\n * \r\n *  Mas info: https://www.npmjs.com/package/express-session\r\n * \r\n *  App.customizeExpress = () => {\r\n       this.app.use(session({\r\n            secret: 'keyboard cat',\r\n            resave: false,\r\n            saveUninitialized: true,\r\n            cookie: { secure: true }\r\n        }));\r\n    }\r\n */\r\n\r\nexport default class CookieAuthHandler extends IAuthHandler {\r\n    constructor(UserDao) {\r\n        super();\r\n\r\n        if (!UserDao) {\r\n            throw new Error(\"Need 'UserDao' for user validation. Create 'UserDao' class extending 'IUserDao'\");\r\n        }\r\n        this.userDao = UserDao;\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de realizar la comprobacion para validar si la sesion del usuario es válida\r\n     *\r\n     * @param {*} request\r\n     */\r\n    async check(request) {\r\n        if (request.headers.authorization) {\r\n            //Si se recibe por Auth Basic\r\n            const token = (request.headers.authorization || \"\").split(\" \")[1] || \"\";\r\n\r\n            const creds = Buffer.from(token, \"base64\").toString().split(\":\");\r\n            const login = creds[0];\r\n            const password = creds[1];\r\n\r\n            if (!(await this.validate(request, login, password))) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        if (request.session && request.session.username) {\r\n            //Si hay sesion almacenada\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Método encargado de realizar la validación de un usuario. Utiliza IUserDao como interfaz para la realización de la query a BD.\r\n     *\r\n     * @param {*} username\r\n     * @param {*} password\r\n     */\r\n    async validate(request, username, password) {\r\n        const user = await this.userDao.findByUsername(username);\r\n\r\n        if (user && user.username === username && user.password === Utils.encrypt(password)) {\r\n            request.session = { ...request.session, ...lodash.omit(user, [\"password\"]) };\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} request\r\n     */\r\n    logout(request) {\r\n        return new Promise((resolve) => {\r\n            if (request.session) {\r\n                request.session.destroy(resolve);\r\n            }\r\n        });\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass TimeoutError extends Error {\r\n}\r\nexports.TimeoutError = TimeoutError;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass PromiseInspection {\r\n    constructor(args) {\r\n        this._value = args.value;\r\n        this._error = args.error;\r\n    }\r\n    value() {\r\n        return this._value;\r\n    }\r\n    reason() {\r\n        return this._error;\r\n    }\r\n    isRejected() {\r\n        return !!this._error;\r\n    }\r\n    isFulfilled() {\r\n        return !!this._value;\r\n    }\r\n}\r\nexports.PromiseInspection = PromiseInspection;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst PromiseInspection_1 = require(\"./PromiseInspection\");\r\nfunction defer() {\r\n    let resolve = null;\r\n    let reject = null;\r\n    const promise = new Promise((resolver, rejecter) => {\r\n        resolve = resolver;\r\n        reject = rejecter;\r\n    });\r\n    return {\r\n        promise,\r\n        resolve,\r\n        reject\r\n    };\r\n}\r\nexports.defer = defer;\r\nfunction now() {\r\n    return Date.now();\r\n}\r\nexports.now = now;\r\nfunction duration(t1, t2) {\r\n    return Math.abs(t2 - t1);\r\n}\r\nexports.duration = duration;\r\nfunction checkOptionalTime(time) {\r\n    if (typeof time === 'undefined') {\r\n        return true;\r\n    }\r\n    return checkRequiredTime(time);\r\n}\r\nexports.checkOptionalTime = checkOptionalTime;\r\nfunction checkRequiredTime(time) {\r\n    return typeof time === 'number' && time === Math.round(time) && time > 0;\r\n}\r\nexports.checkRequiredTime = checkRequiredTime;\r\nfunction delay(millis) {\r\n    return new Promise(resolve => setTimeout(resolve, millis));\r\n}\r\nexports.delay = delay;\r\nfunction reflect(promise) {\r\n    return promise\r\n        .then(value => {\r\n        return new PromiseInspection_1.PromiseInspection({ value });\r\n    })\r\n        .catch(error => {\r\n        return new PromiseInspection_1.PromiseInspection({ error });\r\n    });\r\n}\r\nexports.reflect = reflect;\r\nfunction tryPromise(cb) {\r\n    try {\r\n        const result = cb();\r\n        return Promise.resolve(result);\r\n    }\r\n    catch (err) {\r\n        return Promise.reject(err);\r\n    }\r\n}\r\nexports.tryPromise = tryPromise;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst TimeoutError_1 = require(\"./TimeoutError\");\r\nconst utils_1 = require(\"./utils\");\r\nclass PendingOperation {\r\n    constructor(timeoutMillis) {\r\n        this.timeoutMillis = timeoutMillis;\r\n        this.deferred = utils_1.defer();\r\n        this.possibleTimeoutCause = null;\r\n        this.isRejected = false;\r\n        this.promise = timeout(this.deferred.promise, timeoutMillis).catch(err => {\r\n            if (err instanceof TimeoutError_1.TimeoutError) {\r\n                if (this.possibleTimeoutCause) {\r\n                    err = new TimeoutError_1.TimeoutError(this.possibleTimeoutCause.message);\r\n                }\r\n                else {\r\n                    err = new TimeoutError_1.TimeoutError('operation timed out for an unknown reason');\r\n                }\r\n            }\r\n            this.isRejected = true;\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n    abort() {\r\n        this.reject(new Error('aborted'));\r\n    }\r\n    reject(err) {\r\n        this.deferred.reject(err);\r\n    }\r\n    resolve(value) {\r\n        this.deferred.resolve(value);\r\n    }\r\n}\r\nexports.PendingOperation = PendingOperation;\r\nfunction timeout(promise, time) {\r\n    return new Promise((resolve, reject) => {\r\n        const timeoutHandle = setTimeout(() => reject(new TimeoutError_1.TimeoutError()), time);\r\n        promise\r\n            .then(result => {\r\n            clearTimeout(timeoutHandle);\r\n            resolve(result);\r\n        })\r\n            .catch(err => {\r\n            clearTimeout(timeoutHandle);\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = require(\"./utils\");\r\nclass Resource {\r\n    constructor(resource) {\r\n        this.resource = resource;\r\n        this.resource = resource;\r\n        this.timestamp = utils_1.now();\r\n        this.deferred = utils_1.defer();\r\n    }\r\n    get promise() {\r\n        return this.deferred.promise;\r\n    }\r\n    resolve() {\r\n        this.deferred.resolve(undefined);\r\n        return new Resource(this.resource);\r\n    }\r\n}\r\nexports.Resource = Resource;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst PendingOperation_1 = require(\"./PendingOperation\");\r\nconst Resource_1 = require(\"./Resource\");\r\nconst utils_1 = require(\"./utils\");\r\nconst events_1 = require(\"events\");\r\nconst timers_1 = require(\"timers\");\r\nclass Pool {\r\n    constructor(opt) {\r\n        this.destroyed = false;\r\n        this.emitter = new events_1.EventEmitter();\r\n        opt = opt || {};\r\n        if (!opt.create) {\r\n            throw new Error('Tarn: opt.create function most be provided');\r\n        }\r\n        if (!opt.destroy) {\r\n            throw new Error('Tarn: opt.destroy function most be provided');\r\n        }\r\n        if (typeof opt.min !== 'number' || opt.min < 0 || opt.min !== Math.round(opt.min)) {\r\n            throw new Error('Tarn: opt.min must be an integer >= 0');\r\n        }\r\n        if (typeof opt.max !== 'number' || opt.max <= 0 || opt.max !== Math.round(opt.max)) {\r\n            throw new Error('Tarn: opt.max must be an integer > 0');\r\n        }\r\n        if (opt.min > opt.max) {\r\n            throw new Error('Tarn: opt.max is smaller than opt.min');\r\n        }\r\n        if (!utils_1.checkOptionalTime(opt.acquireTimeoutMillis)) {\r\n            throw new Error('Tarn: invalid opt.acquireTimeoutMillis ' + JSON.stringify(opt.acquireTimeoutMillis));\r\n        }\r\n        if (!utils_1.checkOptionalTime(opt.createTimeoutMillis)) {\r\n            throw new Error('Tarn: invalid opt.createTimeoutMillis ' + JSON.stringify(opt.createTimeoutMillis));\r\n        }\r\n        if (!utils_1.checkOptionalTime(opt.destroyTimeoutMillis)) {\r\n            throw new Error('Tarn: invalid opt.destroyTimeoutMillis ' + JSON.stringify(opt.destroyTimeoutMillis));\r\n        }\r\n        if (!utils_1.checkOptionalTime(opt.idleTimeoutMillis)) {\r\n            throw new Error('Tarn: invalid opt.idleTimeoutMillis ' + JSON.stringify(opt.idleTimeoutMillis));\r\n        }\r\n        if (!utils_1.checkOptionalTime(opt.reapIntervalMillis)) {\r\n            throw new Error('Tarn: invalid opt.reapIntervalMillis ' + JSON.stringify(opt.reapIntervalMillis));\r\n        }\r\n        if (!utils_1.checkOptionalTime(opt.createRetryIntervalMillis)) {\r\n            throw new Error('Tarn: invalid opt.createRetryIntervalMillis ' +\r\n                JSON.stringify(opt.createRetryIntervalMillis));\r\n        }\r\n        const allowedKeys = {\r\n            create: true,\r\n            validate: true,\r\n            destroy: true,\r\n            log: true,\r\n            min: true,\r\n            max: true,\r\n            acquireTimeoutMillis: true,\r\n            createTimeoutMillis: true,\r\n            destroyTimeoutMillis: true,\r\n            idleTimeoutMillis: true,\r\n            reapIntervalMillis: true,\r\n            createRetryIntervalMillis: true,\r\n            propagateCreateError: true\r\n        };\r\n        for (const key of Object.keys(opt)) {\r\n            if (!allowedKeys[key]) {\r\n                throw new Error(`Tarn: unsupported option opt.${key}`);\r\n            }\r\n        }\r\n        this.creator = opt.create;\r\n        this.destroyer = opt.destroy;\r\n        this.validate = typeof opt.validate === 'function' ? opt.validate : () => true;\r\n        this.log = opt.log || (() => { });\r\n        this.acquireTimeoutMillis = opt.acquireTimeoutMillis || 30000;\r\n        this.createTimeoutMillis = opt.createTimeoutMillis || 30000;\r\n        this.destroyTimeoutMillis = opt.destroyTimeoutMillis || 5000;\r\n        this.idleTimeoutMillis = opt.idleTimeoutMillis || 30000;\r\n        this.reapIntervalMillis = opt.reapIntervalMillis || 1000;\r\n        this.createRetryIntervalMillis = opt.createRetryIntervalMillis || 200;\r\n        this.propagateCreateError = !!opt.propagateCreateError;\r\n        this.min = opt.min;\r\n        this.max = opt.max;\r\n        // All the resources, which are either already acquired or which are\r\n        // considered for being passed to acquire in async validation phase.\r\n        this.used = [];\r\n        // All the resources, which are either just created and free or returned\r\n        // back to pool after using.\r\n        this.free = [];\r\n        this.pendingCreates = [];\r\n        this.pendingAcquires = [];\r\n        this.pendingDestroys = [];\r\n        // When acquire is pending, but also still in validation phase\r\n        this.pendingValidations = [];\r\n        this.destroyed = false;\r\n        this.interval = null;\r\n        this.eventId = 1;\r\n    }\r\n    numUsed() {\r\n        return this.used.length;\r\n    }\r\n    numFree() {\r\n        return this.free.length;\r\n    }\r\n    numPendingAcquires() {\r\n        return this.pendingAcquires.length;\r\n    }\r\n    numPendingValidations() {\r\n        return this.pendingValidations.length;\r\n    }\r\n    numPendingCreates() {\r\n        return this.pendingCreates.length;\r\n    }\r\n    acquire() {\r\n        const eventId = this.eventId++;\r\n        this._executeEventHandlers('acquireRequest', eventId);\r\n        const pendingAcquire = new PendingOperation_1.PendingOperation(this.acquireTimeoutMillis);\r\n        this.pendingAcquires.push(pendingAcquire);\r\n        // If the acquire fails for whatever reason\r\n        // remove it from the pending queue.\r\n        pendingAcquire.promise = pendingAcquire.promise\r\n            .then(resource => {\r\n            this._executeEventHandlers('acquireSuccess', eventId, resource);\r\n            return resource;\r\n        })\r\n            .catch(err => {\r\n            this._executeEventHandlers('acquireFail', eventId, err);\r\n            remove(this.pendingAcquires, pendingAcquire);\r\n            return Promise.reject(err);\r\n        });\r\n        this._tryAcquireOrCreate();\r\n        return pendingAcquire;\r\n    }\r\n    release(resource) {\r\n        this._executeEventHandlers('release', resource);\r\n        for (let i = 0, l = this.used.length; i < l; ++i) {\r\n            const used = this.used[i];\r\n            if (used.resource === resource) {\r\n                this.used.splice(i, 1);\r\n                this.free.push(used.resolve());\r\n                this._tryAcquireOrCreate();\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isEmpty() {\r\n        return ([\r\n            this.numFree(),\r\n            this.numUsed(),\r\n            this.numPendingAcquires(),\r\n            this.numPendingValidations(),\r\n            this.numPendingCreates()\r\n        ].reduce((total, value) => total + value) === 0);\r\n    }\r\n    /**\r\n     * Reaping cycle.\r\n     */\r\n    check() {\r\n        const timestamp = utils_1.now();\r\n        const newFree = [];\r\n        const minKeep = this.min - this.used.length;\r\n        const maxDestroy = this.free.length - minKeep;\r\n        let numDestroyed = 0;\r\n        this.free.forEach(free => {\r\n            if (utils_1.duration(timestamp, free.timestamp) >= this.idleTimeoutMillis &&\r\n                numDestroyed < maxDestroy) {\r\n                numDestroyed++;\r\n                this._destroy(free.resource);\r\n            }\r\n            else {\r\n                newFree.push(free);\r\n            }\r\n        });\r\n        this.free = newFree;\r\n        // Pool is completely empty, stop reaping.\r\n        // Next .acquire will start reaping interval again.\r\n        if (this.isEmpty()) {\r\n            this._stopReaping();\r\n        }\r\n    }\r\n    destroy() {\r\n        const eventId = this.eventId++;\r\n        this._executeEventHandlers('poolDestroyRequest', eventId);\r\n        this._stopReaping();\r\n        this.destroyed = true;\r\n        // First wait for all the pending creates get ready.\r\n        return utils_1.reflect(Promise.all(this.pendingCreates.map(create => utils_1.reflect(create.promise)))\r\n            .then(() => {\r\n            // eslint-disable-next-line\r\n            return new Promise((resolve, reject) => {\r\n                // poll every 100ms and wait that all validations are ready\r\n                if (this.numPendingValidations() === 0) {\r\n                    resolve();\r\n                    return;\r\n                }\r\n                const interval = setInterval(() => {\r\n                    if (this.numPendingValidations() === 0) {\r\n                        timers_1.clearInterval(interval);\r\n                        resolve();\r\n                    }\r\n                }, 100);\r\n            });\r\n        })\r\n            .then(() => {\r\n            // Wait for all the used resources to be freed.\r\n            return Promise.all(this.used.map(used => utils_1.reflect(used.promise)));\r\n        })\r\n            .then(() => {\r\n            // Abort all pending acquires.\r\n            return Promise.all(this.pendingAcquires.map(acquire => {\r\n                acquire.abort();\r\n                return utils_1.reflect(acquire.promise);\r\n            }));\r\n        })\r\n            .then(() => {\r\n            // Now we can destroy all the freed resources.\r\n            return Promise.all(this.free.map(free => utils_1.reflect(this._destroy(free.resource))));\r\n        })\r\n            .then(() => {\r\n            // Also wait rest of the pending destroys to finish\r\n            return Promise.all(this.pendingDestroys.map(pd => pd.promise));\r\n        })\r\n            .then(() => {\r\n            this.free = [];\r\n            this.pendingAcquires = [];\r\n        })).then(res => {\r\n            this._executeEventHandlers('poolDestroySuccess', eventId);\r\n            this.emitter.removeAllListeners();\r\n            return res;\r\n        });\r\n    }\r\n    on(event, listener) {\r\n        this.emitter.on(event, listener);\r\n    }\r\n    removeListener(event, listener) {\r\n        this.emitter.removeListener(event, listener);\r\n    }\r\n    removeAllListeners(event) {\r\n        this.emitter.removeAllListeners(event);\r\n    }\r\n    /**\r\n     * The most important method that is called always when resources\r\n     * are created / destroyed / acquired / released. In other words\r\n     * every time when resources are moved from used to free or vice\r\n     * versa.\r\n     *\r\n     * Either assigns free resources to pendingAcquires or creates new\r\n     * resources if there is room for it in the pool.\r\n     */\r\n    _tryAcquireOrCreate() {\r\n        if (this.destroyed) {\r\n            return;\r\n        }\r\n        if (this._hasFreeResources()) {\r\n            this._doAcquire();\r\n        }\r\n        else if (this._shouldCreateMoreResources()) {\r\n            this._doCreate();\r\n        }\r\n    }\r\n    _hasFreeResources() {\r\n        return this.free.length > 0;\r\n    }\r\n    _doAcquire() {\r\n        // Acquire as many pending acquires as possible concurrently\r\n        while (this._canAcquire()) {\r\n            // To allow async validation, we actually need to move free resource\r\n            // and pending acquire temporary from their respective arrays and depending\r\n            // on validation result to either leave the free resource to used resources array\r\n            // or destroy the free resource if validation did fail.\r\n            const pendingAcquire = this.pendingAcquires.shift();\r\n            const free = this.free.pop();\r\n            if (free === undefined || pendingAcquire === undefined) {\r\n                const errMessage = 'this.free was empty while trying to acquire resource';\r\n                this.log(`Tarn: ${errMessage}`, 'warn');\r\n                throw new Error(`Internal error, should never happen. ${errMessage}`);\r\n            }\r\n            // Make sure that pendingAcquire that is being validated is not lost and\r\n            // can be freed when pool is destroyed.\r\n            this.pendingValidations.push(pendingAcquire);\r\n            // Must be added here pre-emptively to prevent logic that decides\r\n            // if new resources are created will keep on working correctly.\r\n            this.used.push(free);\r\n            // if acquire fails also pending validation, must be aborted so that pre reserved\r\n            // resource will be returned to free resources immediately\r\n            const abortAbleValidation = new PendingOperation_1.PendingOperation(this.acquireTimeoutMillis);\r\n            // eslint-disable-next-line\r\n            pendingAcquire.promise.catch(err => {\r\n                abortAbleValidation.abort();\r\n            });\r\n            abortAbleValidation.promise\r\n                .catch(err => {\r\n                // There's nothing we can do here but log the error. This would otherwise\r\n                // leak out as an unhandled exception.\r\n                this.log('Tarn: resource validator threw an exception ' + err.stack, 'warn');\r\n                return false;\r\n            })\r\n                .then(validationSuccess => {\r\n                try {\r\n                    if (validationSuccess && !pendingAcquire.isRejected) {\r\n                        // At least one active resource exist, start reaping.\r\n                        this._startReaping();\r\n                        pendingAcquire.resolve(free.resource);\r\n                    }\r\n                    else {\r\n                        remove(this.used, free);\r\n                        // Only destroy the resource if the validation has failed\r\n                        if (!validationSuccess) {\r\n                            this._destroy(free.resource);\r\n                            // Since we destroyed an invalid resource and were not able to fulfill\r\n                            // all the pending acquires, we may need to create new ones or at\r\n                            // least run this acquire loop again to verify it. But not immediately\r\n                            // to prevent starving event loop.\r\n                            setTimeout(() => {\r\n                                this._tryAcquireOrCreate();\r\n                            }, 0);\r\n                        }\r\n                        else {\r\n                            this.free.push(free);\r\n                        }\r\n                        // is acquire was canceled, failed or timed out already\r\n                        // no need to return it to pending queries\r\n                        if (!pendingAcquire.isRejected) {\r\n                            this.pendingAcquires.unshift(pendingAcquire);\r\n                        }\r\n                    }\r\n                }\r\n                finally {\r\n                    remove(this.pendingValidations, pendingAcquire);\r\n                }\r\n            });\r\n            // try to validate\r\n            this._validateResource(free.resource)\r\n                .then(validationSuccess => {\r\n                abortAbleValidation.resolve(validationSuccess);\r\n            })\r\n                .catch(err => {\r\n                abortAbleValidation.reject(err);\r\n            });\r\n        }\r\n    }\r\n    _canAcquire() {\r\n        return this.free.length > 0 && this.pendingAcquires.length > 0;\r\n    }\r\n    _validateResource(resource) {\r\n        try {\r\n            return Promise.resolve(this.validate(resource));\r\n        }\r\n        catch (err) {\r\n            // prevent leaking of sync exception\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    _shouldCreateMoreResources() {\r\n        return (this.used.length + this.pendingCreates.length < this.max &&\r\n            this.pendingCreates.length < this.pendingAcquires.length);\r\n    }\r\n    _doCreate() {\r\n        const pendingAcquiresBeforeCreate = this.pendingAcquires.slice();\r\n        const pendingCreate = this._create();\r\n        pendingCreate.promise\r\n            .then(() => {\r\n            // Not returned on purpose.\r\n            this._tryAcquireOrCreate();\r\n            return null;\r\n        })\r\n            .catch(err => {\r\n            if (this.propagateCreateError && this.pendingAcquires.length !== 0) {\r\n                // If propagateCreateError is true, we don't retry the create\r\n                // but reject the first pending acquire immediately. Intentionally\r\n                // use `this.pendingAcquires` instead of `pendingAcquiresBeforeCreate`\r\n                // in case some acquires in pendingAcquiresBeforeCreate have already\r\n                // been resolved.\r\n                this.pendingAcquires[0].reject(err);\r\n            }\r\n            // Save the create error to all pending acquires so that we can use it\r\n            // as the error to reject the acquire if it times out.\r\n            pendingAcquiresBeforeCreate.forEach(pendingAcquire => {\r\n                pendingAcquire.possibleTimeoutCause = err;\r\n            });\r\n            // Not returned on purpose.\r\n            utils_1.delay(this.createRetryIntervalMillis).then(() => this._tryAcquireOrCreate());\r\n        });\r\n    }\r\n    _create() {\r\n        const eventId = this.eventId++;\r\n        this._executeEventHandlers('createRequest', eventId);\r\n        const pendingCreate = new PendingOperation_1.PendingOperation(this.createTimeoutMillis);\r\n        // If an error occurs (likely a create timeout) remove this creation from\r\n        // the list of pending creations so we try to create a new one.\r\n        pendingCreate.promise = pendingCreate.promise.catch(err => {\r\n            if (remove(this.pendingCreates, pendingCreate)) {\r\n                // TODO: figure out more consistent way for different error handlers in next rewrite\r\n                this._executeEventHandlers('createFail', eventId, err);\r\n            }\r\n            throw err;\r\n        });\r\n        this.pendingCreates.push(pendingCreate);\r\n        callbackOrPromise(this.creator)\r\n            .then(resource => {\r\n            if (pendingCreate.isRejected) {\r\n                this.destroyer(resource);\r\n                return null;\r\n            }\r\n            remove(this.pendingCreates, pendingCreate);\r\n            this.free.push(new Resource_1.Resource(resource));\r\n            // Not returned on purpose.\r\n            pendingCreate.resolve(resource);\r\n            this._executeEventHandlers('createSuccess', eventId, resource);\r\n            return null;\r\n        })\r\n            .catch(err => {\r\n            if (pendingCreate.isRejected) {\r\n                return null;\r\n            }\r\n            if (remove(this.pendingCreates, pendingCreate)) {\r\n                this._executeEventHandlers('createFail', eventId, err);\r\n            }\r\n            // Not returned on purpose.\r\n            pendingCreate.reject(err);\r\n            return null;\r\n        });\r\n        return pendingCreate;\r\n    }\r\n    _destroy(resource) {\r\n        const eventId = this.eventId++;\r\n        this._executeEventHandlers('destroyRequest', eventId, resource);\r\n        // this.destroyer can be both synchronous and asynchronous.\r\n        // so we wrap it to promise to get all exceptions through same pipeline\r\n        const pendingDestroy = new PendingOperation_1.PendingOperation(this.destroyTimeoutMillis);\r\n        const retVal = Promise.resolve().then(() => this.destroyer(resource));\r\n        retVal\r\n            .then(() => {\r\n            pendingDestroy.resolve(resource);\r\n        })\r\n            .catch((err) => {\r\n            pendingDestroy.reject(err);\r\n        });\r\n        this.pendingDestroys.push(pendingDestroy);\r\n        // In case of an error there's nothing we can do here but log it.\r\n        return pendingDestroy.promise\r\n            .then(res => {\r\n            this._executeEventHandlers('destroySuccess', eventId, resource);\r\n            return res;\r\n        })\r\n            .catch(err => this._logDestroyerError(eventId, resource, err))\r\n            .then(res => {\r\n            const index = this.pendingDestroys.findIndex(pd => pd === pendingDestroy);\r\n            this.pendingDestroys.splice(index, 1);\r\n            return res;\r\n        });\r\n    }\r\n    _logDestroyerError(eventId, resource, err) {\r\n        this._executeEventHandlers('destroyFail', eventId, resource, err);\r\n        this.log('Tarn: resource destroyer threw an exception ' + err.stack, 'warn');\r\n    }\r\n    _startReaping() {\r\n        if (!this.interval) {\r\n            this._executeEventHandlers('startReaping');\r\n            this.interval = setInterval(() => this.check(), this.reapIntervalMillis);\r\n        }\r\n    }\r\n    _stopReaping() {\r\n        if (this.interval !== null) {\r\n            this._executeEventHandlers('stopReaping');\r\n            timers_1.clearInterval(this.interval);\r\n        }\r\n        this.interval = null;\r\n    }\r\n    _executeEventHandlers(eventName, ...args) {\r\n        const listeners = this.emitter.listeners(eventName);\r\n        // just calling .emit() would stop running rest of the listeners if one them fails\r\n        listeners.forEach(listener => {\r\n            try {\r\n                listener(...args);\r\n            }\r\n            catch (err) {\r\n                // There's nothing we can do here but log the error. This would otherwise\r\n                // leak out as an unhandled exception.\r\n                this.log(`Tarn: event handler \"${eventName}\" threw an exception ${err.stack}`, 'warn');\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.Pool = Pool;\r\nfunction remove(arr, item) {\r\n    const idx = arr.indexOf(item);\r\n    if (idx === -1) {\r\n        return false;\r\n    }\r\n    else {\r\n        arr.splice(idx, 1);\r\n        return true;\r\n    }\r\n}\r\nfunction callbackOrPromise(func) {\r\n    return new Promise((resolve, reject) => {\r\n        const callback = (err, resource) => {\r\n            if (err) {\r\n                reject(err);\r\n            }\r\n            else {\r\n                resolve(resource);\r\n            }\r\n        };\r\n        utils_1.tryPromise(() => func(callback))\r\n            .then(res => {\r\n            // If the result is falsy, we assume that the callback will\r\n            // be called instead of interpreting the falsy value as a\r\n            // result value.\r\n            if (res) {\r\n                resolve(res);\r\n            }\r\n        })\r\n            .catch(err => {\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Pool_1 = require(\"./Pool\");\r\nexports.Pool = Pool_1.Pool;\r\nconst TimeoutError_1 = require(\"./TimeoutError\");\r\nexports.TimeoutError = TimeoutError_1.TimeoutError;\r\nmodule.exports = {\r\n    Pool: Pool_1.Pool,\r\n    TimeoutError: TimeoutError_1.TimeoutError\r\n};\r\n","/*eslint max-len: 0, no-var:0 */\n\nconst charsRegex = /[\\0\\b\\t\\n\\r\\x1a\"'\\\\]/g; // eslint-disable-line no-control-regex\nconst charsMap = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\t': '\\\\t',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\x1a': '\\\\Z',\n  '\"': '\\\\\"',\n  \"'\": \"\\\\'\",\n  '\\\\': '\\\\\\\\',\n};\n\nfunction wrapEscape(escapeFn) {\n  return function finalEscape(val, ctx = {}) {\n    return escapeFn(val, finalEscape, ctx);\n  };\n}\n\nfunction makeEscape(config = {}) {\n  const finalEscapeDate = config.escapeDate || dateToString;\n  const finalEscapeArray = config.escapeArray || arrayToList;\n  const finalEscapeBuffer = config.escapeBuffer || bufferToString;\n  const finalEscapeString = config.escapeString || escapeString;\n  const finalEscapeObject = config.escapeObject || escapeObject;\n  const finalWrap = config.wrap || wrapEscape;\n\n  function escapeFn(val, finalEscape, ctx) {\n    if (val === undefined || val === null) {\n      return 'NULL';\n    }\n    switch (typeof val) {\n      case 'boolean':\n        return val ? 'true' : 'false';\n      case 'number':\n        return val + '';\n      case 'object':\n        if (val instanceof Date) {\n          val = finalEscapeDate(val, finalEscape, ctx);\n        } else if (Array.isArray(val)) {\n          return finalEscapeArray(val, finalEscape, ctx);\n        } else if (Buffer.isBuffer(val)) {\n          return finalEscapeBuffer(val, finalEscape, ctx);\n        } else {\n          return finalEscapeObject(val, finalEscape, ctx);\n        }\n    }\n    return finalEscapeString(val, finalEscape, ctx);\n  }\n\n  return finalWrap ? finalWrap(escapeFn) : escapeFn;\n}\n\nfunction escapeObject(val, finalEscape, ctx) {\n  if (val && typeof val.toSQL === 'function') {\n    return val.toSQL(ctx);\n  } else {\n    return JSON.stringify(val);\n  }\n}\n\nfunction arrayToList(array, finalEscape, ctx) {\n  let sql = '';\n  for (let i = 0; i < array.length; i++) {\n    const val = array[i];\n    if (Array.isArray(val)) {\n      sql +=\n        (i === 0 ? '' : ', ') + '(' + arrayToList(val, finalEscape, ctx) + ')';\n    } else {\n      sql += (i === 0 ? '' : ', ') + finalEscape(val, ctx);\n    }\n  }\n  return sql;\n}\n\nfunction bufferToString(buffer) {\n  return 'X' + escapeString(buffer.toString('hex'));\n}\n\nfunction escapeString(val, finalEscape, ctx) {\n  let chunkIndex = (charsRegex.lastIndex = 0);\n  let escapedVal = '';\n  let match;\n\n  while ((match = charsRegex.exec(val))) {\n    escapedVal += val.slice(chunkIndex, match.index) + charsMap[match[0]];\n    chunkIndex = charsRegex.lastIndex;\n  }\n\n  if (chunkIndex === 0) {\n    // Nothing was escaped\n    return \"'\" + val + \"'\";\n  }\n\n  if (chunkIndex < val.length) {\n    return \"'\" + escapedVal + val.slice(chunkIndex) + \"'\";\n  }\n\n  return \"'\" + escapedVal + \"'\";\n}\n\nfunction dateToString(date, finalEscape, ctx = {}) {\n  const timeZone = ctx.timeZone || 'local';\n\n  const dt = new Date(date);\n  let year;\n  let month;\n  let day;\n  let hour;\n  let minute;\n  let second;\n  let millisecond;\n\n  if (timeZone === 'local') {\n    year = dt.getFullYear();\n    month = dt.getMonth() + 1;\n    day = dt.getDate();\n    hour = dt.getHours();\n    minute = dt.getMinutes();\n    second = dt.getSeconds();\n    millisecond = dt.getMilliseconds();\n  } else {\n    const tz = convertTimezone(timeZone);\n\n    if (tz !== false && tz !== 0) {\n      dt.setTime(dt.getTime() + tz * 60000);\n    }\n\n    year = dt.getUTCFullYear();\n    month = dt.getUTCMonth() + 1;\n    day = dt.getUTCDate();\n    hour = dt.getUTCHours();\n    minute = dt.getUTCMinutes();\n    second = dt.getUTCSeconds();\n    millisecond = dt.getUTCMilliseconds();\n  }\n\n  // YYYY-MM-DD HH:mm:ss.mmm\n  return (\n    zeroPad(year, 4) +\n    '-' +\n    zeroPad(month, 2) +\n    '-' +\n    zeroPad(day, 2) +\n    ' ' +\n    zeroPad(hour, 2) +\n    ':' +\n    zeroPad(minute, 2) +\n    ':' +\n    zeroPad(second, 2) +\n    '.' +\n    zeroPad(millisecond, 3)\n  );\n}\n\nfunction zeroPad(number, length) {\n  number = number.toString();\n  while (number.length < length) {\n    number = '0' + number;\n  }\n  return number;\n}\n\nfunction convertTimezone(tz) {\n  if (tz === 'Z') {\n    return 0;\n  }\n  const m = tz.match(/([+\\-\\s])(\\d\\d):?(\\d\\d)?/);\n  if (m) {\n    return (\n      (m[1] == '-' ? -1 : 1) *\n      (parseInt(m[2], 10) + (m[3] ? parseInt(m[3], 10) : 0) / 60) *\n      60\n    );\n  }\n  return false;\n}\n\nmodule.exports = {\n  arrayToList,\n  bufferToString,\n  dateToString,\n  escapeString,\n  charsRegex,\n  charsMap,\n  escapeObject,\n  makeEscape,\n};\n","class KnexTimeoutError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'KnexTimeoutError';\n  }\n}\n\nfunction timeout(promise, ms) {\n  return new Promise(function (resolve, reject) {\n    const id = setTimeout(function () {\n      reject(new KnexTimeoutError('operation timed out'));\n    }, ms);\n\n    function wrappedResolve(value) {\n      clearTimeout(id);\n      resolve(value);\n    }\n\n    function wrappedReject(err) {\n      clearTimeout(id);\n      reject(err);\n    }\n\n    promise.then(wrappedResolve, wrappedReject);\n  });\n}\n\nmodule.exports.KnexTimeoutError = KnexTimeoutError;\nmodule.exports.timeout = timeout;\n","function ensureConnectionCallback(runner) {\n  runner.client.emit('start', runner.builder);\n  runner.builder.emit('start', runner.builder);\n  const sql = runner.builder.toSQL();\n\n  if (runner.builder._debug) {\n    runner.client.logger.debug(sql);\n  }\n\n  if (Array.isArray(sql)) {\n    return runner.queryArray(sql);\n  }\n  return runner.query(sql);\n}\n\nfunction ensureConnectionStreamCallback(runner, params) {\n  try {\n    const sql = runner.builder.toSQL();\n\n    if (Array.isArray(sql) && params.hasHandler) {\n      throw new Error(\n        'The stream may only be used with a single query statement.'\n      );\n    }\n\n    return runner.client.stream(\n      runner.connection,\n      sql,\n      params.stream,\n      params.options\n    );\n  } catch (e) {\n    params.stream.emit('error', e);\n    throw e;\n  }\n}\n\nmodule.exports = {\n  ensureConnectionCallback,\n  ensureConnectionStreamCallback,\n};\n","const { KnexTimeoutError } = require('../util/timeout');\nconst { timeout } = require('../util/timeout');\nconst {\n  ensureConnectionCallback,\n  ensureConnectionStreamCallback,\n} = require('./internal/ensure-connection-callback');\n\nlet Transform;\n\n// The \"Runner\" constructor takes a \"builder\" (query, schema, or raw)\n// and runs through each of the query statements, calling any additional\n// \"output\" method provided alongside the query and bindings.\nclass Runner {\n  constructor(client, builder) {\n    this.client = client;\n    this.builder = builder;\n    this.queries = [];\n\n    // The \"connection\" object is set on the runner when\n    // \"run\" is called.\n    this.connection = undefined;\n  }\n\n  // \"Run\" the target, calling \"toSQL\" on the builder, returning\n  // an object or array of queries to run, each of which are run on\n  // a single connection.\n  async run() {\n    const runner = this;\n    try {\n      const res = await this.ensureConnection(ensureConnectionCallback);\n\n      // Fire a single \"end\" event on the builder when\n      // all queries have successfully completed.\n      runner.builder.emit('end');\n      return res;\n\n      // If there are any \"error\" listeners, we fire an error event\n      // and then re-throw the error to be eventually handled by\n      // the promise chain. Useful if you're wrapping in a custom `Promise`.\n    } catch (err) {\n      if (runner.builder._events && runner.builder._events.error) {\n        runner.builder.emit('error', err);\n      }\n      throw err;\n    }\n  }\n\n  // Stream the result set, by passing through to the dialect's streaming\n  // capabilities. If the options are\n  stream(optionsOrHandler, handlerOrNil) {\n    const firstOptionIsHandler =\n      typeof optionsOrHandler === 'function' && arguments.length === 1;\n\n    const options = firstOptionIsHandler ? {} : optionsOrHandler;\n    const handler = firstOptionIsHandler ? optionsOrHandler : handlerOrNil;\n\n    // Determines whether we emit an error or throw here.\n    const hasHandler = typeof handler === 'function';\n\n    // Lazy-load the \"Transform\" dependency.\n    Transform = Transform || require('stream').Transform;\n\n    const queryContext = this.builder.queryContext();\n\n    const stream = new Transform({\n      objectMode: true,\n      transform: (chunk, _, callback) => {\n        callback(null, this.client.postProcessResponse(chunk, queryContext));\n      },\n    });\n    stream.on('close', () => {\n      this.client.releaseConnection(this.connection);\n    });\n\n    const connectionAcquirePromise = this.ensureConnection(\n      ensureConnectionStreamCallback,\n      {\n        options,\n        hasHandler,\n        stream,\n      }\n    )\n      // Emit errors on the stream if the error occurred before a connection\n      // could be acquired.\n      // If the connection was acquired, assume the error occurred in the client\n      // code and has already been emitted on the stream. Don't emit it twice.\n      .catch((err) => {\n        if (!this.connection) {\n          stream.emit('error', err);\n        }\n      });\n\n    // If a function is passed to handle the stream, send the stream\n    // there and return the promise, otherwise just return the stream\n    // and the promise will take care of itself.\n    if (hasHandler) {\n      handler(stream);\n      return connectionAcquirePromise;\n    }\n    return stream;\n  }\n\n  // Allow you to pipe the stream to a writable stream.\n  pipe(writable, options) {\n    return this.stream(options).pipe(writable);\n  }\n\n  // \"Runs\" a query, returning a promise. All queries specified by the builder are guaranteed\n  // to run in sequence, and on the same connection, especially helpful when schema building\n  // and dealing with foreign key constraints, etc.\n  async query(obj) {\n    const { __knexUid, __knexTxId } = this.connection;\n\n    this.builder.emit('query', Object.assign({ __knexUid, __knexTxId }, obj));\n\n    const runner = this;\n    const queryContext = this.builder.queryContext();\n    // query-error events are emitted before the queryPromise continuations.\n    // pass queryContext into client.query so it can be raised properly.\n    if (obj !== null && typeof obj === 'object') {\n      obj.queryContext = queryContext;\n    }\n    let queryPromise = this.client.query(this.connection, obj);\n\n    if (obj.timeout) {\n      queryPromise = timeout(queryPromise, obj.timeout);\n    }\n\n    // Await the return value of client.processResponse; in the case of sqlite3's\n    // dropColumn()/renameColumn(), it will be a Promise for the transaction\n    // containing the complete rename procedure.\n    return queryPromise\n      .then((resp) => this.client.processResponse(resp, runner))\n      .then((processedResponse) => {\n        const postProcessedResponse = this.client.postProcessResponse(\n          processedResponse,\n          queryContext\n        );\n\n        this.builder.emit(\n          'query-response',\n          postProcessedResponse,\n          Object.assign({ __knexUid, __knexTxId }, obj),\n          this.builder\n        );\n\n        this.client.emit(\n          'query-response',\n          postProcessedResponse,\n          Object.assign({ __knexUid, __knexTxId }, obj),\n          this.builder\n        );\n\n        return postProcessedResponse;\n      })\n      .catch((error) => {\n        if (!(error instanceof KnexTimeoutError)) {\n          return Promise.reject(error);\n        }\n        const { timeout, sql, bindings } = obj;\n\n        let cancelQuery;\n        if (obj.cancelOnTimeout) {\n          cancelQuery = this.client.cancelQuery(this.connection);\n        } else {\n          // If we don't cancel the query, we need to mark the connection as disposed so that\n          // it gets destroyed by the pool and is never used again. If we don't do this and\n          // return the connection to the pool, it will be useless until the current operation\n          // that timed out, finally finishes.\n          this.connection.__knex__disposed = error;\n          cancelQuery = Promise.resolve();\n        }\n\n        return cancelQuery\n          .catch((cancelError) => {\n            // If the cancellation failed, we need to mark the connection as disposed so that\n            // it gets destroyed by the pool and is never used again. If we don't do this and\n            // return the connection to the pool, it will be useless until the current operation\n            // that timed out, finally finishes.\n            this.connection.__knex__disposed = error;\n\n            // cancellation failed\n            throw Object.assign(cancelError, {\n              message: `After query timeout of ${timeout}ms exceeded, cancelling of query failed.`,\n              sql,\n              bindings,\n              timeout,\n            });\n          })\n          .then(() => {\n            // cancellation succeeded, rethrow timeout error\n            throw Object.assign(error, {\n              message: `Defined query timeout of ${timeout}ms exceeded when running query.`,\n              sql,\n              bindings,\n              timeout,\n            });\n          });\n      })\n      .catch((error) => {\n        this.builder.emit(\n          'query-error',\n          error,\n          Object.assign({ __knexUid, __knexTxId, queryContext }, obj)\n        );\n        throw error;\n      });\n  }\n\n  // In the case of the \"schema builder\" we call `queryArray`, which runs each\n  // of the queries in sequence.\n  async queryArray(queries) {\n    if (queries.length === 1) {\n      const query = queries[0];\n\n      if (!query.statementsProducer) {\n        return this.query(query);\n      }\n\n      const statements = await query.statementsProducer(\n        undefined,\n        this.connection\n      );\n\n      const sqlQueryObjects = statements.sql.map((statement) => ({\n        sql: statement,\n        bindings: query.bindings,\n      }));\n      const preQueryObjects = statements.pre.map((statement) => ({\n        sql: statement,\n        bindings: query.bindings,\n      }));\n      const postQueryObjects = statements.post.map((statement) => ({\n        sql: statement,\n        bindings: query.bindings,\n      }));\n\n      let results = [];\n\n      await this.queryArray(preQueryObjects);\n\n      try {\n        await this.client.transaction(\n          async (trx) => {\n            const transactionRunner = new Runner(trx.client, this.builder);\n            transactionRunner.connection = this.connection;\n\n            results = await transactionRunner.queryArray(sqlQueryObjects);\n\n            if (statements.check) {\n              const foreignViolations = await trx.raw(statements.check);\n\n              if (foreignViolations.length > 0) {\n                throw new Error('FOREIGN KEY constraint failed');\n              }\n            }\n          },\n          { connection: this.connection }\n        );\n      } finally {\n        await this.queryArray(postQueryObjects);\n      }\n\n      return results;\n    }\n\n    const results = [];\n    for (const query of queries) {\n      results.push(await this.queryArray([query]));\n    }\n    return results;\n  }\n\n  // Check whether there's a transaction flag, and that it has a connection.\n  async ensureConnection(cb, cbParams) {\n    // Use override from a builder if passed\n    if (this.builder._connection) {\n      this.connection = this.builder._connection;\n    }\n\n    if (this.connection) {\n      return cb(this, cbParams);\n    }\n\n    let acquiredConnection;\n    try {\n      acquiredConnection = await this.client.acquireConnection();\n    } catch (error) {\n      if (!(error instanceof KnexTimeoutError)) {\n        return Promise.reject(error);\n      }\n      if (this.builder) {\n        error.sql = this.builder.sql;\n        error.bindings = this.builder.bindings;\n      }\n      throw error;\n    }\n    try {\n      this.connection = acquiredConnection;\n      return await cb(this, cbParams);\n    } finally {\n      await this.client.releaseConnection(acquiredConnection);\n    }\n  }\n}\n\nmodule.exports = Runner;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","module.exports = function () {};\n","// All properties we can use to start a query chain\n// from the `knex` object, e.g. `knex.select('*').from(...`\nmodule.exports = [\n  'with',\n  'withRecursive',\n  'withMaterialized',\n  'withNotMaterialized',\n  'select',\n  'as',\n  'columns',\n  'column',\n  'from',\n  'fromJS',\n  'fromRaw',\n  'into',\n  'withSchema',\n  'table',\n  'distinct',\n  'join',\n  'joinRaw',\n  'innerJoin',\n  'leftJoin',\n  'leftOuterJoin',\n  'rightJoin',\n  'rightOuterJoin',\n  'outerJoin',\n  'fullOuterJoin',\n  'crossJoin',\n  'where',\n  'andWhere',\n  'orWhere',\n  'whereNot',\n  'orWhereNot',\n  'whereLike',\n  'andWhereLike',\n  'orWhereLike',\n  'whereILike',\n  'andWhereILike',\n  'orWhereILike',\n  'whereRaw',\n  'whereWrapped',\n  'havingWrapped',\n  'orWhereRaw',\n  'whereExists',\n  'orWhereExists',\n  'whereNotExists',\n  'orWhereNotExists',\n  'whereIn',\n  'orWhereIn',\n  'whereNotIn',\n  'orWhereNotIn',\n  'whereNull',\n  'orWhereNull',\n  'whereNotNull',\n  'orWhereNotNull',\n  'whereBetween',\n  'whereNotBetween',\n  'andWhereBetween',\n  'andWhereNotBetween',\n  'orWhereBetween',\n  'orWhereNotBetween',\n  'groupBy',\n  'groupByRaw',\n  'orderBy',\n  'orderByRaw',\n  'union',\n  'unionAll',\n  'intersect',\n  'having',\n  'havingRaw',\n  'orHaving',\n  'orHavingRaw',\n  'offset',\n  'limit',\n  'count',\n  'countDistinct',\n  'min',\n  'max',\n  'sum',\n  'sumDistinct',\n  'avg',\n  'avgDistinct',\n  'increment',\n  'decrement',\n  'first',\n  'debug',\n  'pluck',\n  'clearSelect',\n  'clearWhere',\n  'clearGroup',\n  'clearOrder',\n  'clearHaving',\n  'insert',\n  'update',\n  'returning',\n  'del',\n  'delete',\n  'truncate',\n  'transacting',\n  'connection',\n\n  // JSON methods\n\n  // Json manipulation functions\n  'jsonExtract',\n  'jsonSet',\n  'jsonInsert',\n  'jsonRemove',\n\n  // Wheres Json\n  'whereJsonObject',\n  'orWhereJsonObject',\n  'andWhereJsonObject',\n  'whereNotJsonObject',\n  'orWhereNotJsonObject',\n  'andWhereNotJsonObject',\n\n  'whereJsonPath',\n  'orWhereJsonPath',\n  'andWhereJsonPath',\n\n  'whereJsonSupersetOf',\n  'orWhereJsonSupersetOf',\n  'andWhereJsonSupersetOf',\n  'whereJsonNotSupersetOf',\n  'orWhereJsonNotSupersetOf',\n  'andWhereJsonNotSupersetOf',\n\n  'whereJsonSubsetOf',\n  'orWhereJsonSubsetOf',\n  'andWhereJsonSubsetOf',\n  'whereJsonNotSubsetOf',\n  'orWhereJsonNotSubsetOf',\n  'andWhereJsonNotSubsetOf',\n];\n","function isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\nfunction isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nmodule.exports = {\n  isString,\n  isNumber,\n  isBoolean,\n  isUndefined,\n  isObject,\n  isFunction,\n};\n","const chunk = require('lodash/chunk');\nconst flatten = require('lodash/flatten');\nconst delay = require('./internal/delay');\nconst { isNumber } = require('../util/is');\n\nfunction batchInsert(client, tableName, batch, chunkSize = 1000) {\n  let returning = undefined;\n  let transaction = null;\n  if (!isNumber(chunkSize) || chunkSize < 1) {\n    throw new TypeError(`Invalid chunkSize: ${chunkSize}`);\n  }\n  if (!Array.isArray(batch)) {\n    throw new TypeError(`Invalid batch: Expected array, got ${typeof batch}`);\n  }\n  const chunks = chunk(batch, chunkSize);\n\n  const runInTransaction = (cb) => {\n    if (transaction) {\n      return cb(transaction);\n    }\n    return client.transaction(cb);\n  };\n\n  return Object.assign(\n    Promise.resolve().then(async () => {\n      //Next tick to ensure wrapper functions are called if needed\n      await delay(1);\n      return runInTransaction(async (tr) => {\n        const chunksResults = [];\n        for (const items of chunks) {\n          chunksResults.push(await tr(tableName).insert(items, returning));\n        }\n        return flatten(chunksResults);\n      });\n    }),\n    {\n      returning(columns) {\n        returning = columns;\n\n        return this;\n      },\n      transacting(tr) {\n        transaction = tr;\n\n        return this;\n      },\n    }\n  );\n}\n\nmodule.exports = batchInsert;\n","const { EventEmitter } = require('events');\n\nconst { Migrator } = require('../migrations/migrate/Migrator');\nconst Seeder = require('../migrations/seed/Seeder');\nconst FunctionHelper = require('./FunctionHelper');\nconst QueryInterface = require('../query/method-constants');\nconst merge = require('lodash/merge');\nconst batchInsert = require('../execution/batch-insert');\nconst { isObject } = require('../util/is');\n\n// Javascript does not officially support \"callable objects\".  Instead,\n// you must create a regular Function and inject properties/methods\n// into it.  In other words: you can't leverage Prototype Inheritance\n// to share the property/method definitions.\n//\n// To work around this, we're creating an Object Property Definition.\n// This allow us to quickly inject everything into the `knex` function\n// via the `Object.defineProperties(..)` function.  More importantly,\n// it allows the same definitions to be shared across `knex` instances.\nconst KNEX_PROPERTY_DEFINITIONS = {\n  client: {\n    get() {\n      return this.context.client;\n    },\n    set(client) {\n      this.context.client = client;\n    },\n    configurable: true,\n  },\n\n  userParams: {\n    get() {\n      return this.context.userParams;\n    },\n    set(userParams) {\n      this.context.userParams = userParams;\n    },\n    configurable: true,\n  },\n\n  schema: {\n    get() {\n      return this.client.schemaBuilder();\n    },\n    configurable: true,\n  },\n\n  migrate: {\n    get() {\n      return new Migrator(this);\n    },\n    configurable: true,\n  },\n\n  seed: {\n    get() {\n      return new Seeder(this);\n    },\n    configurable: true,\n  },\n\n  fn: {\n    get() {\n      return new FunctionHelper(this.client);\n    },\n    configurable: true,\n  },\n};\n\n// `knex` instances serve as proxies around `context` objects.  So, calling\n// any of these methods on the `knex` instance will forward the call to\n// the `knex.context` object. This ensures that `this` will correctly refer\n// to `context` within each of these methods.\nconst CONTEXT_METHODS = [\n  'raw',\n  'batchInsert',\n  'transaction',\n  'transactionProvider',\n  'initialize',\n  'destroy',\n  'ref',\n  'withUserParams',\n  'queryBuilder',\n  'disableProcessing',\n  'enableProcessing',\n];\n\nfor (const m of CONTEXT_METHODS) {\n  KNEX_PROPERTY_DEFINITIONS[m] = {\n    value: function (...args) {\n      return this.context[m](...args);\n    },\n    configurable: true,\n  };\n}\n\nfunction makeKnex(client) {\n  // The object we're potentially using to kick off an initial chain.\n  function knex(tableName, options) {\n    return createQueryBuilder(knex.context, tableName, options);\n  }\n\n  redefineProperties(knex, client);\n  return knex;\n}\n\nfunction initContext(knexFn) {\n  const knexContext = knexFn.context || {};\n  Object.assign(knexContext, {\n    queryBuilder() {\n      return this.client.queryBuilder();\n    },\n\n    raw() {\n      return this.client.raw.apply(this.client, arguments);\n    },\n\n    batchInsert(table, batch, chunkSize = 1000) {\n      return batchInsert(this, table, batch, chunkSize);\n    },\n\n    // Creates a new transaction.\n    // If container is provided, returns a promise for when the transaction is resolved.\n    // If container is not provided, returns a promise with a transaction that is resolved\n    // when transaction is ready to be used.\n    transaction(container, _config) {\n      // Overload support of `transaction(config)`\n      if (!_config && isObject(container)) {\n        _config = container;\n        container = null;\n      }\n\n      const config = Object.assign({}, _config);\n      config.userParams = this.userParams || {};\n      if (config.doNotRejectOnRollback === undefined) {\n        config.doNotRejectOnRollback = true;\n      }\n\n      return this._transaction(container, config);\n    },\n\n    // Internal method that actually establishes the Transaction.  It makes no assumptions\n    // about the `config` or `outerTx`, and expects the caller to handle these details.\n    _transaction(container, config, outerTx = null) {\n      if (container) {\n        const trx = this.client.transaction(container, config, outerTx);\n        return trx;\n      } else {\n        return new Promise((resolve, reject) => {\n          this.client.transaction(resolve, config, outerTx).catch(reject);\n        });\n      }\n    },\n\n    transactionProvider(config) {\n      let trx;\n      return () => {\n        if (!trx) {\n          trx = this.transaction(undefined, config);\n        }\n        return trx;\n      };\n    },\n\n    // Typically never needed, initializes the pool for a knex client.\n    initialize(config) {\n      return this.client.initializePool(config);\n    },\n\n    // Convenience method for tearing down the pool.\n    destroy(callback) {\n      return this.client.destroy(callback);\n    },\n\n    ref(ref) {\n      return this.client.ref(ref);\n    },\n\n    // Do not document this as public API until naming and API is improved for general consumption\n    // This method exists to disable processing of internal queries in migrations\n    disableProcessing() {\n      if (this.userParams.isProcessingDisabled) {\n        return;\n      }\n      this.userParams.wrapIdentifier = this.client.config.wrapIdentifier;\n      this.userParams.postProcessResponse =\n        this.client.config.postProcessResponse;\n      this.client.config.wrapIdentifier = null;\n      this.client.config.postProcessResponse = null;\n      this.userParams.isProcessingDisabled = true;\n    },\n\n    // Do not document this as public API until naming and API is improved for general consumption\n    // This method exists to enable execution of non-internal queries with consistent identifier naming in migrations\n    enableProcessing() {\n      if (!this.userParams.isProcessingDisabled) {\n        return;\n      }\n      this.client.config.wrapIdentifier = this.userParams.wrapIdentifier;\n      this.client.config.postProcessResponse =\n        this.userParams.postProcessResponse;\n      this.userParams.isProcessingDisabled = false;\n    },\n\n    withUserParams(params) {\n      const knexClone = shallowCloneFunction(knexFn); // We need to include getters in our clone\n      if (this.client) {\n        knexClone.client = Object.create(this.client.constructor.prototype); // Clone client to avoid leaking listeners that are set on it\n        merge(knexClone.client, this.client);\n        knexClone.client.config = Object.assign({}, this.client.config); // Clone client config to make sure they can be modified independently\n      }\n\n      redefineProperties(knexClone, knexClone.client);\n      _copyEventListeners('query', knexFn, knexClone);\n      _copyEventListeners('query-error', knexFn, knexClone);\n      _copyEventListeners('query-response', knexFn, knexClone);\n      _copyEventListeners('start', knexFn, knexClone);\n      knexClone.userParams = params;\n      return knexClone;\n    },\n  });\n\n  if (!knexFn.context) {\n    knexFn.context = knexContext;\n  }\n}\n\nfunction _copyEventListeners(eventName, sourceKnex, targetKnex) {\n  const listeners = sourceKnex.listeners(eventName);\n  listeners.forEach((listener) => {\n    targetKnex.on(eventName, listener);\n  });\n}\n\nfunction redefineProperties(knex, client) {\n  // Allow chaining methods from the root object, before\n  // any other information is specified.\n  //\n  // TODO: `QueryBuilder.extend(..)` allows new QueryBuilder\n  //       methods to be introduced via external components.\n  //       As a side-effect, it also pushes the new method names\n  //       into the `QueryInterface` array.\n  //\n  //       The Problem: due to the way the code is currently\n  //       structured, these new methods cannot be retroactively\n  //       injected into existing `knex` instances!  As a result,\n  //       some `knex` instances will support the methods, and\n  //       others will not.\n  //\n  //       We should revisit this once we figure out the desired\n  //       behavior / usage.  For instance: do we really want to\n  //       allow external components to directly manipulate `knex`\n  //       data structures?  Or, should we come up w/ a different\n  //       approach that avoids side-effects / mutation?\n  //\n  //      (FYI: I noticed this issue because I attempted to integrate\n  //       this logic directly into the `KNEX_PROPERTY_DEFINITIONS`\n  //       construction.  However, `KNEX_PROPERTY_DEFINITIONS` is\n  //       constructed before any `knex` instances are created.\n  //       As a result, the method extensions were missing from all\n  //       `knex` instances.)\n  for (let i = 0; i < QueryInterface.length; i++) {\n    const method = QueryInterface[i];\n    knex[method] = function () {\n      const builder = this.queryBuilder();\n      return builder[method].apply(builder, arguments);\n    };\n  }\n\n  Object.defineProperties(knex, KNEX_PROPERTY_DEFINITIONS);\n\n  initContext(knex);\n  knex.client = client;\n  knex.userParams = {};\n\n  // Hook up the \"knex\" object as an EventEmitter.\n  const ee = new EventEmitter();\n  for (const key in ee) {\n    knex[key] = ee[key];\n  }\n\n  // Unfortunately, something seems to be broken in Node 6 and removing events from a clone also mutates original Knex,\n  // which is highly undesirable\n  if (knex._internalListeners) {\n    knex._internalListeners.forEach(({ eventName, listener }) => {\n      knex.client.removeListener(eventName, listener); // Remove duplicates for copies\n    });\n  }\n  knex._internalListeners = [];\n\n  // Passthrough all \"start\" and \"query\" events to the knex object.\n  _addInternalListener(knex, 'start', (obj) => {\n    knex.emit('start', obj);\n  });\n  _addInternalListener(knex, 'query', (obj) => {\n    knex.emit('query', obj);\n  });\n  _addInternalListener(knex, 'query-error', (err, obj) => {\n    knex.emit('query-error', err, obj);\n  });\n  _addInternalListener(knex, 'query-response', (response, obj, builder) => {\n    knex.emit('query-response', response, obj, builder);\n  });\n}\n\nfunction _addInternalListener(knex, eventName, listener) {\n  knex.client.on(eventName, listener);\n  knex._internalListeners.push({\n    eventName,\n    listener,\n  });\n}\n\nfunction createQueryBuilder(knexContext, tableName, options) {\n  const qb = knexContext.queryBuilder();\n  if (!tableName)\n    knexContext.client.logger.warn(\n      'calling knex without a tableName is deprecated. Use knex.queryBuilder() instead.'\n    );\n  return tableName ? qb.table(tableName, options) : qb;\n}\n\nfunction shallowCloneFunction(originalFunction) {\n  const fnContext = Object.create(\n    Object.getPrototypeOf(originalFunction),\n    Object.getOwnPropertyDescriptors(originalFunction)\n  );\n\n  const knexContext = {};\n  const knexFnWrapper = (tableName, options) => {\n    return createQueryBuilder(knexContext, tableName, options);\n  };\n\n  const clonedFunction = knexFnWrapper.bind(fnContext);\n  Object.assign(clonedFunction, originalFunction);\n  clonedFunction.context = knexContext;\n  return clonedFunction;\n}\n\nmodule.exports = makeKnex;\n","// FunctionHelper\n// -------\n// Used for adding functions from the builder\n// Example usage: table.dateTime('datetime_to_date').notNull().defaultTo(knex.fn.now());\nclass FunctionHelper {\n  constructor(client) {\n    this.client = client;\n  }\n\n  now(precision) {\n    if (typeof precision === 'number') {\n      return this.client.raw(`CURRENT_TIMESTAMP(${precision})`);\n    }\n    return this.client.raw('CURRENT_TIMESTAMP');\n  }\n\n  uuidToBin(uuid, ordered = true) {\n    const buf = Buffer.from(uuid.replace(/-/g, ''), 'hex');\n    return ordered\n      ? Buffer.concat([\n          buf.slice(6, 8),\n          buf.slice(4, 6),\n          buf.slice(0, 4),\n          buf.slice(8, 16),\n        ])\n      : Buffer.concat([\n          buf.slice(0, 4),\n          buf.slice(4, 6),\n          buf.slice(6, 8),\n          buf.slice(8, 16),\n        ]);\n  }\n\n  binToUuid(bin, ordered = true) {\n    const buf = Buffer.from(bin, 'hex');\n    return ordered\n      ? [\n          buf.toString('hex', 4, 8),\n          buf.toString('hex', 2, 4),\n          buf.toString('hex', 0, 2),\n          buf.toString('hex', 8, 10),\n          buf.toString('hex', 10, 16),\n        ].join('-')\n      : [\n          buf.toString('hex', 0, 4),\n          buf.toString('hex', 4, 6),\n          buf.toString('hex', 6, 8),\n          buf.toString('hex', 8, 10),\n          buf.toString('hex', 10, 16),\n        ].join('-');\n  }\n}\n\nmodule.exports = FunctionHelper;\n","/**\n * @param {number} delay\n * @returns {Promise<void>}\n */\nmodule.exports = (delay) =>\n  new Promise((resolve) => setTimeout(resolve, delay));\n","const noop = require('./noop');\n\nconst finallyMixin = (prototype) =>\n  Object.assign(prototype, {\n    finally(onFinally) {\n      return this.then().finally(onFinally);\n    },\n  });\n\n// FYI: Support for `Promise.prototype.finally` was not introduced until Node 9.\n//      Therefore, Knex will need to conditionally inject support for `.finally(..)`\n//      until support for Node 8 is officially dropped.\nmodule.exports = Promise.prototype.finally ? finallyMixin : noop;\n","// Transaction\n// -------\nconst { EventEmitter } = require('events');\nconst Debug = require('debug');\nconst uniqueId = require('lodash/uniqueId');\nconst { callbackify } = require('util');\n\nconst makeKnex = require('../knex-builder/make-knex');\nconst { timeout, KnexTimeoutError } = require('../util/timeout');\nconst finallyMixin = require('../util/finally-mixin');\n\nconst debug = Debug('knex:tx');\n\n// FYI: This is defined as a function instead of a constant so that\n//      each Transactor can have its own copy of the default config.\n//      This will minimize the impact of bugs that might be introduced\n//      if a Transactor ever mutates its config.\nfunction DEFAULT_CONFIG() {\n  return {\n    userParams: {},\n    doNotRejectOnRollback: true,\n  };\n}\n// These aren't supported in sqlite3 which is serialized already so it's as\n// safe as reasonable, except for a special read_uncommitted pragma\nconst validIsolationLevels = [\n  // Doesn't really work in postgres, it treats it as read committed\n  'read uncommitted',\n  'read committed',\n  'snapshot',\n  // snapshot and repeatable read are basically the same, most \"repeatable\n  // read\" implementations are actually \"snapshot\" also known as Multi Version\n  // Concurrency Control (MVCC). Mssql's repeatable read doesn't stop\n  // repeated reads for inserts as it uses a pessimistic locking system so\n  // you should probably use 'snapshot' to stop read skew.\n  'repeatable read',\n  // mysql pretends to have serializable, but it is not\n  'serializable',\n];\n\n// Acts as a facade for a Promise, keeping the internal state\n// and managing any child transactions.\nclass Transaction extends EventEmitter {\n  constructor(client, container, config = DEFAULT_CONFIG(), outerTx = null) {\n    super();\n    this.userParams = config.userParams;\n    this.doNotRejectOnRollback = config.doNotRejectOnRollback;\n\n    const txid = (this.txid = uniqueId('trx'));\n\n    this.client = client;\n    this.logger = client.logger;\n    this.outerTx = outerTx;\n    this.trxClient = undefined;\n    this._completed = false;\n    this._debug = client.config && client.config.debug;\n\n    if (config.isolationLevel) {\n      this.setIsolationLevel(config.isolationLevel);\n    }\n\n    debug(\n      '%s: Starting %s transaction',\n      txid,\n      outerTx ? 'nested' : 'top level'\n    );\n\n    // `this` can potentially serve as an `outerTx` for another\n    // Transaction.  So, go ahead and establish `_lastChild` now.\n    this._lastChild = Promise.resolve();\n\n    const _previousSibling = outerTx ? outerTx._lastChild : Promise.resolve();\n\n    // FYI: As you will see in a moment, this Promise will be used to construct\n    //      2 separate Promise Chains.  This ensures that each Promise Chain\n    //      can establish its error-handling semantics without interfering\n    //      with the other Promise Chain.\n    const basePromise = _previousSibling.then(() =>\n      this._evaluateContainer(config, container)\n    );\n\n    // FYI: This is the Promise Chain for EXTERNAL use.  It ensures that the\n    //      caller must handle any exceptions that result from `basePromise`.\n    this._promise = basePromise.then((x) => x);\n\n    if (outerTx) {\n      // FYI: This is the Promise Chain for INTERNAL use.  It serves as a signal\n      //      for when the next sibling should begin its execution.  Therefore,\n      //      exceptions are caught and ignored.\n      outerTx._lastChild = basePromise.catch(() => {});\n    }\n  }\n\n  isCompleted() {\n    return (\n      this._completed || (this.outerTx && this.outerTx.isCompleted()) || false\n    );\n  }\n\n  begin(conn) {\n    const runIsolationLevelQuery = this.isolationLevel\n      ? this.query(\n          conn,\n          `SET TRANSACTION ISOLATION LEVEL ${this.isolationLevel};`\n        )\n      : Promise.resolve();\n    return runIsolationLevelQuery.then(() => this.query(conn, 'BEGIN;'));\n  }\n\n  savepoint(conn) {\n    return this.query(conn, `SAVEPOINT ${this.txid};`);\n  }\n\n  commit(conn, value) {\n    return this.query(conn, 'COMMIT;', 1, value);\n  }\n\n  release(conn, value) {\n    return this.query(conn, `RELEASE SAVEPOINT ${this.txid};`, 1, value);\n  }\n\n  setIsolationLevel(isolationLevel) {\n    if (!validIsolationLevels.includes(isolationLevel)) {\n      throw new Error(\n        `Invalid isolationLevel, supported isolation levels are: ${JSON.stringify(\n          validIsolationLevels\n        )}`\n      );\n    }\n    this.isolationLevel = isolationLevel;\n    return this;\n  }\n\n  rollback(conn, error) {\n    return timeout(this.query(conn, 'ROLLBACK', 2, error), 5000).catch(\n      (err) => {\n        if (!(err instanceof KnexTimeoutError)) {\n          return Promise.reject(err);\n        }\n        this._rejecter(error);\n      }\n    );\n  }\n\n  rollbackTo(conn, error) {\n    return timeout(\n      this.query(conn, `ROLLBACK TO SAVEPOINT ${this.txid}`, 2, error),\n      5000\n    ).catch((err) => {\n      if (!(err instanceof KnexTimeoutError)) {\n        return Promise.reject(err);\n      }\n      this._rejecter(error);\n    });\n  }\n\n  query(conn, sql, status, value) {\n    const q = this.trxClient\n      .query(conn, sql)\n      .catch((err) => {\n        status = 2;\n        value = err;\n        this._completed = true;\n        debug('%s error running transaction query', this.txid);\n      })\n      .then((res) => {\n        if (status === 1) {\n          this._resolver(value);\n        }\n        if (status === 2) {\n          if (value === undefined) {\n            if (this.doNotRejectOnRollback && /^ROLLBACK\\b/i.test(sql)) {\n              this._resolver();\n              return;\n            }\n\n            value = new Error(`Transaction rejected with non-error: ${value}`);\n          }\n          this._rejecter(value);\n        }\n        return res;\n      });\n    if (status === 1 || status === 2) {\n      this._completed = true;\n    }\n    return q;\n  }\n\n  debug(enabled) {\n    this._debug = arguments.length ? enabled : true;\n    return this;\n  }\n\n  async _evaluateContainer(config, container) {\n    return this.acquireConnection(config, (connection) => {\n      const trxClient = (this.trxClient = makeTxClient(\n        this,\n        this.client,\n        connection\n      ));\n      const init = this.client.transacting\n        ? this.savepoint(connection)\n        : this.begin(connection);\n      const executionPromise = new Promise((resolver, rejecter) => {\n        this._resolver = resolver;\n        this._rejecter = rejecter;\n      });\n\n      init\n        .then(() => {\n          return makeTransactor(this, connection, trxClient);\n        })\n        .then((transactor) => {\n          transactor.executionPromise = executionPromise;\n\n          // If we've returned a \"thenable\" from the transaction container, assume\n          // the rollback and commit are chained to this object's success / failure.\n          // Directly thrown errors are treated as automatic rollbacks.\n          let result;\n          try {\n            result = container(transactor);\n          } catch (err) {\n            result = Promise.reject(err);\n          }\n          if (result && result.then && typeof result.then === 'function') {\n            result\n              .then((val) => {\n                return transactor.commit(val);\n              })\n              .catch((err) => {\n                return transactor.rollback(err);\n              });\n          }\n          return null;\n        })\n        .catch((e) => {\n          return this._rejecter(e);\n        });\n\n      return executionPromise;\n    });\n  }\n\n  // Acquire a connection and create a disposer - either using the one passed\n  // via config or getting one off the client. The disposer will be called once\n  // the original promise is marked completed.\n  async acquireConnection(config, cb) {\n    const configConnection = config && config.connection;\n    const connection =\n      configConnection || (await this.client.acquireConnection());\n\n    try {\n      connection.__knexTxId = this.txid;\n      return await cb(connection);\n    } finally {\n      if (!configConnection) {\n        debug('%s: releasing connection', this.txid);\n        this.client.releaseConnection(connection);\n      } else {\n        debug('%s: not releasing external connection', this.txid);\n      }\n    }\n  }\n\n  then(onResolve, onReject) {\n    return this._promise.then(onResolve, onReject);\n  }\n\n  catch(...args) {\n    return this._promise.catch(...args);\n  }\n\n  asCallback(cb) {\n    callbackify(() => this._promise)(cb);\n    return this._promise;\n  }\n}\nfinallyMixin(Transaction.prototype);\n\n// The transactor is a full featured knex object, with a \"commit\", a \"rollback\"\n// and a \"savepoint\" function. The \"savepoint\" is just sugar for creating a new\n// transaction. If the rollback is run inside a savepoint, it rolls back to the\n// last savepoint - otherwise it rolls back the transaction.\nfunction makeTransactor(trx, connection, trxClient) {\n  const transactor = makeKnex(trxClient);\n\n  transactor.context.withUserParams = () => {\n    throw new Error(\n      'Cannot set user params on a transaction - it can only inherit params from main knex instance'\n    );\n  };\n\n  transactor.isTransaction = true;\n  transactor.userParams = trx.userParams || {};\n\n  transactor.context.transaction = function (container, options) {\n    if (!options) {\n      options = { doNotRejectOnRollback: true };\n    } else if (options.doNotRejectOnRollback === undefined) {\n      options.doNotRejectOnRollback = true;\n    }\n\n    return this._transaction(container, options, trx);\n  };\n\n  transactor.savepoint = function (container, options) {\n    return transactor.transaction(container, options);\n  };\n\n  if (trx.client.transacting) {\n    transactor.commit = (value) => trx.release(connection, value);\n    transactor.rollback = (error) => trx.rollbackTo(connection, error);\n  } else {\n    transactor.commit = (value) => trx.commit(connection, value);\n    transactor.rollback = (error) => trx.rollback(connection, error);\n  }\n\n  transactor.isCompleted = () => trx.isCompleted();\n\n  return transactor;\n}\n\n// We need to make a client object which always acquires the same\n// connection and does not release back into the pool.\nfunction makeTxClient(trx, client, connection) {\n  const trxClient = Object.create(client.constructor.prototype);\n  trxClient.version = client.version;\n  trxClient.config = client.config;\n  trxClient.driver = client.driver;\n  trxClient.connectionSettings = client.connectionSettings;\n  trxClient.transacting = true;\n  trxClient.valueForUndefined = client.valueForUndefined;\n  trxClient.logger = client.logger;\n\n  trxClient.on('start', function (arg) {\n    trx.emit('start', arg);\n    client.emit('start', arg);\n  });\n\n  trxClient.on('query', function (arg) {\n    trx.emit('query', arg);\n    client.emit('query', arg);\n  });\n\n  trxClient.on('query-error', function (err, obj) {\n    trx.emit('query-error', err, obj);\n    client.emit('query-error', err, obj);\n  });\n\n  trxClient.on('query-response', function (response, obj, builder) {\n    trx.emit('query-response', response, obj, builder);\n    client.emit('query-response', response, obj, builder);\n  });\n\n  const _query = trxClient.query;\n  trxClient.query = function (conn, obj) {\n    const completed = trx.isCompleted();\n    return new Promise(function (resolve, reject) {\n      try {\n        if (conn !== connection)\n          throw new Error('Invalid connection for transaction query.');\n        if (completed) completedError(trx, obj);\n        resolve(_query.call(trxClient, conn, obj));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  const _stream = trxClient.stream;\n  trxClient.stream = function (conn, obj, stream, options) {\n    const completed = trx.isCompleted();\n    return new Promise(function (resolve, reject) {\n      try {\n        if (conn !== connection)\n          throw new Error('Invalid connection for transaction query.');\n        if (completed) completedError(trx, obj);\n        resolve(_stream.call(trxClient, conn, obj, stream, options));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  trxClient.acquireConnection = function () {\n    return Promise.resolve(connection);\n  };\n  trxClient.releaseConnection = function () {\n    return Promise.resolve();\n  };\n\n  return trxClient;\n}\n\nfunction completedError(trx, obj) {\n  const sql = typeof obj === 'string' ? obj : obj && obj.sql;\n  debug('%s: Transaction completed: %s', trx.txid, sql);\n  throw new Error(\n    'Transaction query already complete, run with DEBUG=knex:tx for more info'\n  );\n}\n\nmodule.exports = Transaction;\n","const _debugQuery = require('debug')('knex:query');\nconst debugBindings = require('debug')('knex:bindings');\nconst debugQuery = (sql, txId) => _debugQuery(sql.replace(/%/g, '%%'), txId);\nconst { isString } = require('../../util/is');\n\nfunction formatQuery(sql, bindings, timeZone, client) {\n  bindings = bindings == null ? [] : [].concat(bindings);\n  let index = 0;\n  return sql.replace(/\\\\?\\?/g, (match) => {\n    if (match === '\\\\?') {\n      return '?';\n    }\n    if (index === bindings.length) {\n      return match;\n    }\n    const value = bindings[index++];\n    return client._escapeBinding(value, { timeZone });\n  });\n}\n\nfunction enrichQueryObject(connection, queryParam, client) {\n  const queryObject = isString(queryParam) ? { sql: queryParam } : queryParam;\n\n  queryObject.bindings = client.prepBindings(queryObject.bindings);\n  queryObject.sql = client.positionBindings(queryObject.sql);\n\n  const { __knexUid, __knexTxId } = connection;\n\n  client.emit('query', Object.assign({ __knexUid, __knexTxId }, queryObject));\n  debugQuery(queryObject.sql, __knexTxId);\n  debugBindings(queryObject.bindings, __knexTxId);\n\n  return queryObject;\n}\n\nfunction executeQuery(connection, queryObject, client) {\n  return client._query(connection, queryObject).catch((err) => {\n    err.message =\n      formatQuery(queryObject.sql, queryObject.bindings, undefined, client) +\n      ' - ' +\n      err.message;\n    client.emit(\n      'query-error',\n      err,\n      Object.assign(\n        { __knexUid: connection.__knexUid, __knexTxId: connection.__knexUid },\n        queryObject\n      )\n    );\n    throw err;\n  });\n}\n\nmodule.exports = {\n  enrichQueryObject,\n  executeQuery,\n  formatQuery,\n};\n","// The client names we'll allow in the `{name: lib}` pairing.\nconst CLIENT_ALIASES = Object.freeze({\n  pg: 'postgres',\n  postgresql: 'postgres',\n  sqlite: 'sqlite3',\n});\n\nconst SUPPORTED_CLIENTS = Object.freeze(\n  [\n    'mssql',\n    'mysql',\n    'mysql2',\n    'oracledb',\n    'postgres',\n    'pgnative',\n    'redshift',\n    'sqlite3',\n    'cockroachdb',\n    'better-sqlite3',\n  ].concat(Object.keys(CLIENT_ALIASES))\n);\n\nconst DRIVER_NAMES = Object.freeze({\n  MsSQL: 'mssql',\n  MySQL: 'mysql',\n  MySQL2: 'mysql2',\n  Oracle: 'oracledb',\n  PostgreSQL: 'pg',\n  PgNative: 'pgnative',\n  Redshift: 'pg-redshift',\n  SQLite: 'sqlite3',\n  CockroachDB: 'cockroachdb',\n  BetterSQLite3: 'better-sqlite3',\n});\n\nconst POOL_CONFIG_OPTIONS = Object.freeze([\n  'maxWaitingClients',\n  'testOnBorrow',\n  'fifo',\n  'priorityRange',\n  'autostart',\n  'evictionRunIntervalMillis',\n  'numTestsPerRun',\n  'softIdleTimeoutMillis',\n  'Promise',\n]);\n\n/**\n * Regex that only matches comma's in strings that aren't wrapped in parentheses. Can be used to\n * safely split strings like `id int, name string, body text, primary key (id, name)` into definition\n * rows\n */\nconst COMMA_NO_PAREN_REGEX = /,[\\s](?![^(]*\\))/g;\n\nmodule.exports = {\n  CLIENT_ALIASES,\n  SUPPORTED_CLIENTS,\n  POOL_CONFIG_OPTIONS,\n  COMMA_NO_PAREN_REGEX,\n  DRIVER_NAMES,\n};\n","const isPlainObject = require('lodash/isPlainObject');\nconst isTypedArray = require('lodash/isTypedArray');\nconst { CLIENT_ALIASES } = require('../constants');\nconst { isFunction } = require('./is');\n\n// Check if the first argument is an array, otherwise uses all arguments as an\n// array.\nfunction normalizeArr(...args) {\n  if (Array.isArray(args[0])) {\n    return args[0];\n  }\n\n  return args;\n}\n\nfunction containsUndefined(mixed) {\n  let argContainsUndefined = false;\n\n  if (isTypedArray(mixed)) return false;\n\n  if (mixed && isFunction(mixed.toSQL)) {\n    //Any QueryBuilder or Raw will automatically be validated during compile.\n    return argContainsUndefined;\n  }\n\n  if (Array.isArray(mixed)) {\n    for (let i = 0; i < mixed.length; i++) {\n      if (argContainsUndefined) break;\n      argContainsUndefined = containsUndefined(mixed[i]);\n    }\n  } else if (isPlainObject(mixed)) {\n    Object.keys(mixed).forEach((key) => {\n      if (!argContainsUndefined) {\n        argContainsUndefined = containsUndefined(mixed[key]);\n      }\n    });\n  } else {\n    argContainsUndefined = mixed === undefined;\n  }\n\n  return argContainsUndefined;\n}\n\nfunction getUndefinedIndices(mixed) {\n  const indices = [];\n\n  if (Array.isArray(mixed)) {\n    mixed.forEach((item, index) => {\n      if (containsUndefined(item)) {\n        indices.push(index);\n      }\n    });\n  } else if (isPlainObject(mixed)) {\n    Object.keys(mixed).forEach((key) => {\n      if (containsUndefined(mixed[key])) {\n        indices.push(key);\n      }\n    });\n  } else {\n    indices.push(0);\n  }\n\n  return indices;\n}\n\nfunction addQueryContext(Target) {\n  // Stores or returns (if called with no arguments) context passed to\n  // wrapIdentifier and postProcessResponse hooks\n  Target.prototype.queryContext = function (context) {\n    if (context === undefined) {\n      return this._queryContext;\n    }\n    this._queryContext = context;\n    return this;\n  };\n}\n\nfunction resolveClientNameWithAliases(clientName) {\n  return CLIENT_ALIASES[clientName] || clientName;\n}\n\nfunction toNumber(val, fallback) {\n  if (val === undefined || val === null) return fallback;\n  const number = parseInt(val, 10);\n  return isNaN(number) ? fallback : number;\n}\n\nmodule.exports = {\n  addQueryContext,\n  containsUndefined,\n  getUndefinedIndices,\n  normalizeArr,\n  resolveClientNameWithAliases,\n  toNumber,\n};\n","const assert = require('assert');\n\n// JoinClause\n// -------\n\nfunction getClauseFromArguments(compilerType, bool, first, operator, second) {\n  if (typeof first === 'function') {\n    return {\n      type: 'onWrapped',\n      value: first,\n      bool: bool,\n    };\n  }\n\n  switch (arguments.length) {\n    case 3:\n      return { type: 'onRaw', value: first, bool };\n    case 4:\n      return {\n        type: compilerType,\n        column: first,\n        operator: '=',\n        value: operator,\n        bool,\n      };\n    default:\n      return {\n        type: compilerType,\n        column: first,\n        operator,\n        value: second,\n        bool,\n      };\n  }\n}\n\n// The \"JoinClause\" is an object holding any necessary info about a join,\n// including the type, and any associated tables & columns being joined.\nclass JoinClause {\n  constructor(table, type, schema) {\n    this.schema = schema;\n    this.table = table;\n    this.joinType = type;\n    this.and = this;\n    this.clauses = [];\n  }\n\n  get or() {\n    return this._bool('or');\n  }\n\n  // Adds an \"on\" clause to the current join object.\n  on(first) {\n    if (typeof first === 'object' && typeof first.toSQL !== 'function') {\n      const keys = Object.keys(first);\n      let i = -1;\n      const method = this._bool() === 'or' ? 'orOn' : 'on';\n      while (++i < keys.length) {\n        this[method](keys[i], first[keys[i]]);\n      }\n      return this;\n    }\n\n    const data = getClauseFromArguments('onBasic', this._bool(), ...arguments);\n\n    if (data) {\n      this.clauses.push(data);\n    }\n\n    return this;\n  }\n\n  // Adds an \"or on\" clause to the current join object.\n  orOn(first, operator, second) {\n    return this._bool('or').on.apply(this, arguments);\n  }\n\n  onJsonPathEquals(columnFirst, jsonPathFirst, columnSecond, jsonPathSecond) {\n    this.clauses.push({\n      type: 'onJsonPathEquals',\n      columnFirst: columnFirst,\n      jsonPathFirst: jsonPathFirst,\n      columnSecond: columnSecond,\n      jsonPathSecond: jsonPathSecond,\n      bool: this._bool(),\n      not: this._not(),\n    });\n    return this;\n  }\n\n  orOnJsonPathEquals(columnFirst, jsonPathFirst, columnSecond, jsonPathSecond) {\n    return this._bool('or').onJsonPathEquals.apply(this, arguments);\n  }\n\n  // Adds a \"using\" clause to the current join.\n  using(column) {\n    return this.clauses.push({ type: 'onUsing', column, bool: this._bool() });\n  }\n\n  onVal(first) {\n    if (typeof first === 'object' && typeof first.toSQL !== 'function') {\n      const keys = Object.keys(first);\n      let i = -1;\n      const method = this._bool() === 'or' ? 'orOnVal' : 'onVal';\n      while (++i < keys.length) {\n        this[method](keys[i], first[keys[i]]);\n      }\n      return this;\n    }\n\n    const data = getClauseFromArguments('onVal', this._bool(), ...arguments);\n\n    if (data) {\n      this.clauses.push(data);\n    }\n\n    return this;\n  }\n\n  andOnVal() {\n    return this.onVal(...arguments);\n  }\n\n  orOnVal() {\n    return this._bool('or').onVal(...arguments);\n  }\n\n  onBetween(column, values) {\n    assert(\n      Array.isArray(values),\n      'The second argument to onBetween must be an array.'\n    );\n    assert(\n      values.length === 2,\n      'You must specify 2 values for the onBetween clause'\n    );\n    this.clauses.push({\n      type: 'onBetween',\n      column,\n      value: values,\n      bool: this._bool(),\n      not: this._not(),\n    });\n    return this;\n  }\n\n  onNotBetween(column, values) {\n    return this._not(true).onBetween(column, values);\n  }\n\n  orOnBetween(column, values) {\n    return this._bool('or').onBetween(column, values);\n  }\n\n  orOnNotBetween(column, values) {\n    return this._bool('or')._not(true).onBetween(column, values);\n  }\n\n  onIn(column, values) {\n    if (Array.isArray(values) && values.length === 0) return this.on(1, '=', 0);\n    this.clauses.push({\n      type: 'onIn',\n      column,\n      value: values,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  onNotIn(column, values) {\n    return this._not(true).onIn(column, values);\n  }\n\n  orOnIn(column, values) {\n    return this._bool('or').onIn(column, values);\n  }\n\n  orOnNotIn(column, values) {\n    return this._bool('or')._not(true).onIn(column, values);\n  }\n\n  onNull(column) {\n    this.clauses.push({\n      type: 'onNull',\n      column,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orOnNull(callback) {\n    return this._bool('or').onNull(callback);\n  }\n\n  onNotNull(callback) {\n    return this._not(true).onNull(callback);\n  }\n\n  orOnNotNull(callback) {\n    return this._not(true)._bool('or').onNull(callback);\n  }\n\n  onExists(callback) {\n    this.clauses.push({\n      type: 'onExists',\n      value: callback,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orOnExists(callback) {\n    return this._bool('or').onExists(callback);\n  }\n\n  onNotExists(callback) {\n    return this._not(true).onExists(callback);\n  }\n\n  orOnNotExists(callback) {\n    return this._not(true)._bool('or').onExists(callback);\n  }\n\n  // Explicitly set the type of join, useful within a function when creating a grouped join.\n  type(type) {\n    this.joinType = type;\n    return this;\n  }\n\n  _bool(bool) {\n    if (arguments.length === 1) {\n      this._boolFlag = bool;\n      return this;\n    }\n    const ret = this._boolFlag || 'and';\n    this._boolFlag = 'and';\n    return ret;\n  }\n\n  _not(val) {\n    if (arguments.length === 1) {\n      this._notFlag = val;\n      return this;\n    }\n    const ret = this._notFlag;\n    this._notFlag = false;\n    return ret;\n  }\n}\n\nObject.assign(JoinClause.prototype, {\n  grouping: 'join',\n});\n\nJoinClause.prototype.andOn = JoinClause.prototype.on;\nJoinClause.prototype.andOnIn = JoinClause.prototype.onIn;\nJoinClause.prototype.andOnNotIn = JoinClause.prototype.onNotIn;\nJoinClause.prototype.andOnNull = JoinClause.prototype.onNull;\nJoinClause.prototype.andOnNotNull = JoinClause.prototype.onNotNull;\nJoinClause.prototype.andOnExists = JoinClause.prototype.onExists;\nJoinClause.prototype.andOnNotExists = JoinClause.prototype.onNotExists;\nJoinClause.prototype.andOnBetween = JoinClause.prototype.onBetween;\nJoinClause.prototype.andOnNotBetween = JoinClause.prototype.onNotBetween;\nJoinClause.prototype.andOnJsonPathEquals =\n  JoinClause.prototype.onJsonPathEquals;\n\nmodule.exports = JoinClause;\n","module.exports = function saveAsyncStack(instance, lines) {\n  if (instance.client.config.asyncStackTraces) {\n    // a hack to get a callstack into the client code despite this\n    // node.js bug https://github.com/nodejs/node/issues/11865\n\n    // Save error here but not error trace\n    // reading trace with '--enable-source-maps' flag on node can be very costly\n\n    instance._asyncStack = {\n      error: new Error(),\n      lines,\n    };\n  }\n};\n","const clone = require('lodash/clone');\nconst isEmpty = require('lodash/isEmpty');\nconst { callbackify } = require('util');\nconst finallyMixin = require('./util/finally-mixin');\nconst { formatQuery } = require('./execution/internal/query-executioner');\n\nfunction augmentWithBuilderInterface(Target) {\n  Target.prototype.toQuery = function (tz) {\n    let data = this.toSQL(this._method, tz);\n    if (!Array.isArray(data)) data = [data];\n    if (!data.length) {\n      return '';\n    }\n\n    return data\n      .map((statement) => {\n        return formatQuery(statement.sql, statement.bindings, tz, this.client);\n      })\n      .reduce((a, c) => a.concat(a.endsWith(';') ? '\\n' : ';\\n', c));\n  };\n\n  // Create a new instance of the `Runner`, passing in the current object.\n  Target.prototype.then = function (/* onFulfilled, onRejected */) {\n    let result = this.client.runner(this).run();\n\n    if (this.client.config.asyncStackTraces) {\n      result = result.catch((err) => {\n        err.originalStack = err.stack;\n        const firstLine = err.stack.split('\\n')[0];\n\n        // a hack to get a callstack into the client code despite this\n        // node.js bug https://github.com/nodejs/node/issues/11865\n        // see lib/util/save-async-stack.js for more details\n        const { error, lines } = this._asyncStack;\n        const stackByLines = error.stack.split('\\n');\n        const asyncStack = stackByLines.slice(lines);\n        asyncStack.unshift(firstLine);\n\n        // put the fake more helpful \"async\" stack on the thrown error\n        err.stack = asyncStack.join('\\n');\n        throw err;\n      });\n    }\n\n    return result.then.apply(result, arguments);\n  };\n\n  // Add additional \"options\" to the builder. Typically used for client specific\n  // items, like the `mysql` and `sqlite3` drivers.\n  Target.prototype.options = function (opts) {\n    this._options = this._options || [];\n    this._options.push(clone(opts) || {});\n    return this;\n  };\n\n  // Sets an explicit \"connection\" we wish to use for this query.\n  Target.prototype.connection = function (connection) {\n    this._connection = connection;\n    this.client.processPassedConnection(connection);\n    return this;\n  };\n\n  // Set a debug flag for the current schema query stack.\n  Target.prototype.debug = function (enabled) {\n    this._debug = arguments.length ? enabled : true;\n    return this;\n  };\n\n  // Set the transaction object for this query.\n  Target.prototype.transacting = function (transaction) {\n    if (transaction && transaction.client) {\n      if (!transaction.client.transacting) {\n        transaction.client.logger.warn(\n          `Invalid transaction value: ${transaction.client}`\n        );\n      } else {\n        this.client = transaction.client;\n      }\n    }\n    if (isEmpty(transaction)) {\n      this.client.logger.error(\n        'Invalid value on transacting call, potential bug'\n      );\n      throw Error(\n        'Invalid transacting value (null, undefined or empty object)'\n      );\n    }\n    return this;\n  };\n\n  // Initializes a stream.\n  Target.prototype.stream = function (options) {\n    return this.client.runner(this).stream(options);\n  };\n\n  // Initialize a stream & pipe automatically.\n  Target.prototype.pipe = function (writable, options) {\n    return this.client.runner(this).pipe(writable, options);\n  };\n\n  Target.prototype.asCallback = function (cb) {\n    const promise = this.then();\n    callbackify(() => promise)(cb);\n    return promise;\n  };\n\n  Target.prototype.catch = function (onReject) {\n    return this.then().catch(onReject);\n  };\n\n  Object.defineProperty(Target.prototype, Symbol.toStringTag, {\n    get: () => 'object',\n  });\n\n  finallyMixin(Target.prototype);\n}\n\nmodule.exports = {\n  augmentWithBuilderInterface,\n};\n","// Builder\n// -------\nconst assert = require('assert');\nconst { EventEmitter } = require('events');\nconst assign = require('lodash/assign');\nconst clone = require('lodash/clone');\nconst each = require('lodash/each');\nconst isEmpty = require('lodash/isEmpty');\nconst isPlainObject = require('lodash/isPlainObject');\nconst last = require('lodash/last');\nconst reject = require('lodash/reject');\nconst tail = require('lodash/tail');\nconst toArray = require('lodash/toArray');\n\nconst { addQueryContext, normalizeArr } = require('../util/helpers');\nconst JoinClause = require('./joinclause');\nconst Analytic = require('./analytic');\nconst saveAsyncStack = require('../util/save-async-stack');\nconst {\n  isBoolean,\n  isNumber,\n  isObject,\n  isString,\n  isFunction,\n} = require('../util/is');\n\nconst { lockMode, waitMode } = require('./constants');\nconst {\n  augmentWithBuilderInterface,\n} = require('../builder-interface-augmenter');\n\nconst SELECT_COMMANDS = new Set(['pluck', 'first', 'select']);\nconst CLEARABLE_STATEMENTS = new Set([\n  'with',\n  'select',\n  'columns',\n  'hintComments',\n  'where',\n  'union',\n  'join',\n  'group',\n  'order',\n  'having',\n  'limit',\n  'offset',\n  'counter',\n  'counters',\n]);\nconst LOCK_MODES = new Set([\n  lockMode.forShare,\n  lockMode.forUpdate,\n  lockMode.forNoKeyUpdate,\n  lockMode.forKeyShare,\n]);\n\n// Typically called from `knex.builder`,\n// start a new query building chain.\nclass Builder extends EventEmitter {\n  constructor(client) {\n    super();\n    this.client = client;\n    this.and = this;\n    this._single = {};\n    this._statements = [];\n    this._method = 'select';\n    if (client.config) {\n      saveAsyncStack(this, 5);\n      this._debug = client.config.debug;\n    }\n    // Internal flags used in the builder.\n    this._joinFlag = 'inner';\n    this._boolFlag = 'and';\n    this._notFlag = false;\n    this._asColumnFlag = false;\n  }\n\n  toString() {\n    return this.toQuery();\n  }\n\n  // Convert the current query \"toSQL\"\n  toSQL(method, tz) {\n    return this.client.queryCompiler(this).toSQL(method || this._method, tz);\n  }\n\n  // Create a shallow clone of the current query builder.\n  clone() {\n    const cloned = new this.constructor(this.client);\n    cloned._method = this._method;\n    cloned._single = clone(this._single);\n    cloned._statements = clone(this._statements);\n    cloned._debug = this._debug;\n\n    // `_option` is assigned by the `Interface` mixin.\n    if (this._options !== undefined) {\n      cloned._options = clone(this._options);\n    }\n    if (this._queryContext !== undefined) {\n      cloned._queryContext = clone(this._queryContext);\n    }\n    if (this._connection !== undefined) {\n      cloned._connection = this._connection;\n    }\n\n    return cloned;\n  }\n\n  timeout(ms, { cancel } = {}) {\n    if (isNumber(ms) && ms > 0) {\n      this._timeout = ms;\n      if (cancel) {\n        this.client.assertCanCancelQuery();\n        this._cancelOnTimeout = true;\n      }\n    }\n    return this;\n  }\n\n  // With\n  // ------\n  isValidStatementArg(statement) {\n    return (\n      typeof statement === 'function' ||\n      statement instanceof Builder ||\n      (statement && statement.isRawInstance)\n    );\n  }\n\n  _validateWithArgs(alias, statementOrColumnList, nothingOrStatement, method) {\n    const [query, columnList] =\n      typeof nothingOrStatement === 'undefined'\n        ? [statementOrColumnList, undefined]\n        : [nothingOrStatement, statementOrColumnList];\n    if (typeof alias !== 'string') {\n      throw new Error(`${method}() first argument must be a string`);\n    }\n\n    if (this.isValidStatementArg(query) && typeof columnList === 'undefined') {\n      // Validated as two-arg variant (alias, statement).\n      return;\n    }\n\n    // Attempt to interpret as three-arg variant (alias, columnList, statement).\n    const isNonEmptyNameList =\n      Array.isArray(columnList) &&\n      columnList.length > 0 &&\n      columnList.every((it) => typeof it === 'string');\n    if (!isNonEmptyNameList) {\n      throw new Error(\n        `${method}() second argument must be a statement or non-empty column name list.`\n      );\n    }\n\n    if (this.isValidStatementArg(query)) {\n      return;\n    }\n    throw new Error(\n      `${method}() third argument must be a function / QueryBuilder or a raw when its second argument is a column name list`\n    );\n  }\n\n  with(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'with'\n    );\n    return this.withWrapped(alias, statementOrColumnList, nothingOrStatement);\n  }\n\n  withMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    throw new Error('With materialized is not supported by this dialect');\n  }\n\n  withNotMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    throw new Error('With materialized is not supported by this dialect');\n  }\n\n  // Helper for compiling any advanced `with` queries.\n  withWrapped(alias, statementOrColumnList, nothingOrStatement, materialized) {\n    const [query, columnList] =\n      typeof nothingOrStatement === 'undefined'\n        ? [statementOrColumnList, undefined]\n        : [nothingOrStatement, statementOrColumnList];\n    const statement = {\n      grouping: 'with',\n      type: 'withWrapped',\n      alias: alias,\n      columnList,\n      value: query,\n    };\n    if (materialized !== undefined) {\n      statement.materialized = materialized;\n    }\n    this._statements.push(statement);\n    return this;\n  }\n\n  // With Recursive\n  // ------\n\n  withRecursive(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'withRecursive'\n    );\n    return this.withRecursiveWrapped(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement\n    );\n  }\n\n  // Helper for compiling any advanced `withRecursive` queries.\n  withRecursiveWrapped(alias, statementOrColumnList, nothingOrStatement) {\n    this.withWrapped(alias, statementOrColumnList, nothingOrStatement);\n    this._statements[this._statements.length - 1].recursive = true;\n    return this;\n  }\n\n  // Select\n  // ------\n\n  // Adds a column or columns to the list of \"columns\"\n  // being selected on the query.\n  columns(column) {\n    if (!column && column !== 0) return this;\n    this._statements.push({\n      grouping: 'columns',\n      value: normalizeArr(...arguments),\n    });\n    return this;\n  }\n\n  // Allow for a sub-select to be explicitly aliased as a column,\n  // without needing to compile the query in a where.\n  as(column) {\n    this._single.as = column;\n    return this;\n  }\n\n  // Adds a single hint or an array of hits to the list of \"hintComments\" on the query.\n  hintComment(hints) {\n    hints = Array.isArray(hints) ? hints : [hints];\n    if (hints.some((hint) => !isString(hint))) {\n      throw new Error('Hint comment must be a string');\n    }\n    if (hints.some((hint) => hint.includes('/*') || hint.includes('*/'))) {\n      throw new Error('Hint comment cannot include \"/*\" or \"*/\"');\n    }\n    if (hints.some((hint) => hint.includes('?'))) {\n      throw new Error('Hint comment cannot include \"?\"');\n    }\n    this._statements.push({\n      grouping: 'hintComments',\n      value: hints,\n    });\n    return this;\n  }\n\n  // Prepends the `schemaName` on `tableName` defined by `.table` and `.join`.\n  withSchema(schemaName) {\n    this._single.schema = schemaName;\n    return this;\n  }\n\n  // Sets the `tableName` on the query.\n  // Alias to \"from\" for select and \"into\" for insert statements\n  // e.g. builder.insert({a: value}).into('tableName')\n  // `options`: options object containing keys:\n  //   - `only`: whether the query should use SQL's ONLY to not return\n  //           inheriting table data. Defaults to false.\n  table(tableName, options = {}) {\n    this._single.table = tableName;\n    this._single.only = options.only === true;\n    return this;\n  }\n\n  // Adds a `distinct` clause to the query.\n  distinct(...args) {\n    this._statements.push({\n      grouping: 'columns',\n      value: normalizeArr(...args),\n      distinct: true,\n    });\n    return this;\n  }\n\n  distinctOn(...args) {\n    if (isEmpty(args)) {\n      throw new Error('distinctOn requires at least on argument');\n    }\n    this._statements.push({\n      grouping: 'columns',\n      value: normalizeArr(...args),\n      distinctOn: true,\n    });\n    return this;\n  }\n\n  // Adds a join clause to the query, allowing for advanced joins\n  // with an anonymous function as the second argument.\n  join(table, first, ...args) {\n    let join;\n    const schema =\n      table instanceof Builder || typeof table === 'function'\n        ? undefined\n        : this._single.schema;\n    const joinType = this._joinType();\n    if (typeof first === 'function') {\n      join = new JoinClause(table, joinType, schema);\n      first.call(join, join);\n    } else if (joinType === 'raw') {\n      join = new JoinClause(this.client.raw(table, first), 'raw');\n    } else {\n      join = new JoinClause(table, joinType, schema);\n      if (first) {\n        join.on(first, ...args);\n      }\n    }\n    this._statements.push(join);\n    return this;\n  }\n\n  using(tables) {\n    throw new Error(\n      \"'using' function is only available in PostgreSQL dialect with Delete statements.\"\n    );\n  }\n\n  // JOIN blocks:\n  innerJoin(...args) {\n    return this._joinType('inner').join(...args);\n  }\n\n  leftJoin(...args) {\n    return this._joinType('left').join(...args);\n  }\n\n  leftOuterJoin(...args) {\n    return this._joinType('left outer').join(...args);\n  }\n\n  rightJoin(...args) {\n    return this._joinType('right').join(...args);\n  }\n\n  rightOuterJoin(...args) {\n    return this._joinType('right outer').join(...args);\n  }\n\n  outerJoin(...args) {\n    return this._joinType('outer').join(...args);\n  }\n\n  fullOuterJoin(...args) {\n    return this._joinType('full outer').join(...args);\n  }\n\n  crossJoin(...args) {\n    return this._joinType('cross').join(...args);\n  }\n\n  joinRaw(...args) {\n    return this._joinType('raw').join(...args);\n  }\n\n  // Where modifiers:\n  get or() {\n    return this._bool('or');\n  }\n\n  get not() {\n    return this._not(true);\n  }\n\n  // The where function can be used in several ways:\n  // The most basic is `where(key, value)`, which expands to\n  // where key = value.\n  where(column, operator, value) {\n    const argsLength = arguments.length;\n\n    // Support \"where true || where false\"\n    if (column === false || column === true) {\n      return this.where(1, '=', column ? 1 : 0);\n    }\n\n    // Check if the column is a function, in which case it's\n    // a where statement wrapped in parens.\n    if (typeof column === 'function') {\n      return this.whereWrapped(column);\n    }\n\n    // Allows `where({id: 2})` syntax.\n    if (isObject(column) && !column.isRawInstance)\n      return this._objectWhere(column);\n\n    // Allow a raw statement to be passed along to the query.\n    if (column && column.isRawInstance && argsLength === 1)\n      return this.whereRaw(column);\n\n    // Enable the where('key', value) syntax, only when there\n    // are explicitly two arguments passed, so it's not possible to\n    // do where('key', '!=') and have that turn into where key != null\n    if (argsLength === 2) {\n      value = operator;\n      operator = '=';\n\n      // If the value is null, and it's a two argument query,\n      // we assume we're going for a `whereNull`.\n      if (value === null) {\n        return this.whereNull(column);\n      }\n    }\n\n    // lower case the operator for comparison purposes\n    const checkOperator = `${operator}`.toLowerCase().trim();\n\n    // If there are 3 arguments, check whether 'in' is one of them.\n    if (argsLength === 3) {\n      if (checkOperator === 'in' || checkOperator === 'not in') {\n        return this._not(checkOperator === 'not in').whereIn(column, value);\n      }\n      if (checkOperator === 'between' || checkOperator === 'not between') {\n        return this._not(checkOperator === 'not between').whereBetween(\n          column,\n          value\n        );\n      }\n    }\n\n    // If the value is still null, check whether they're meaning\n    // where value is null\n    if (value === null) {\n      // Check for .where(key, 'is', null) or .where(key, 'is not', 'null');\n      if (checkOperator === 'is' || checkOperator === 'is not') {\n        return this._not(checkOperator === 'is not').whereNull(column);\n      }\n    }\n\n    // Push onto the where statement stack.\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereBasic',\n      column,\n      operator,\n      value,\n      not: this._not(),\n      bool: this._bool(),\n      asColumn: this._asColumnFlag,\n    });\n    return this;\n  }\n\n  whereColumn(...args) {\n    this._asColumnFlag = true;\n    this.where(...args);\n    this._asColumnFlag = false;\n    return this;\n  }\n\n  // Adds an `or where` clause to the query.\n  orWhere(column, ...args) {\n    this._bool('or');\n    const obj = column;\n    if (isObject(obj) && !obj.isRawInstance) {\n      return this.whereWrapped(function () {\n        for (const key in obj) {\n          this.andWhere(key, obj[key]);\n        }\n      });\n    }\n    return this.where(column, ...args);\n  }\n\n  orWhereColumn(column, ...args) {\n    this._bool('or');\n    const obj = column;\n    if (isObject(obj) && !obj.isRawInstance) {\n      return this.whereWrapped(function () {\n        for (const key in obj) {\n          this.andWhereColumn(key, '=', obj[key]);\n        }\n      });\n    }\n    return this.whereColumn(column, ...args);\n  }\n\n  // Adds an `not where` clause to the query.\n  whereNot(column, ...args) {\n    if (args.length >= 2) {\n      if (args[0] === 'in' || args[0] === 'between') {\n        this.client.logger.warn(\n          'whereNot is not suitable for \"in\" and \"between\" type subqueries. You should use \"not in\" and \"not between\" instead.'\n        );\n      }\n    }\n    return this._not(true).where(column, ...args);\n  }\n\n  whereNotColumn(...args) {\n    return this._not(true).whereColumn(...args);\n  }\n\n  // Adds an `or not where` clause to the query.\n  orWhereNot(...args) {\n    return this._bool('or').whereNot(...args);\n  }\n\n  orWhereNotColumn(...args) {\n    return this._bool('or').whereNotColumn(...args);\n  }\n\n  // Processes an object literal provided in a \"where\" clause.\n  _objectWhere(obj) {\n    const boolVal = this._bool();\n    const notVal = this._not() ? 'Not' : '';\n    for (const key in obj) {\n      this[boolVal + 'Where' + notVal](key, obj[key]);\n    }\n    return this;\n  }\n\n  // Adds a raw `where` clause to the query.\n  whereRaw(sql, bindings) {\n    const raw = sql.isRawInstance ? sql : this.client.raw(sql, bindings);\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereRaw',\n      value: raw,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orWhereRaw(sql, bindings) {\n    return this._bool('or').whereRaw(sql, bindings);\n  }\n\n  // Helper for compiling any advanced `where` queries.\n  whereWrapped(callback) {\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereWrapped',\n      value: callback,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds a `where exists` clause to the query.\n  whereExists(callback) {\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereExists',\n      value: callback,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds an `or where exists` clause to the query.\n  orWhereExists(callback) {\n    return this._bool('or').whereExists(callback);\n  }\n\n  // Adds a `where not exists` clause to the query.\n  whereNotExists(callback) {\n    return this._not(true).whereExists(callback);\n  }\n\n  // Adds a `or where not exists` clause to the query.\n  orWhereNotExists(callback) {\n    return this._bool('or').whereNotExists(callback);\n  }\n\n  // Adds a `where in` clause to the query.\n  whereIn(column, values) {\n    if (Array.isArray(values) && isEmpty(values))\n      return this.where(this._not());\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereIn',\n      column,\n      value: values,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds a `or where in` clause to the query.\n  orWhereIn(column, values) {\n    return this._bool('or').whereIn(column, values);\n  }\n\n  // Adds a `where not in` clause to the query.\n  whereNotIn(column, values) {\n    return this._not(true).whereIn(column, values);\n  }\n\n  // Adds a `or where not in` clause to the query.\n  orWhereNotIn(column, values) {\n    return this._bool('or')._not(true).whereIn(column, values);\n  }\n\n  // Adds a `where null` clause to the query.\n  whereNull(column) {\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereNull',\n      column,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds a `or where null` clause to the query.\n  orWhereNull(column) {\n    return this._bool('or').whereNull(column);\n  }\n\n  // Adds a `where not null` clause to the query.\n  whereNotNull(column) {\n    return this._not(true).whereNull(column);\n  }\n\n  // Adds a `or where not null` clause to the query.\n  orWhereNotNull(column) {\n    return this._bool('or').whereNotNull(column);\n  }\n\n  // Adds a `where between` clause to the query.\n  whereBetween(column, values) {\n    assert(\n      Array.isArray(values),\n      'The second argument to whereBetween must be an array.'\n    );\n    assert(\n      values.length === 2,\n      'You must specify 2 values for the whereBetween clause'\n    );\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereBetween',\n      column,\n      value: values,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds a `where not between` clause to the query.\n  whereNotBetween(column, values) {\n    return this._not(true).whereBetween(column, values);\n  }\n\n  // Adds a `or where between` clause to the query.\n  orWhereBetween(column, values) {\n    return this._bool('or').whereBetween(column, values);\n  }\n\n  // Adds a `or where not between` clause to the query.\n  orWhereNotBetween(column, values) {\n    return this._bool('or').whereNotBetween(column, values);\n  }\n\n  _whereLike(type, column, value) {\n    this._statements.push({\n      grouping: 'where',\n      type: type,\n      column,\n      value: value,\n      not: this._not(),\n      bool: this._bool(),\n      asColumn: this._asColumnFlag,\n    });\n    return this;\n  }\n\n  // Adds a `where like` clause to the query.\n  whereLike(column, value) {\n    return this._whereLike('whereLike', column, value);\n  }\n\n  // Adds a `or where like` clause to the query.\n  orWhereLike(column, value) {\n    return this._bool('or')._whereLike('whereLike', column, value);\n  }\n\n  // Adds a `where ilike` clause to the query.\n  whereILike(column, value) {\n    return this._whereLike('whereILike', column, value);\n  }\n\n  // Adds a `or where ilike` clause to the query.\n  orWhereILike(column, value) {\n    return this._bool('or')._whereLike('whereILike', column, value);\n  }\n\n  // Adds a `group by` clause to the query.\n  groupBy(item) {\n    if (item && item.isRawInstance) {\n      return this.groupByRaw.apply(this, arguments);\n    }\n    this._statements.push({\n      grouping: 'group',\n      type: 'groupByBasic',\n      value: normalizeArr(...arguments),\n    });\n    return this;\n  }\n\n  // Adds a raw `group by` clause to the query.\n  groupByRaw(sql, bindings) {\n    const raw = sql.isRawInstance ? sql : this.client.raw(sql, bindings);\n    this._statements.push({\n      grouping: 'group',\n      type: 'groupByRaw',\n      value: raw,\n    });\n    return this;\n  }\n\n  // Adds a `order by` clause to the query.\n  orderBy(column, direction, nulls = '') {\n    if (Array.isArray(column)) {\n      return this._orderByArray(column);\n    }\n    this._statements.push({\n      grouping: 'order',\n      type: 'orderByBasic',\n      value: column,\n      direction,\n      nulls,\n    });\n    return this;\n  }\n\n  // Adds a `order by` with multiple columns to the query.\n  _orderByArray(columnDefs) {\n    for (let i = 0; i < columnDefs.length; i++) {\n      const columnInfo = columnDefs[i];\n      if (isObject(columnInfo)) {\n        this._statements.push({\n          grouping: 'order',\n          type: 'orderByBasic',\n          value: columnInfo['column'],\n          direction: columnInfo['order'],\n          nulls: columnInfo['nulls'],\n        });\n      } else if (isString(columnInfo)) {\n        this._statements.push({\n          grouping: 'order',\n          type: 'orderByBasic',\n          value: columnInfo,\n        });\n      }\n    }\n    return this;\n  }\n\n  // Add a raw `order by` clause to the query.\n  orderByRaw(sql, bindings) {\n    const raw = sql.isRawInstance ? sql : this.client.raw(sql, bindings);\n    this._statements.push({\n      grouping: 'order',\n      type: 'orderByRaw',\n      value: raw,\n    });\n    return this;\n  }\n\n  _union(clause, args) {\n    let callbacks = args[0];\n    let wrap = args[1];\n    if (args.length === 1 || (args.length === 2 && isBoolean(wrap))) {\n      if (!Array.isArray(callbacks)) {\n        callbacks = [callbacks];\n      }\n      for (let i = 0, l = callbacks.length; i < l; i++) {\n        this._statements.push({\n          grouping: 'union',\n          clause: clause,\n          value: callbacks[i],\n          wrap: wrap || false,\n        });\n      }\n    } else {\n      callbacks = toArray(args).slice(0, args.length - 1);\n      wrap = args[args.length - 1];\n      if (!isBoolean(wrap)) {\n        callbacks.push(wrap);\n        wrap = false;\n      }\n      this._union(clause, [callbacks, wrap]);\n    }\n    return this;\n  }\n\n  // Add a union statement to the query.\n  union(...args) {\n    return this._union('union', args);\n  }\n\n  // Adds a union all statement to the query.\n  unionAll(...args) {\n    return this._union('union all', args);\n  }\n\n  // Adds an intersect statement to the query\n  intersect(callbacks, wrap) {\n    if (arguments.length === 1 || (arguments.length === 2 && isBoolean(wrap))) {\n      if (!Array.isArray(callbacks)) {\n        callbacks = [callbacks];\n      }\n      for (let i = 0, l = callbacks.length; i < l; i++) {\n        this._statements.push({\n          grouping: 'union',\n          clause: 'intersect',\n          value: callbacks[i],\n          wrap: wrap || false,\n        });\n      }\n    } else {\n      callbacks = toArray(arguments).slice(0, arguments.length - 1);\n      wrap = arguments[arguments.length - 1];\n      if (!isBoolean(wrap)) {\n        callbacks.push(wrap);\n        wrap = false;\n      }\n      this.intersect(callbacks, wrap);\n    }\n    return this;\n  }\n\n  // Adds a `having` clause to the query.\n  having(column, operator, value) {\n    if (column.isRawInstance && arguments.length === 1) {\n      return this.havingRaw(column);\n    }\n\n    // Check if the column is a function, in which case it's\n    // a having statement wrapped in parens.\n    if (typeof column === 'function') {\n      return this.havingWrapped(column);\n    }\n\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingBasic',\n      column,\n      operator,\n      value,\n      bool: this._bool(),\n      not: this._not(),\n    });\n    return this;\n  }\n\n  orHaving(column, ...args) {\n    this._bool('or');\n    const obj = column;\n    if (isObject(obj) && !obj.isRawInstance) {\n      return this.havingWrapped(function () {\n        for (const key in obj) {\n          this.andHaving(key, obj[key]);\n        }\n      });\n    }\n    return this.having(column, ...args);\n  }\n\n  // Helper for compiling any advanced `having` queries.\n  havingWrapped(callback) {\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingWrapped',\n      value: callback,\n      bool: this._bool(),\n      not: this._not(),\n    });\n    return this;\n  }\n\n  havingNull(column) {\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingNull',\n      column,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orHavingNull(callback) {\n    return this._bool('or').havingNull(callback);\n  }\n\n  havingNotNull(callback) {\n    return this._not(true).havingNull(callback);\n  }\n\n  orHavingNotNull(callback) {\n    return this._not(true)._bool('or').havingNull(callback);\n  }\n\n  havingExists(callback) {\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingExists',\n      value: callback,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orHavingExists(callback) {\n    return this._bool('or').havingExists(callback);\n  }\n\n  havingNotExists(callback) {\n    return this._not(true).havingExists(callback);\n  }\n\n  orHavingNotExists(callback) {\n    return this._not(true)._bool('or').havingExists(callback);\n  }\n\n  havingBetween(column, values) {\n    assert(\n      Array.isArray(values),\n      'The second argument to havingBetween must be an array.'\n    );\n    assert(\n      values.length === 2,\n      'You must specify 2 values for the havingBetween clause'\n    );\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingBetween',\n      column,\n      value: values,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orHavingBetween(column, values) {\n    return this._bool('or').havingBetween(column, values);\n  }\n\n  havingNotBetween(column, values) {\n    return this._not(true).havingBetween(column, values);\n  }\n\n  orHavingNotBetween(column, values) {\n    return this._not(true)._bool('or').havingBetween(column, values);\n  }\n\n  havingIn(column, values) {\n    if (Array.isArray(values) && isEmpty(values))\n      return this.where(this._not());\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingIn',\n      column,\n      value: values,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds a `or where in` clause to the query.\n  orHavingIn(column, values) {\n    return this._bool('or').havingIn(column, values);\n  }\n\n  // Adds a `where not in` clause to the query.\n  havingNotIn(column, values) {\n    return this._not(true).havingIn(column, values);\n  }\n\n  // Adds a `or where not in` clause to the query.\n  orHavingNotIn(column, values) {\n    return this._bool('or')._not(true).havingIn(column, values);\n  }\n\n  // Adds a raw `having` clause to the query.\n  havingRaw(sql, bindings) {\n    const raw = sql.isRawInstance ? sql : this.client.raw(sql, bindings);\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingRaw',\n      value: raw,\n      bool: this._bool(),\n      not: this._not(),\n    });\n    return this;\n  }\n\n  orHavingRaw(sql, bindings) {\n    return this._bool('or').havingRaw(sql, bindings);\n  }\n\n  // set the skip binding parameter (= insert the raw value in the query) for an attribute.\n  _setSkipBinding(attribute, options) {\n    let skipBinding = options;\n    if (isObject(options)) {\n      skipBinding = options.skipBinding;\n    }\n    this._single.skipBinding = this._single.skipBinding || {};\n    this._single.skipBinding[attribute] = skipBinding;\n  }\n\n  // Only allow a single \"offset\" to be set for the current query.\n  offset(value, options) {\n    if (value == null || value.isRawInstance || value instanceof Builder) {\n      // Builder for backward compatibility\n      this._single.offset = value;\n    } else {\n      const val = parseInt(value, 10);\n      if (isNaN(val)) {\n        this.client.logger.warn('A valid integer must be provided to offset');\n      } else if (val < 0) {\n        throw new Error(`A non-negative integer must be provided to offset.`);\n      } else {\n        this._single.offset = val;\n      }\n    }\n    this._setSkipBinding('offset', options);\n    return this;\n  }\n\n  // Only allow a single \"limit\" to be set for the current query.\n  limit(value, options) {\n    const val = parseInt(value, 10);\n    if (isNaN(val)) {\n      this.client.logger.warn('A valid integer must be provided to limit');\n    } else {\n      this._single.limit = val;\n      this._setSkipBinding('limit', options);\n    }\n    return this;\n  }\n\n  // Retrieve the \"count\" result of the query.\n  count(column, options) {\n    return this._aggregate('count', column || '*', options);\n  }\n\n  // Retrieve the minimum value of a given column.\n  min(column, options) {\n    return this._aggregate('min', column, options);\n  }\n\n  // Retrieve the maximum value of a given column.\n  max(column, options) {\n    return this._aggregate('max', column, options);\n  }\n\n  // Retrieve the sum of the values of a given column.\n  sum(column, options) {\n    return this._aggregate('sum', column, options);\n  }\n\n  // Retrieve the average of the values of a given column.\n  avg(column, options) {\n    return this._aggregate('avg', column, options);\n  }\n\n  // Retrieve the \"count\" of the distinct results of the query.\n  countDistinct(...columns) {\n    let options;\n    if (columns.length > 1 && isPlainObject(last(columns))) {\n      [options] = columns.splice(columns.length - 1, 1);\n    }\n\n    if (!columns.length) {\n      columns = '*';\n    } else if (columns.length === 1) {\n      columns = columns[0];\n    }\n\n    return this._aggregate('count', columns, { ...options, distinct: true });\n  }\n\n  // Retrieve the sum of the distinct values of a given column.\n  sumDistinct(column, options) {\n    return this._aggregate('sum', column, { ...options, distinct: true });\n  }\n\n  // Retrieve the vg of the distinct results of the query.\n  avgDistinct(column, options) {\n    return this._aggregate('avg', column, { ...options, distinct: true });\n  }\n\n  // Increments a column's value by the specified amount.\n  increment(column, amount = 1) {\n    if (isObject(column)) {\n      for (const key in column) {\n        this._counter(key, column[key]);\n      }\n\n      return this;\n    }\n\n    return this._counter(column, amount);\n  }\n\n  // Decrements a column's value by the specified amount.\n  decrement(column, amount = 1) {\n    if (isObject(column)) {\n      for (const key in column) {\n        this._counter(key, -column[key]);\n      }\n\n      return this;\n    }\n\n    return this._counter(column, -amount);\n  }\n\n  // Clears increments/decrements\n  clearCounters() {\n    this._single.counter = {};\n    return this;\n  }\n\n  // Sets the values for a `select` query, informing that only the first\n  // row should be returned (limit 1).\n  first(...args) {\n    if (this._method && this._method !== 'select') {\n      throw new Error(`Cannot chain .first() on \"${this._method}\" query`);\n    }\n\n    this.select(normalizeArr(...args));\n    this._method = 'first';\n    this.limit(1);\n    return this;\n  }\n\n  // Use existing connection to execute the query\n  // Same value that client.acquireConnection() for an according client returns should be passed\n  connection(_connection) {\n    this._connection = _connection;\n    this.client.processPassedConnection(_connection);\n    return this;\n  }\n\n  // Pluck a column from a query.\n  pluck(column) {\n    if (this._method && this._method !== 'select') {\n      throw new Error(`Cannot chain .pluck() on \"${this._method}\" query`);\n    }\n\n    this._method = 'pluck';\n    this._single.pluck = column;\n    this._statements.push({\n      grouping: 'columns',\n      type: 'pluck',\n      value: column,\n    });\n    return this;\n  }\n\n  // Deprecated. Remove everything from select clause\n  clearSelect() {\n    this._clearGrouping('columns');\n    return this;\n  }\n\n  // Deprecated. Remove everything from where clause\n  clearWhere() {\n    this._clearGrouping('where');\n    return this;\n  }\n\n  // Deprecated. Remove everything from group clause\n  clearGroup() {\n    this._clearGrouping('group');\n    return this;\n  }\n\n  // Deprecated. Remove everything from order clause\n  clearOrder() {\n    this._clearGrouping('order');\n    return this;\n  }\n\n  // Deprecated. Remove everything from having clause\n  clearHaving() {\n    this._clearGrouping('having');\n    return this;\n  }\n\n  // Remove everything from statement clause\n  clear(statement) {\n    if (!CLEARABLE_STATEMENTS.has(statement))\n      throw new Error(`Knex Error: unknown statement '${statement}'`);\n    if (statement.startsWith('counter')) return this.clearCounters();\n    if (statement === 'select') {\n      statement = 'columns';\n    }\n    this._clearGrouping(statement);\n    return this;\n  }\n\n  // Insert & Update\n  // ------\n\n  // Sets the values for an `insert` query.\n  insert(values, returning, options) {\n    this._method = 'insert';\n    if (!isEmpty(returning)) this.returning(returning, options);\n    this._single.insert = values;\n    return this;\n  }\n\n  // Sets the values for an `update`, allowing for both\n  // `.update(key, value, [returning])` and `.update(obj, [returning])` syntaxes.\n  update(values, returning, options) {\n    let ret;\n    const obj = this._single.update || {};\n    this._method = 'update';\n    if (isString(values)) {\n      if (isPlainObject(returning)) {\n        obj[values] = JSON.stringify(returning);\n      } else {\n        obj[values] = returning;\n      }\n      if (arguments.length > 2) {\n        ret = arguments[2];\n      }\n    } else {\n      const keys = Object.keys(values);\n      if (this._single.update) {\n        this.client.logger.warn('Update called multiple times with objects.');\n      }\n      let i = -1;\n      while (++i < keys.length) {\n        obj[keys[i]] = values[keys[i]];\n      }\n      ret = arguments[1];\n    }\n    if (!isEmpty(ret)) this.returning(ret, options);\n    this._single.update = obj;\n    return this;\n  }\n\n  // Sets the returning value for the query.\n  returning(returning, options) {\n    this._single.returning = returning;\n    this._single.options = options;\n    return this;\n  }\n\n  onConflict(columns) {\n    if (typeof columns === 'string') {\n      columns = [columns];\n    }\n    return new OnConflictBuilder(this, columns || true);\n  }\n\n  // Delete\n  // ------\n\n  // Executes a delete statement on the query;\n  delete(ret, options) {\n    this._method = 'del';\n    if (!isEmpty(ret)) this.returning(ret, options);\n    return this;\n  }\n\n  // Truncates a table, ends the query chain.\n  truncate(tableName) {\n    this._method = 'truncate';\n    if (tableName) {\n      this._single.table = tableName;\n    }\n    return this;\n  }\n\n  // Retrieves columns for the table specified by `knex(tableName)`\n  columnInfo(column) {\n    this._method = 'columnInfo';\n    this._single.columnInfo = column;\n    return this;\n  }\n\n  // Set a lock for update constraint.\n  forUpdate(...tables) {\n    this._single.lock = lockMode.forUpdate;\n    if (tables.length === 1 && Array.isArray(tables[0])) {\n      this._single.lockTables = tables[0];\n    } else {\n      this._single.lockTables = tables;\n    }\n    return this;\n  }\n\n  // Set a lock for share constraint.\n  forShare(...tables) {\n    this._single.lock = lockMode.forShare;\n    this._single.lockTables = tables;\n    return this;\n  }\n\n  // Set a lock for no key update constraint.\n  forNoKeyUpdate(...tables) {\n    this._single.lock = lockMode.forNoKeyUpdate;\n    this._single.lockTables = tables;\n    return this;\n  }\n\n  // Set a lock for key share constraint.\n  forKeyShare(...tables) {\n    this._single.lock = lockMode.forKeyShare;\n    this._single.lockTables = tables;\n    return this;\n  }\n\n  // Skips locked rows when using a lock constraint.\n  skipLocked() {\n    if (!this._isSelectQuery()) {\n      throw new Error(`Cannot chain .skipLocked() on \"${this._method}\" query!`);\n    }\n    if (!this._hasLockMode()) {\n      throw new Error(\n        '.skipLocked() can only be used after a call to .forShare() or .forUpdate()!'\n      );\n    }\n    if (this._single.waitMode === waitMode.noWait) {\n      throw new Error('.skipLocked() cannot be used together with .noWait()!');\n    }\n    this._single.waitMode = waitMode.skipLocked;\n    return this;\n  }\n\n  // Causes error when acessing a locked row instead of waiting for it to be released.\n  noWait() {\n    if (!this._isSelectQuery()) {\n      throw new Error(`Cannot chain .noWait() on \"${this._method}\" query!`);\n    }\n    if (!this._hasLockMode()) {\n      throw new Error(\n        '.noWait() can only be used after a call to .forShare() or .forUpdate()!'\n      );\n    }\n    if (this._single.waitMode === waitMode.skipLocked) {\n      throw new Error('.noWait() cannot be used together with .skipLocked()!');\n    }\n    this._single.waitMode = waitMode.noWait;\n    return this;\n  }\n\n  // Takes a JS object of methods to call and calls them\n  fromJS(obj) {\n    each(obj, (val, key) => {\n      if (typeof this[key] !== 'function') {\n        this.client.logger.warn(`Knex Error: unknown key ${key}`);\n      }\n      if (Array.isArray(val)) {\n        this[key].apply(this, val);\n      } else {\n        this[key](val);\n      }\n    });\n    return this;\n  }\n\n  fromRaw(sql, bindings) {\n    const raw = sql.isRawInstance ? sql : this.client.raw(sql, bindings);\n    return this.from(raw);\n  }\n\n  // Passes query to provided callback function, useful for e.g. composing\n  // domain-specific helpers\n  modify(callback) {\n    callback.apply(this, [this].concat(tail(arguments)));\n    return this;\n  }\n\n  upsert(values, returning, options) {\n    throw new Error(\n      `Upsert is not yet supported for dialect ${this.client.dialect}`\n    );\n  }\n\n  // JSON support functions\n  _json(nameFunction, params) {\n    this._statements.push({\n      grouping: 'columns',\n      type: 'json',\n      method: nameFunction,\n      params: params,\n    });\n    return this;\n  }\n\n  jsonExtract() {\n    const column = arguments[0];\n    let path;\n    let alias;\n    let singleValue = true;\n\n    // We use arguments to have the signatures :\n    // - column (string or array)\n    // - column + path\n    // - column + path + alias\n    // - column + path + alias + singleValue\n    // - column array + singleValue\n    if (arguments.length >= 2) {\n      path = arguments[1];\n    }\n    if (arguments.length >= 3) {\n      alias = arguments[2];\n    }\n    if (arguments.length === 4) {\n      singleValue = arguments[3];\n    }\n    if (\n      arguments.length === 2 &&\n      Array.isArray(arguments[0]) &&\n      isBoolean(arguments[1])\n    ) {\n      singleValue = arguments[1];\n    }\n    return this._json('jsonExtract', {\n      column: column,\n      path: path,\n      alias: alias,\n      singleValue, // boolean used only in MSSQL to use function for extract value instead of object/array.\n    });\n  }\n\n  jsonSet(column, path, value, alias) {\n    return this._json('jsonSet', {\n      column: column,\n      path: path,\n      value: value,\n      alias: alias,\n    });\n  }\n\n  jsonInsert(column, path, value, alias) {\n    return this._json('jsonInsert', {\n      column: column,\n      path: path,\n      value: value,\n      alias: alias,\n    });\n  }\n\n  jsonRemove(column, path, alias) {\n    return this._json('jsonRemove', {\n      column: column,\n      path: path,\n      alias: alias,\n    });\n  }\n\n  // Wheres for JSON\n  _isJsonObject(jsonValue) {\n    return isObject(jsonValue) && !(jsonValue instanceof Builder);\n  }\n\n  _whereJsonWrappedValue(type, column, value) {\n    const whereJsonClause = {\n      grouping: 'where',\n      type: type,\n      column,\n      value: value,\n      not: this._not(),\n      bool: this._bool(),\n      asColumn: this._asColumnFlag,\n    };\n    if (arguments[3]) {\n      whereJsonClause.operator = arguments[3];\n    }\n    if (arguments[4]) {\n      whereJsonClause.jsonPath = arguments[4];\n    }\n    this._statements.push(whereJsonClause);\n  }\n\n  whereJsonObject(column, value) {\n    this._whereJsonWrappedValue('whereJsonObject', column, value);\n    return this;\n  }\n\n  orWhereJsonObject(column, operator, value) {\n    return this._bool('or').whereJsonObject(column, operator, value);\n  }\n\n  whereNotJsonObject(column, value) {\n    this._not(true)._whereJsonWrappedValue('whereJsonObject', column, value);\n    return this;\n  }\n\n  orWhereNotJsonObject(column, operator, value) {\n    return this._not(true)._bool('or').whereJsonObject(column, operator, value);\n  }\n\n  whereJsonPath(column, path, operator, value) {\n    this._whereJsonWrappedValue('whereJsonPath', column, value, operator, path);\n    return this;\n  }\n\n  orWhereJsonPath(column, path, operator, value) {\n    return this._bool('or').whereJsonPath(column, path, operator, value);\n  }\n\n  // Json superset wheres\n  whereJsonSupersetOf(column, value) {\n    this._whereJsonWrappedValue('whereJsonSupersetOf', column, value);\n    return this;\n  }\n\n  whereJsonNotSupersetOf(column, value) {\n    this._not(true).whereJsonSupersetOf(column, value);\n    return this;\n  }\n\n  orWhereJsonSupersetOf(column, value) {\n    this._whereJsonWrappedValue('whereJsonSupersetOf', column, value);\n    return this;\n  }\n\n  orWhereJsonNotSupersetOf(column, value) {\n    this._not(true)._bool('or').whereJsonSupersetOf(column, value);\n    return this;\n  }\n\n  // Json subset wheres\n  whereJsonSubsetOf(column, value) {\n    this._whereJsonWrappedValue('whereJsonSubsetOf', column, value);\n    return this;\n  }\n\n  whereJsonNotSubsetOf(column, value) {\n    this._not(true).whereJsonSubsetOf(column, value);\n    return this;\n  }\n\n  orWhereJsonSubsetOf(column, value) {\n    this._whereJsonWrappedValue('whereJsonSubsetOf', column, value);\n    return this;\n  }\n\n  orWhereJsonNotSubsetOf(column, value) {\n    this._not(true)._bool('or').whereJsonSubsetOf(column, value);\n    return this;\n  }\n\n  whereJsonHasNone(column, values) {\n    this._not(true).whereJsonHasAll(column, values);\n    return this;\n  }\n\n  // end of wheres for JSON\n\n  _analytic(alias, second, third) {\n    let analytic;\n    const { schema } = this._single;\n    const method = this._analyticMethod();\n    alias = typeof alias === 'string' ? alias : null;\n\n    assert(\n      typeof second === 'function' ||\n        second.isRawInstance ||\n        Array.isArray(second) ||\n        typeof second === 'string' ||\n        typeof second === 'object',\n      `The second argument to an analytic function must be either a function, a raw,\n       an array of string or object, an object or a single string.`\n    );\n\n    if (third) {\n      assert(\n        Array.isArray(third) ||\n          typeof third === 'string' ||\n          typeof third === 'object',\n        'The third argument to an analytic function must be either a string, an array of string or object or an object.'\n      );\n    }\n\n    if (isFunction(second)) {\n      analytic = new Analytic(method, schema, alias);\n      second.call(analytic, analytic);\n    } else if (second.isRawInstance) {\n      const raw = second;\n      analytic = {\n        grouping: 'columns',\n        type: 'analytic',\n        method: method,\n        raw: raw,\n        alias: alias,\n      };\n    } else {\n      const order = !Array.isArray(second) ? [second] : second;\n      let partitions = third || [];\n      partitions = !Array.isArray(partitions) ? [partitions] : partitions;\n      analytic = {\n        grouping: 'columns',\n        type: 'analytic',\n        method: method,\n        order: order,\n        alias: alias,\n        partitions: partitions,\n      };\n    }\n    this._statements.push(analytic);\n    return this;\n  }\n\n  rank(...args) {\n    return this._analyticMethod('rank')._analytic(...args);\n  }\n\n  denseRank(...args) {\n    return this._analyticMethod('dense_rank')._analytic(...args);\n  }\n\n  rowNumber(...args) {\n    return this._analyticMethod('row_number')._analytic(...args);\n  }\n\n  // ----------------------------------------------------------------------\n\n  // Helper for the incrementing/decrementing queries.\n  _counter(column, amount) {\n    amount = parseFloat(amount);\n\n    this._method = 'update';\n\n    this._single.counter = this._single.counter || {};\n\n    this._single.counter[column] = amount;\n\n    return this;\n  }\n\n  // Helper to get or set the \"boolFlag\" value.\n  _bool(val) {\n    if (arguments.length === 1) {\n      this._boolFlag = val;\n      return this;\n    }\n    const ret = this._boolFlag;\n    this._boolFlag = 'and';\n    return ret;\n  }\n\n  // Helper to get or set the \"notFlag\" value.\n  _not(val) {\n    if (arguments.length === 1) {\n      this._notFlag = val;\n      return this;\n    }\n    const ret = this._notFlag;\n    this._notFlag = false;\n    return ret;\n  }\n\n  // Helper to get or set the \"joinFlag\" value.\n  _joinType(val) {\n    if (arguments.length === 1) {\n      this._joinFlag = val;\n      return this;\n    }\n    const ret = this._joinFlag || 'inner';\n    this._joinFlag = 'inner';\n    return ret;\n  }\n\n  _analyticMethod(val) {\n    if (arguments.length === 1) {\n      this._analyticFlag = val;\n      return this;\n    }\n    return this._analyticFlag || 'row_number';\n  }\n\n  // Helper for compiling any aggregate queries.\n  _aggregate(method, column, options = {}) {\n    this._statements.push({\n      grouping: 'columns',\n      type: column.isRawInstance ? 'aggregateRaw' : 'aggregate',\n      method,\n      value: column,\n      aggregateDistinct: options.distinct || false,\n      alias: options.as,\n    });\n    return this;\n  }\n\n  // Helper function for clearing or reseting a grouping type from the builder\n  _clearGrouping(grouping) {\n    if (grouping in this._single) {\n      this._single[grouping] = undefined;\n    } else {\n      this._statements = reject(this._statements, { grouping });\n    }\n  }\n\n  // Helper function that checks if the builder will emit a select query\n  _isSelectQuery() {\n    return SELECT_COMMANDS.has(this._method);\n  }\n\n  // Helper function that checks if the query has a lock mode set\n  _hasLockMode() {\n    return LOCK_MODES.has(this._single.lock);\n  }\n}\n\nBuilder.prototype.select = Builder.prototype.columns;\nBuilder.prototype.column = Builder.prototype.columns;\nBuilder.prototype.andWhereNot = Builder.prototype.whereNot;\nBuilder.prototype.andWhereNotColumn = Builder.prototype.whereNotColumn;\nBuilder.prototype.andWhere = Builder.prototype.where;\nBuilder.prototype.andWhereColumn = Builder.prototype.whereColumn;\nBuilder.prototype.andWhereRaw = Builder.prototype.whereRaw;\nBuilder.prototype.andWhereBetween = Builder.prototype.whereBetween;\nBuilder.prototype.andWhereNotBetween = Builder.prototype.whereNotBetween;\nBuilder.prototype.andWhereJsonObject = Builder.prototype.whereJsonObject;\nBuilder.prototype.andWhereNotJsonObject = Builder.prototype.whereJsonObject;\nBuilder.prototype.andWhereJsonPath = Builder.prototype.whereJsonPath;\nBuilder.prototype.andWhereLike = Builder.prototype.whereLike;\nBuilder.prototype.andWhereILike = Builder.prototype.whereILike;\nBuilder.prototype.andHaving = Builder.prototype.having;\nBuilder.prototype.andHavingIn = Builder.prototype.havingIn;\nBuilder.prototype.andHavingNotIn = Builder.prototype.havingNotIn;\nBuilder.prototype.andHavingNull = Builder.prototype.havingNull;\nBuilder.prototype.andHavingNotNull = Builder.prototype.havingNotNull;\nBuilder.prototype.andHavingExists = Builder.prototype.havingExists;\nBuilder.prototype.andHavingNotExists = Builder.prototype.havingNotExists;\nBuilder.prototype.andHavingBetween = Builder.prototype.havingBetween;\nBuilder.prototype.andHavingNotBetween = Builder.prototype.havingNotBetween;\nBuilder.prototype.from = Builder.prototype.table;\nBuilder.prototype.into = Builder.prototype.table;\nBuilder.prototype.del = Builder.prototype.delete;\n\n// Attach all of the top level promise methods that should be chainable.\naugmentWithBuilderInterface(Builder);\naddQueryContext(Builder);\n\nBuilder.extend = (methodName, fn) => {\n  if (Object.prototype.hasOwnProperty.call(Builder.prototype, methodName)) {\n    throw new Error(\n      `Can't extend QueryBuilder with existing method ('${methodName}').`\n    );\n  }\n\n  assign(Builder.prototype, { [methodName]: fn });\n};\n\n// Sub-builder for onConflict clauses\nclass OnConflictBuilder {\n  constructor(builder, columns) {\n    this.builder = builder;\n    this._columns = columns;\n  }\n\n  // Sets insert query to ignore conflicts\n  ignore() {\n    this.builder._single.onConflict = this._columns;\n    this.builder._single.ignore = true;\n    return this.builder;\n  }\n\n  // Sets insert query to update on conflict\n  merge(updates) {\n    this.builder._single.onConflict = this._columns;\n    this.builder._single.merge = { updates };\n    return this.builder;\n  }\n\n  // Prevent\n  then() {\n    throw new Error(\n      'Incomplete onConflict clause. .onConflict() must be directly followed by either .merge() or .ignore()'\n    );\n  }\n}\n\nmodule.exports = Builder;\n","/**\n * internal constants, do not use in application code\n */\nmodule.exports = {\n  lockMode: {\n    forShare: 'forShare',\n    forUpdate: 'forUpdate',\n    forNoKeyUpdate: 'forNoKeyUpdate',\n    forKeyShare: 'forKeyShare',\n  },\n  waitMode: {\n    skipLocked: 'skipLocked',\n    noWait: 'noWait',\n  },\n};\n","const assert = require('assert');\n\n// Analytic\n// -------\n\n// The \"Analytic\" is an object holding any necessary info about a analytic function\n// e.g row_number, rank, dense_rank,\nclass Analytic {\n  constructor(method, schema, alias, orderBy, partitions) {\n    this.schema = schema;\n    this.type = 'analytic';\n    this.method = method;\n    this.order = orderBy || [];\n    this.partitions = partitions || [];\n    this.alias = alias;\n    this.and = this;\n\n    this.grouping = 'columns';\n  }\n\n  partitionBy(column, direction) {\n    assert(\n      Array.isArray(column) || typeof column === 'string',\n      `The argument to an analytic partitionBy function must be either a string\n            or an array of string.`\n    );\n\n    if (Array.isArray(column)) {\n      this.partitions = this.partitions.concat(column);\n    } else {\n      this.partitions.push({ column: column, order: direction });\n    }\n    return this;\n  }\n\n  orderBy(column, direction) {\n    assert(\n      Array.isArray(column) || typeof column === 'string',\n      `The argument to an analytic orderBy function must be either a string\n            or an array of string.`\n    );\n\n    if (Array.isArray(column)) {\n      this.order = this.order.concat(column);\n    } else {\n      this.order.push({ column: column, order: direction });\n    }\n    return this;\n  }\n}\n\nmodule.exports = Analytic;\n","const { isObject } = require('../util/is');\n\n// Compiles a callback using the query builder.\nfunction compileCallback(callback, method, client, bindingsHolder) {\n  // Build the callback\n  const builder = client.queryBuilder();\n  callback.call(builder, builder);\n\n  // Compile the callback, using the current formatter (to track all bindings).\n  const compiler = client.queryCompiler(builder, bindingsHolder.bindings);\n\n  // Return the compiled & parameterized sql.\n  return compiler.toSQL(method || builder._method || 'select');\n}\n\nfunction wrapAsIdentifier(value, builder, client) {\n  const queryContext = builder.queryContext();\n  return client.wrapIdentifier((value || '').trim(), queryContext);\n}\n\nfunction formatDefault(value, type, client) {\n  if (value === void 0) {\n    return '';\n  } else if (value === null) {\n    return 'null';\n  } else if (value && value.isRawInstance) {\n    return value.toQuery();\n  } else if (type === 'bool') {\n    if (value === 'false') value = 0;\n    return `'${value ? 1 : 0}'`;\n  } else if ((type === 'json' || type === 'jsonb') && isObject(value)) {\n    return `'${JSON.stringify(value)}'`;\n  } else {\n    return client._escapeBinding(value.toString());\n  }\n}\n\nmodule.exports = {\n  compileCallback,\n  wrapAsIdentifier,\n  formatDefault,\n};\n","const transform = require('lodash/transform');\nconst QueryBuilder = require('../query/querybuilder');\nconst { compileCallback, wrapAsIdentifier } = require('./formatterUtils');\n\n// Valid values for the `order by` clause generation.\nconst orderBys = ['asc', 'desc'];\n\n// Turn this into a lookup map\nconst operators = transform(\n  [\n    '=',\n    '<',\n    '>',\n    '<=',\n    '>=',\n    '<>',\n    '!=',\n    'like',\n    'not like',\n    'between',\n    'not between',\n    'ilike',\n    'not ilike',\n    'exists',\n    'not exist',\n    'rlike',\n    'not rlike',\n    'regexp',\n    'not regexp',\n    'match',\n    '&',\n    '|',\n    '^',\n    '<<',\n    '>>',\n    '~',\n    '~=',\n    '~*',\n    '!~',\n    '!~*',\n    '#',\n    '&&',\n    '@>',\n    '<@',\n    '||',\n    '&<',\n    '&>',\n    '-|-',\n    '@@',\n    '!!',\n    ['?', '\\\\?'],\n    ['?|', '\\\\?|'],\n    ['?&', '\\\\?&'],\n  ],\n  (result, key) => {\n    if (Array.isArray(key)) {\n      result[key[0]] = key[1];\n    } else {\n      result[key] = key;\n    }\n  },\n  {}\n);\n\n// Accepts a string or array of columns to wrap as appropriate. Column can be raw\nfunction columnize(target, builder, client, bindingHolder) {\n  const columns = Array.isArray(target) ? target : [target];\n  let str = '',\n    i = -1;\n  while (++i < columns.length) {\n    if (i > 0) str += ', ';\n    str += wrap(columns[i], undefined, builder, client, bindingHolder);\n  }\n  return str;\n}\n\n// Puts the appropriate wrapper around a value depending on the database\n// engine, unless it's a knex.raw value, in which case it's left alone.\nfunction wrap(value, isParameter, builder, client, bindingHolder) {\n  const raw = unwrapRaw(value, isParameter, builder, client, bindingHolder);\n  if (raw) return raw;\n  switch (typeof value) {\n    case 'function':\n      return outputQuery(\n        compileCallback(value, undefined, client, bindingHolder),\n        true,\n        builder,\n        client\n      );\n    case 'object':\n      return parseObject(value, builder, client, bindingHolder);\n    case 'number':\n      return value;\n    default:\n      return wrapString(value + '', builder, client);\n  }\n}\n\nfunction unwrapRaw(value, isParameter, builder, client, bindingsHolder) {\n  let query;\n  if (value instanceof QueryBuilder) {\n    query = client.queryCompiler(value).toSQL();\n    if (query.bindings) {\n      bindingsHolder.bindings.push(...query.bindings);\n    }\n    return outputQuery(query, isParameter, builder, client);\n  }\n  if (value && value.isRawInstance) {\n    value.client = client;\n    if (builder._queryContext) {\n      value.queryContext = () => {\n        return builder._queryContext;\n      };\n    }\n\n    query = value.toSQL();\n    if (query.bindings) {\n      bindingsHolder.bindings.push(...query.bindings);\n    }\n    return query.sql;\n  }\n  if (isParameter) {\n    bindingsHolder.bindings.push(value);\n  }\n}\n\nfunction operator(value, builder, client, bindingsHolder) {\n  const raw = unwrapRaw(value, undefined, builder, client, bindingsHolder);\n  if (raw) return raw;\n  const operator = operators[(value || '').toLowerCase()];\n  if (!operator) {\n    throw new TypeError(`The operator \"${value}\" is not permitted`);\n  }\n  return operator;\n}\n\n// Coerce to string to prevent strange errors when it's not a string.\nfunction wrapString(value, builder, client) {\n  const asIndex = value.toLowerCase().indexOf(' as ');\n  if (asIndex !== -1) {\n    const first = value.slice(0, asIndex);\n    const second = value.slice(asIndex + 4);\n    return client.alias(\n      wrapString(first, builder, client),\n      wrapAsIdentifier(second, builder, client)\n    );\n  }\n  const wrapped = [];\n  let i = -1;\n  const segments = value.split('.');\n  while (++i < segments.length) {\n    value = segments[i];\n    if (i === 0 && segments.length > 1) {\n      wrapped.push(wrapString((value || '').trim(), builder, client));\n    } else {\n      wrapped.push(wrapAsIdentifier(value, builder, client));\n    }\n  }\n  return wrapped.join('.');\n}\n\n// Key-value notation for alias\nfunction parseObject(obj, builder, client, formatter) {\n  const ret = [];\n  for (const alias in obj) {\n    const queryOrIdentifier = obj[alias];\n    // Avoids double aliasing for subqueries\n    if (typeof queryOrIdentifier === 'function') {\n      const compiled = compileCallback(\n        queryOrIdentifier,\n        undefined,\n        client,\n        formatter\n      );\n      compiled.as = alias; // enforces the object's alias\n      ret.push(outputQuery(compiled, true, builder, client));\n    } else if (queryOrIdentifier instanceof QueryBuilder) {\n      ret.push(\n        client.alias(\n          `(${wrap(queryOrIdentifier, undefined, builder, client, formatter)})`,\n          wrapAsIdentifier(alias, builder, client)\n        )\n      );\n    } else {\n      ret.push(\n        client.alias(\n          wrap(queryOrIdentifier, undefined, builder, client, formatter),\n          wrapAsIdentifier(alias, builder, client)\n        )\n      );\n    }\n  }\n  return ret.join(', ');\n}\n\n// Ensures the query is aliased if necessary.\nfunction outputQuery(compiled, isParameter, builder, client) {\n  let sql = compiled.sql || '';\n  if (sql) {\n    if (\n      (compiled.method === 'select' || compiled.method === 'first') &&\n      (isParameter || compiled.as)\n    ) {\n      sql = `(${sql})`;\n      if (compiled.as)\n        return client.alias(sql, wrapString(compiled.as, builder, client));\n    }\n  }\n  return sql;\n}\n\n/**\n * Creates SQL for a parameter, which might be passed to where() or .with() or\n * pretty much anywhere in API.\n *\n * @param value\n * @param method Optional at least 'select' or 'update' are valid\n * @param builder\n * @param client\n * @param bindingHolder\n */\nfunction rawOrFn(value, method, builder, client, bindingHolder) {\n  if (typeof value === 'function') {\n    return outputQuery(\n      compileCallback(value, method, client, bindingHolder),\n      undefined,\n      builder,\n      client\n    );\n  }\n  return unwrapRaw(value, undefined, builder, client, bindingHolder) || '';\n}\n\n// Specify the direction of the ordering.\nfunction direction(value, builder, client, bindingsHolder) {\n  const raw = unwrapRaw(value, undefined, builder, client, bindingsHolder);\n  if (raw) return raw;\n  return orderBys.indexOf((value || '').toLowerCase()) !== -1 ? value : 'asc';\n}\n\nmodule.exports = {\n  columnize,\n  direction,\n  operator,\n  outputQuery,\n  rawOrFn,\n  unwrapRaw,\n  wrap,\n  wrapString,\n};\n","const { columnize } = require('./wrappingFormatter');\n\nfunction replaceRawArrBindings(raw, client) {\n  const bindingsHolder = {\n    bindings: [],\n  };\n  const builder = raw;\n\n  const expectedBindings = raw.bindings.length;\n  const values = raw.bindings;\n  let index = 0;\n\n  const sql = raw.sql.replace(/\\\\?\\?\\??/g, function (match) {\n    if (match === '\\\\?') {\n      return match;\n    }\n\n    const value = values[index++];\n\n    if (match === '??') {\n      return columnize(value, builder, client, bindingsHolder);\n    }\n    return client.parameter(value, builder, bindingsHolder);\n  });\n\n  if (expectedBindings !== index) {\n    throw new Error(`Expected ${expectedBindings} bindings, saw ${index}`);\n  }\n\n  return {\n    method: 'raw',\n    sql,\n    bindings: bindingsHolder.bindings,\n  };\n}\n\nfunction replaceKeyBindings(raw, client) {\n  const bindingsHolder = {\n    bindings: [],\n  };\n  const builder = raw;\n\n  const values = raw.bindings;\n  const regex = /\\\\?(:(\\w+):(?=::)|:(\\w+):(?!:)|:(\\w+))/g;\n\n  const sql = raw.sql.replace(regex, function (match, p1, p2, p3, p4) {\n    if (match !== p1) {\n      return p1;\n    }\n\n    const part = p2 || p3 || p4;\n    const key = match.trim();\n    const isIdentifier = key[key.length - 1] === ':';\n    const value = values[part];\n\n    if (value === undefined) {\n      if (Object.prototype.hasOwnProperty.call(values, part)) {\n        bindingsHolder.bindings.push(value);\n      }\n\n      return match;\n    }\n\n    if (isIdentifier) {\n      return match.replace(\n        p1,\n        columnize(value, builder, client, bindingsHolder)\n      );\n    }\n\n    return match.replace(p1, client.parameter(value, builder, bindingsHolder));\n  });\n\n  return {\n    method: 'raw',\n    sql,\n    bindings: bindingsHolder.bindings,\n  };\n}\n\nmodule.exports = {\n  replaceKeyBindings,\n  replaceRawArrBindings,\n};\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nconst urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';\n\nconst numberAlphabet = '0123456789';\n\n/**\n * Generate URL-friendly unique ID. This method uses the non-secure\n * predictable random generator with bigger collision probability.\n * Based on https://github.com/ai/nanoid\n *\n * ```js\n * model.id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqL\"\n * ```\n *\n * @param size Size of the ID. The default size is 21.\n * @returns A random string.\n */\nfunction nanoid(size = 21) {\n  let id = '';\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size;\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0];\n  }\n  return id;\n}\n\nfunction nanonum(size = 21) {\n  let id = '';\n  let i = size;\n  while (i--) {\n    id += numberAlphabet[(Math.random() * 10) | 0];\n  }\n  return id;\n}\n\nmodule.exports = { nanoid, nanonum };\n","// Raw\n// -------\nconst { EventEmitter } = require('events');\nconst debug = require('debug');\nconst assign = require('lodash/assign');\nconst isPlainObject = require('lodash/isPlainObject');\nconst reduce = require('lodash/reduce');\n\nconst {\n  replaceRawArrBindings,\n  replaceKeyBindings,\n} = require('./formatter/rawFormatter');\nconst helpers = require('./util/helpers');\nconst saveAsyncStack = require('./util/save-async-stack');\nconst { nanoid } = require('./util/nanoid');\nconst { isNumber, isObject } = require('./util/is');\nconst {\n  augmentWithBuilderInterface,\n} = require('./builder-interface-augmenter');\n\nconst debugBindings = debug('knex:bindings');\n\nclass Raw extends EventEmitter {\n  constructor(client) {\n    super();\n\n    this.client = client;\n\n    this.sql = '';\n    this.bindings = [];\n\n    // Todo: Deprecate\n    this._wrappedBefore = undefined;\n    this._wrappedAfter = undefined;\n    if (client && client.config) {\n      this._debug = client.config.debug;\n      saveAsyncStack(this, 4);\n    }\n  }\n  set(sql, bindings) {\n    this.sql = sql;\n    this.bindings =\n      (isObject(bindings) && !bindings.toSQL) || bindings === undefined\n        ? bindings\n        : [bindings];\n\n    return this;\n  }\n\n  timeout(ms, { cancel } = {}) {\n    if (isNumber(ms) && ms > 0) {\n      this._timeout = ms;\n      if (cancel) {\n        this.client.assertCanCancelQuery();\n        this._cancelOnTimeout = true;\n      }\n    }\n    return this;\n  }\n\n  // Wraps the current sql with `before` and `after`.\n  wrap(before, after) {\n    this._wrappedBefore = before;\n    this._wrappedAfter = after;\n    return this;\n  }\n\n  // Calls `toString` on the Knex object.\n  toString() {\n    return this.toQuery();\n  }\n\n  // Returns the raw sql for the query.\n  toSQL(method, tz) {\n    let obj;\n    if (Array.isArray(this.bindings)) {\n      obj = replaceRawArrBindings(this, this.client);\n    } else if (this.bindings && isPlainObject(this.bindings)) {\n      obj = replaceKeyBindings(this, this.client);\n    } else {\n      obj = {\n        method: 'raw',\n        sql: this.sql,\n        bindings: this.bindings === undefined ? [] : [this.bindings],\n      };\n    }\n\n    if (this._wrappedBefore) {\n      obj.sql = this._wrappedBefore + obj.sql;\n    }\n    if (this._wrappedAfter) {\n      obj.sql = obj.sql + this._wrappedAfter;\n    }\n\n    obj.options = reduce(this._options, assign, {});\n\n    if (this._timeout) {\n      obj.timeout = this._timeout;\n      if (this._cancelOnTimeout) {\n        obj.cancelOnTimeout = this._cancelOnTimeout;\n      }\n    }\n\n    obj.bindings = obj.bindings || [];\n    if (helpers.containsUndefined(obj.bindings)) {\n      const undefinedBindingIndices = helpers.getUndefinedIndices(\n        this.bindings\n      );\n      debugBindings(obj.bindings);\n      throw new Error(\n        `Undefined binding(s) detected for keys [${undefinedBindingIndices}] when compiling RAW query: ${obj.sql}`\n      );\n    }\n\n    obj.__knexQueryUid = nanoid();\n\n    Object.defineProperties(obj, {\n      toNative: {\n        value: () => ({\n          sql: this.client.positionBindings(obj.sql),\n          bindings: this.client.prepBindings(obj.bindings),\n        }),\n        enumerable: false,\n      },\n    });\n\n    return obj;\n  }\n}\n\n// Workaround to avoid circular dependency between wrappingFormatter.unwrapRaw and rawFormatter\nRaw.prototype.isRawInstance = true;\n\n// Allow the `Raw` object to be utilized with full access to the relevant\n// promise API.\naugmentWithBuilderInterface(Raw);\nhelpers.addQueryContext(Raw);\n\nmodule.exports = Raw;\n","// Query Compiler\n// -------\nconst helpers = require('../util/helpers');\nconst Raw = require('../raw');\nconst QueryBuilder = require('./querybuilder');\nconst JoinClause = require('./joinclause');\nconst debug = require('debug');\n\nconst assign = require('lodash/assign');\nconst compact = require('lodash/compact');\nconst groupBy = require('lodash/groupBy');\nconst has = require('lodash/has');\nconst isEmpty = require('lodash/isEmpty');\nconst map = require('lodash/map');\nconst omitBy = require('lodash/omitBy');\nconst reduce = require('lodash/reduce');\nconst { nanoid } = require('../util/nanoid');\nconst { isString, isUndefined } = require('../util/is');\nconst {\n  columnize: columnize_,\n  direction: direction_,\n  operator: operator_,\n  wrap: wrap_,\n  unwrapRaw: unwrapRaw_,\n  rawOrFn: rawOrFn_,\n} = require('../formatter/wrappingFormatter');\n\nconst debugBindings = debug('knex:bindings');\n\nconst components = [\n  'columns',\n  'join',\n  'where',\n  'union',\n  'group',\n  'having',\n  'order',\n  'limit',\n  'offset',\n  'lock',\n  'waitMode',\n];\n\n// The \"QueryCompiler\" takes all of the query statements which\n// have been gathered in the \"QueryBuilder\" and turns them into a\n// properly formatted / bound query string.\nclass QueryCompiler {\n  constructor(client, builder, bindings) {\n    this.client = client;\n    this.method = builder._method || 'select';\n    this.options = builder._options;\n    this.single = builder._single;\n    this.timeout = builder._timeout || false;\n    this.cancelOnTimeout = builder._cancelOnTimeout || false;\n    this.grouped = groupBy(builder._statements, 'grouping');\n    this.formatter = client.formatter(builder);\n    // Used when the insert call is empty.\n    this._emptyInsertValue = 'default values';\n    this.first = this.select;\n\n    this.bindings = bindings || [];\n    this.formatter.bindings = this.bindings;\n    this.bindingsHolder = this;\n    this.builder = this.formatter.builder;\n  }\n\n  // Collapse the builder into a single object\n  toSQL(method, tz) {\n    this._undefinedInWhereClause = false;\n    this.undefinedBindingsInfo = [];\n\n    method = method || this.method;\n    const val = this[method]() || '';\n\n    const query = {\n      method,\n      options: reduce(this.options, assign, {}),\n      timeout: this.timeout,\n      cancelOnTimeout: this.cancelOnTimeout,\n      bindings: this.bindingsHolder.bindings || [],\n      __knexQueryUid: nanoid(),\n    };\n\n    Object.defineProperties(query, {\n      toNative: {\n        value: () => {\n          return {\n            sql: this.client.positionBindings(query.sql),\n            bindings: this.client.prepBindings(query.bindings),\n          };\n        },\n        enumerable: false,\n      },\n    });\n\n    if (isString(val)) {\n      query.sql = val;\n    } else {\n      assign(query, val);\n    }\n\n    if (method === 'select' || method === 'first') {\n      if (this.single.as) {\n        query.as = this.single.as;\n      }\n    }\n\n    if (this._undefinedInWhereClause) {\n      debugBindings(query.bindings);\n      throw new Error(\n        `Undefined binding(s) detected when compiling ` +\n          `${method.toUpperCase()}. Undefined column(s): [${this.undefinedBindingsInfo.join(\n            ', '\n          )}] query: ${query.sql}`\n      );\n    }\n\n    return query;\n  }\n\n  // Compiles the `select` statement, or nested sub-selects by calling each of\n  // the component compilers, trimming out the empties, and returning a\n  // generated query string.\n  select() {\n    let sql = this.with();\n\n    let unionStatement = '';\n\n    const firstStatements = [];\n    const endStatements = [];\n\n    components.forEach((component) => {\n      const statement = this[component](this);\n      // We store the 'union' statement to append it at the end.\n      // We still need to call the component sequentially because of\n      // order of bindings.\n      switch (component) {\n        case 'union':\n          unionStatement = statement;\n          break;\n        case 'columns':\n        case 'join':\n        case 'where':\n          firstStatements.push(statement);\n          break;\n        default:\n          endStatements.push(statement);\n          break;\n      }\n    });\n\n    // Check if we need to wrap the main query.\n    // We need to wrap main query if one of union have wrap options to true\n    // to avoid error syntax (in PostgreSQL for example).\n    const wrapMainQuery =\n      this.grouped.union &&\n      this.grouped.union.map((u) => u.wrap).some((u) => u);\n\n    if (this.onlyUnions()) {\n      const statements = compact(firstStatements.concat(endStatements)).join(\n        ' '\n      );\n      sql += unionStatement + (statements ? ' ' + statements : '');\n    } else {\n      const allStatements =\n        (wrapMainQuery ? '(' : '') +\n        compact(firstStatements).join(' ') +\n        (wrapMainQuery ? ')' : '');\n      const endStat = compact(endStatements).join(' ');\n      sql +=\n        allStatements +\n        (unionStatement ? ' ' + unionStatement : '') +\n        (endStat ? ' ' + endStat : endStat);\n    }\n    return sql;\n  }\n\n  pluck() {\n    let toPluck = this.single.pluck;\n    if (toPluck.indexOf('.') !== -1) {\n      toPluck = toPluck.split('.').slice(-1)[0];\n    }\n    return {\n      sql: this.select(),\n      pluck: toPluck,\n    };\n  }\n\n  // Compiles an \"insert\" query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    const insertValues = this.single.insert || [];\n    const sql = this.with() + `insert into ${this.tableName} `;\n    const body = this._insertBody(insertValues);\n    return body === '' ? '' : sql + body;\n  }\n\n  _onConflictClause(columns) {\n    return columns instanceof Raw\n      ? this.formatter.wrap(columns)\n      : `(${this.formatter.columnize(columns)})`;\n  }\n\n  _buildInsertValues(insertData) {\n    let sql = '';\n    let i = -1;\n    while (++i < insertData.values.length) {\n      if (i !== 0) sql += '), (';\n      sql += this.client.parameterize(\n        insertData.values[i],\n        this.client.valueForUndefined,\n        this.builder,\n        this.bindingsHolder\n      );\n    }\n    return sql;\n  }\n\n  _insertBody(insertValues) {\n    let sql = '';\n    if (Array.isArray(insertValues)) {\n      if (insertValues.length === 0) {\n        return '';\n      }\n    } else if (typeof insertValues === 'object' && isEmpty(insertValues)) {\n      return sql + this._emptyInsertValue;\n    }\n\n    const insertData = this._prepInsert(insertValues);\n    if (typeof insertData === 'string') {\n      sql += insertData;\n    } else {\n      if (insertData.columns.length) {\n        sql += `(${columnize_(\n          insertData.columns,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        )}`;\n        sql += ') values (' + this._buildInsertValues(insertData) + ')';\n      } else if (insertValues.length === 1 && insertValues[0]) {\n        sql += this._emptyInsertValue;\n      } else {\n        sql = '';\n      }\n    }\n    return sql;\n  }\n\n  // Compiles the \"update\" query.\n  update() {\n    // Make sure tableName is processed by the formatter first.\n    const withSQL = this.with();\n    const { tableName } = this;\n    const updateData = this._prepUpdate(this.single.update);\n    const wheres = this.where();\n    return (\n      withSQL +\n      `update ${this.single.only ? 'only ' : ''}${tableName}` +\n      ' set ' +\n      updateData.join(', ') +\n      (wheres ? ` ${wheres}` : '')\n    );\n  }\n\n  _hintComments() {\n    let hints = this.grouped.hintComments || [];\n    hints = hints.map((hint) => compact(hint.value).join(' '));\n    hints = compact(hints).join(' ');\n    return hints ? `/*+ ${hints} */ ` : '';\n  }\n\n  // Compiles the columns in the query, specifying if an item was distinct.\n  columns() {\n    let distinctClause = '';\n    if (this.onlyUnions()) return '';\n    const hints = this._hintComments();\n    const columns = this.grouped.columns || [];\n    let i = -1,\n      sql = [];\n    if (columns) {\n      while (++i < columns.length) {\n        const stmt = columns[i];\n        if (stmt.distinct) distinctClause = 'distinct ';\n        if (stmt.distinctOn) {\n          distinctClause = this.distinctOn(stmt.value);\n          continue;\n        }\n        if (stmt.type === 'aggregate') {\n          sql.push(...this.aggregate(stmt));\n        } else if (stmt.type === 'aggregateRaw') {\n          sql.push(this.aggregateRaw(stmt));\n        } else if (stmt.type === 'analytic') {\n          sql.push(this.analytic(stmt));\n        } else if (stmt.type === 'json') {\n          sql.push(this.json(stmt));\n        } else if (stmt.value && stmt.value.length > 0) {\n          sql.push(\n            columnize_(\n              stmt.value,\n              this.builder,\n              this.client,\n              this.bindingsHolder\n            )\n          );\n        }\n      }\n    }\n    if (sql.length === 0) sql = ['*'];\n    const select = this.onlyJson() ? '' : 'select ';\n    return (\n      `${select}${hints}${distinctClause}` +\n      sql.join(', ') +\n      (this.tableName\n        ? ` from ${this.single.only ? 'only ' : ''}${this.tableName}`\n        : '')\n    );\n  }\n\n  _aggregate(stmt, { aliasSeparator = ' as ', distinctParentheses } = {}) {\n    const value = stmt.value;\n    const method = stmt.method;\n    const distinct = stmt.aggregateDistinct ? 'distinct ' : '';\n    const wrap = (identifier) =>\n      wrap_(\n        identifier,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      );\n    const addAlias = (value, alias) => {\n      if (alias) {\n        return value + aliasSeparator + wrap(alias);\n      }\n      return value;\n    };\n    const aggregateArray = (value, alias) => {\n      let columns = value.map(wrap).join(', ');\n      if (distinct) {\n        const openParen = distinctParentheses ? '(' : ' ';\n        const closeParen = distinctParentheses ? ')' : '';\n        columns = distinct.trim() + openParen + columns + closeParen;\n      }\n      const aggregated = `${method}(${columns})`;\n      return addAlias(aggregated, alias);\n    };\n    const aggregateString = (value, alias) => {\n      const aggregated = `${method}(${distinct + wrap(value)})`;\n      return addAlias(aggregated, alias);\n    };\n\n    if (Array.isArray(value)) {\n      return [aggregateArray(value)];\n    }\n\n    if (typeof value === 'object') {\n      if (stmt.alias) {\n        throw new Error('When using an object explicit alias can not be used');\n      }\n      return Object.entries(value).map(([alias, column]) => {\n        if (Array.isArray(column)) {\n          return aggregateArray(column, alias);\n        }\n        return aggregateString(column, alias);\n      });\n    }\n\n    // Allows us to speciy an alias for the aggregate types.\n    const splitOn = value.toLowerCase().indexOf(' as ');\n    let column = value;\n    let { alias } = stmt;\n    if (splitOn !== -1) {\n      column = value.slice(0, splitOn);\n      if (alias) {\n        throw new Error(`Found multiple aliases for same column: ${column}`);\n      }\n      alias = value.slice(splitOn + 4);\n    }\n    return [aggregateString(column, alias)];\n  }\n\n  aggregate(stmt) {\n    return this._aggregate(stmt);\n  }\n\n  aggregateRaw(stmt) {\n    const distinct = stmt.aggregateDistinct ? 'distinct ' : '';\n    return `${stmt.method}(${\n      distinct +\n      unwrapRaw_(\n        stmt.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )\n    })`;\n  }\n\n  _joinTable(join) {\n    return join.schema && !(join.table instanceof Raw)\n      ? `${join.schema}.${join.table}`\n      : join.table;\n  }\n\n  // Compiles all each of the `join` clauses on the query,\n  // including any nested join queries.\n  join() {\n    let sql = '';\n    let i = -1;\n    const joins = this.grouped.join;\n    if (!joins) return '';\n    while (++i < joins.length) {\n      const join = joins[i];\n      const table = this._joinTable(join);\n      if (i > 0) sql += ' ';\n      if (join.joinType === 'raw') {\n        sql += unwrapRaw_(\n          join.table,\n          undefined,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        );\n      } else {\n        sql +=\n          join.joinType +\n          ' join ' +\n          wrap_(\n            table,\n            undefined,\n            this.builder,\n            this.client,\n            this.bindingsHolder\n          );\n        let ii = -1;\n        while (++ii < join.clauses.length) {\n          const clause = join.clauses[ii];\n          if (ii > 0) {\n            sql += ` ${clause.bool} `;\n          } else {\n            sql += ` ${clause.type === 'onUsing' ? 'using' : 'on'} `;\n          }\n          const val = this[clause.type](clause);\n          if (val) {\n            sql += val;\n          }\n        }\n      }\n    }\n    return sql;\n  }\n\n  onBetween(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._not(statement, 'between') +\n      ' ' +\n      statement.value\n        .map((value) =>\n          this.client.parameter(value, this.builder, this.bindingsHolder)\n        )\n        .join(' and ')\n    );\n  }\n\n  onNull(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' is ' +\n      this._not(statement, 'null')\n    );\n  }\n\n  onExists(statement) {\n    return (\n      this._not(statement, 'exists') +\n      ' (' +\n      rawOrFn_(\n        statement.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n\n  onIn(statement) {\n    if (Array.isArray(statement.column)) return this.multiOnIn(statement);\n\n    let values;\n    if (statement.value instanceof Raw) {\n      values = this.client.parameter(\n        statement.value,\n        this.builder,\n        this.formatter\n      );\n    } else {\n      values = this.client.parameterize(\n        statement.value,\n        undefined,\n        this.builder,\n        this.bindingsHolder\n      );\n    }\n\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._not(statement, 'in ') +\n      this.wrap(values)\n    );\n  }\n\n  multiOnIn(statement) {\n    let i = -1,\n      sql = `(${columnize_(\n        statement.column,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )}) `;\n    sql += this._not(statement, 'in ') + '((';\n    while (++i < statement.value.length) {\n      if (i !== 0) sql += '),(';\n      sql += this.client.parameterize(\n        statement.value[i],\n        undefined,\n        this.builder,\n        this.bindingsHolder\n      );\n    }\n    return sql + '))';\n  }\n\n  // Compiles all `where` statements on the query.\n  where() {\n    const wheres = this.grouped.where;\n    if (!wheres) return;\n    const sql = [];\n    let i = -1;\n    while (++i < wheres.length) {\n      const stmt = wheres[i];\n      if (\n        Object.prototype.hasOwnProperty.call(stmt, 'value') &&\n        helpers.containsUndefined(stmt.value)\n      ) {\n        this.undefinedBindingsInfo.push(stmt.column);\n        this._undefinedInWhereClause = true;\n      }\n      const val = this[stmt.type](stmt);\n      if (val) {\n        if (sql.length === 0) {\n          sql[0] = 'where';\n        } else {\n          sql.push(stmt.bool);\n        }\n        sql.push(val);\n      }\n    }\n    return sql.length > 1 ? sql.join(' ') : '';\n  }\n\n  group() {\n    return this._groupsOrders('group');\n  }\n\n  order() {\n    return this._groupsOrders('order');\n  }\n\n  // Compiles the `having` statements.\n  having() {\n    const havings = this.grouped.having;\n    if (!havings) return '';\n    const sql = ['having'];\n    for (let i = 0, l = havings.length; i < l; i++) {\n      const s = havings[i];\n      const val = this[s.type](s);\n      if (val) {\n        if (sql.length === 0) {\n          sql[0] = 'where';\n        }\n        if (sql.length > 1 || (sql.length === 1 && sql[0] !== 'having')) {\n          sql.push(s.bool);\n        }\n        sql.push(val);\n      }\n    }\n    return sql.length > 1 ? sql.join(' ') : '';\n  }\n\n  havingRaw(statement) {\n    return (\n      this._not(statement, '') +\n      unwrapRaw_(\n        statement.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )\n    );\n  }\n\n  havingWrapped(statement) {\n    const val = rawOrFn_(\n      statement.value,\n      'where',\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n    return (val && this._not(statement, '') + '(' + val.slice(6) + ')') || '';\n  }\n\n  havingBasic(statement) {\n    return (\n      this._not(statement, '') +\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      operator_(\n        statement.operator,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this.client.parameter(statement.value, this.builder, this.bindingsHolder)\n    );\n  }\n\n  havingNull(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' is ' +\n      this._not(statement, 'null')\n    );\n  }\n\n  havingExists(statement) {\n    return (\n      this._not(statement, 'exists') +\n      ' (' +\n      rawOrFn_(\n        statement.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n\n  havingBetween(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._not(statement, 'between') +\n      ' ' +\n      statement.value\n        .map((value) =>\n          this.client.parameter(value, this.builder, this.bindingsHolder)\n        )\n        .join(' and ')\n    );\n  }\n\n  havingIn(statement) {\n    if (Array.isArray(statement.column)) return this.multiHavingIn(statement);\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._not(statement, 'in ') +\n      this.wrap(\n        this.client.parameterize(\n          statement.value,\n          undefined,\n          this.builder,\n          this.bindingsHolder\n        )\n      )\n    );\n  }\n\n  multiHavingIn(statement) {\n    return this.multiOnIn(statement);\n  }\n\n  // Compile the \"union\" queries attached to the main query.\n  union() {\n    const onlyUnions = this.onlyUnions();\n    const unions = this.grouped.union;\n    if (!unions) return '';\n    let sql = '';\n    for (let i = 0, l = unions.length; i < l; i++) {\n      const union = unions[i];\n      if (i > 0) sql += ' ';\n      if (i > 0 || !onlyUnions) sql += union.clause + ' ';\n      const statement = rawOrFn_(\n        union.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      );\n      if (statement) {\n        const wrap = union.wrap;\n        if (wrap) sql += '(';\n        sql += statement;\n        if (wrap) sql += ')';\n      }\n    }\n    return sql;\n  }\n\n  // If we haven't specified any columns or a `tableName`, we're assuming this\n  // is only being used for unions.\n  onlyUnions() {\n    return (\n      (!this.grouped.columns || !!this.grouped.columns[0].value) &&\n      this.grouped.union &&\n      !this.tableName\n    );\n  }\n\n  _getValueOrParameterFromAttribute(attribute, rawValue) {\n    if (this.single.skipBinding[attribute] === true) {\n      return rawValue !== undefined && rawValue !== null\n        ? rawValue\n        : this.single[attribute];\n    }\n    return this.client.parameter(\n      this.single[attribute],\n      this.builder,\n      this.bindingsHolder\n    );\n  }\n\n  onlyJson() {\n    return (\n      !this.tableName &&\n      this.grouped.columns &&\n      this.grouped.columns.length === 1 &&\n      this.grouped.columns[0].type === 'json'\n    );\n  }\n\n  limit() {\n    const noLimit = !this.single.limit && this.single.limit !== 0;\n    if (noLimit) return '';\n    return `limit ${this._getValueOrParameterFromAttribute('limit')}`;\n  }\n\n  offset() {\n    if (!this.single.offset) return '';\n    return `offset ${this._getValueOrParameterFromAttribute('offset')}`;\n  }\n\n  // Compiles a `delete` query.\n  del() {\n    // Make sure tableName is processed by the formatter first.\n    const { tableName } = this;\n    const withSQL = this.with();\n    const wheres = this.where();\n    const joins = this.join();\n    // When using joins, delete the \"from\" table values as a default\n    const deleteSelector = joins ? tableName + ' ' : '';\n    return (\n      withSQL +\n      `delete ${deleteSelector}from ${\n        this.single.only ? 'only ' : ''\n      }${tableName}` +\n      (joins ? ` ${joins}` : '') +\n      (wheres ? ` ${wheres}` : '')\n    );\n  }\n\n  // Compiles a `truncate` query.\n  truncate() {\n    return `truncate ${this.tableName}`;\n  }\n\n  // Compiles the \"locks\".\n  lock() {\n    if (this.single.lock) {\n      return this[this.single.lock]();\n    }\n  }\n\n  // Compiles the wait mode on the locks.\n  waitMode() {\n    if (this.single.waitMode) {\n      return this[this.single.waitMode]();\n    }\n  }\n\n  // Fail on unsupported databases\n  skipLocked() {\n    throw new Error(\n      '.skipLocked() is currently only supported on MySQL 8.0+ and PostgreSQL 9.5+'\n    );\n  }\n\n  // Fail on unsupported databases\n  noWait() {\n    throw new Error(\n      '.noWait() is currently only supported on MySQL 8.0+, MariaDB 10.3.0+ and PostgreSQL 9.5+'\n    );\n  }\n\n  distinctOn(value) {\n    throw new Error('.distinctOn() is currently only supported on PostgreSQL');\n  }\n\n  // On Clause\n  // ------\n\n  onWrapped(clause) {\n    const self = this;\n\n    const wrapJoin = new JoinClause();\n    clause.value.call(wrapJoin, wrapJoin);\n\n    let sql = '';\n\n    for (let ii = 0; ii < wrapJoin.clauses.length; ii++) {\n      const wrapClause = wrapJoin.clauses[ii];\n      if (ii > 0) {\n        sql += ` ${wrapClause.bool} `;\n      }\n      const val = self[wrapClause.type](wrapClause);\n      if (val) {\n        sql += val;\n      }\n    }\n\n    if (sql.length) {\n      return `(${sql})`;\n    }\n    return '';\n  }\n\n  onBasic(clause) {\n    const toWrap = clause.value instanceof QueryBuilder;\n    return (\n      wrap_(\n        clause.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      operator_(\n        clause.operator,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      (toWrap ? '(' : '') +\n      wrap_(\n        clause.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      (toWrap ? ')' : '')\n    );\n  }\n\n  onVal(clause) {\n    return (\n      wrap_(\n        clause.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      operator_(\n        clause.operator,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this.client.parameter(clause.value, this.builder, this.bindingsHolder)\n    );\n  }\n\n  onRaw(clause) {\n    return unwrapRaw_(\n      clause.value,\n      undefined,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n  }\n\n  onUsing(clause) {\n    return (\n      '(' +\n      columnize_(\n        clause.column,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n\n  // Where Clause\n  // ------\n\n  _valueClause(statement) {\n    return statement.asColumn\n      ? wrap_(\n          statement.value,\n          undefined,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        )\n      : this.client.parameter(\n          statement.value,\n          this.builder,\n          this.bindingsHolder\n        );\n  }\n\n  _columnClause(statement) {\n    let columns;\n    if (Array.isArray(statement.column)) {\n      columns = `(${columnize_(\n        statement.column,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )})`;\n    } else {\n      columns = wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      );\n    }\n    return columns;\n  }\n\n  whereIn(statement) {\n    const values = this.client.values(\n      statement.value,\n      this.builder,\n      this.bindingsHolder\n    );\n    return `${this._columnClause(statement)} ${this._not(\n      statement,\n      'in '\n    )}${values}`;\n  }\n\n  whereLike(statement) {\n    return `${this._columnClause(statement)} ${this._not(\n      statement,\n      'like '\n    )}${this._valueClause(statement)}`;\n  }\n\n  whereILike(statement) {\n    return `${this._columnClause(statement)} ${this._not(\n      statement,\n      'ilike '\n    )}${this._valueClause(statement)}`;\n  }\n\n  whereNull(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' is ' +\n      this._not(statement, 'null')\n    );\n  }\n\n  // Compiles a basic \"where\" clause.\n  whereBasic(statement) {\n    return (\n      this._not(statement, '') +\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      operator_(\n        statement.operator,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._valueClause(statement)\n    );\n  }\n\n  whereExists(statement) {\n    return (\n      this._not(statement, 'exists') +\n      ' (' +\n      rawOrFn_(\n        statement.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n\n  whereWrapped(statement) {\n    const val = rawOrFn_(\n      statement.value,\n      'where',\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n    return (val && this._not(statement, '') + '(' + val.slice(6) + ')') || '';\n  }\n\n  whereBetween(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._not(statement, 'between') +\n      ' ' +\n      statement.value\n        .map((value) =>\n          this.client.parameter(value, this.builder, this.bindingsHolder)\n        )\n        .join(' and ')\n    );\n  }\n\n  // Compiles a \"whereRaw\" query.\n  whereRaw(statement) {\n    return (\n      this._not(statement, '') +\n      unwrapRaw_(\n        statement.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )\n    );\n  }\n\n  _jsonWrapValue(jsonValue) {\n    if (!this.builder._isJsonObject(jsonValue)) {\n      try {\n        return JSON.stringify(JSON.parse(jsonValue.replace(/\\n|\\t/g, '')));\n      } catch (e) {\n        return jsonValue;\n      }\n    }\n    return JSON.stringify(jsonValue);\n  }\n\n  _jsonValueClause(statement) {\n    statement.value = this._jsonWrapValue(statement.value);\n    return this._valueClause(statement);\n  }\n\n  whereJsonObject(statement) {\n    return `${this._columnClause(statement)} ${\n      statement.not ? '!=' : '='\n    } ${this._jsonValueClause(statement)}`;\n  }\n\n  wrap(str) {\n    if (str.charAt(0) !== '(') return `(${str})`;\n    return str;\n  }\n\n  json(stmt) {\n    return this[stmt.method](stmt.params);\n  }\n\n  analytic(stmt) {\n    let sql = '';\n    const self = this;\n    sql += stmt.method + '() over (';\n\n    if (stmt.raw) {\n      sql += stmt.raw;\n    } else {\n      if (stmt.partitions.length) {\n        sql += 'partition by ';\n        sql +=\n          map(stmt.partitions, function (partition) {\n            if (isString(partition)) {\n              return self.formatter.columnize(partition);\n            } else return self.formatter.columnize(partition.column) + (partition.order ? ' ' + partition.order : '');\n          }).join(', ') + ' ';\n      }\n\n      sql += 'order by ';\n      sql += map(stmt.order, function (order) {\n        if (isString(order)) {\n          return self.formatter.columnize(order);\n        } else return self.formatter.columnize(order.column) + (order.order ? ' ' + order.order : '');\n      }).join(', ');\n    }\n\n    sql += ')';\n\n    if (stmt.alias) {\n      sql += ' as ' + stmt.alias;\n    }\n\n    return sql;\n  }\n\n  // Compiles all `with` statements on the query.\n  with() {\n    if (!this.grouped.with || !this.grouped.with.length) {\n      return '';\n    }\n    const withs = this.grouped.with;\n    if (!withs) return;\n    const sql = [];\n    let i = -1;\n    let isRecursive = false;\n    while (++i < withs.length) {\n      const stmt = withs[i];\n      if (stmt.recursive) {\n        isRecursive = true;\n      }\n      const val = this[stmt.type](stmt);\n      sql.push(val);\n    }\n    return `with ${isRecursive ? 'recursive ' : ''}${sql.join(', ')} `;\n  }\n\n  withWrapped(statement) {\n    const val = rawOrFn_(\n      statement.value,\n      undefined,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n    const columnList = statement.columnList\n      ? '(' +\n        columnize_(\n          statement.columnList,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        ) +\n        ')'\n      : '';\n    const materialized =\n      statement.materialized === undefined\n        ? ''\n        : statement.materialized\n        ? 'materialized '\n        : 'not materialized ';\n    return (\n      (val &&\n        columnize_(\n          statement.alias,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        ) +\n          columnList +\n          ' as ' +\n          materialized +\n          '(' +\n          val +\n          ')') ||\n      ''\n    );\n  }\n\n  // Determines whether to add a \"not\" prefix to the where clause.\n  _not(statement, str) {\n    if (statement.not) return `not ${str}`;\n    return str;\n  }\n\n  _prepInsert(data) {\n    const isRaw = rawOrFn_(\n      data,\n      undefined,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n    if (isRaw) return isRaw;\n    let columns = [];\n    const values = [];\n    if (!Array.isArray(data)) data = data ? [data] : [];\n    let i = -1;\n    while (++i < data.length) {\n      if (data[i] == null) break;\n      if (i === 0) columns = Object.keys(data[i]).sort();\n      const row = new Array(columns.length);\n      const keys = Object.keys(data[i]);\n      let j = -1;\n      while (++j < keys.length) {\n        const key = keys[j];\n        let idx = columns.indexOf(key);\n        if (idx === -1) {\n          columns = columns.concat(key).sort();\n          idx = columns.indexOf(key);\n          let k = -1;\n          while (++k < values.length) {\n            values[k].splice(idx, 0, undefined);\n          }\n          row.splice(idx, 0, undefined);\n        }\n        row[idx] = data[i][key];\n      }\n      values.push(row);\n    }\n    return {\n      columns,\n      values,\n    };\n  }\n\n  // \"Preps\" the update.\n  _prepUpdate(data = {}) {\n    const { counter = {} } = this.single;\n\n    for (const column of Object.keys(counter)) {\n      //Skip?\n      if (has(data, column)) {\n        //Needed?\n        this.client.logger.warn(\n          `increment/decrement called for a column that has already been specified in main .update() call. Ignoring increment/decrement and using value from .update() call.`\n        );\n        continue;\n      }\n\n      let value = counter[column];\n\n      const symbol = value < 0 ? '-' : '+';\n\n      if (symbol === '-') {\n        value = -value;\n      }\n\n      data[column] = this.client.raw(`?? ${symbol} ?`, [column, value]);\n    }\n\n    data = omitBy(data, isUndefined);\n\n    const vals = [];\n    const columns = Object.keys(data);\n    let i = -1;\n\n    while (++i < columns.length) {\n      vals.push(\n        wrap_(\n          columns[i],\n          undefined,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        ) +\n          ' = ' +\n          this.client.parameter(\n            data[columns[i]],\n            this.builder,\n            this.bindingsHolder\n          )\n      );\n    }\n\n    if (isEmpty(vals)) {\n      throw new Error(\n        [\n          'Empty .update() call detected!',\n          'Update data does not contain any values to update.',\n          'This will result in a faulty query.',\n          this.single.table ? `Table: ${this.single.table}.` : '',\n          this.single.update\n            ? `Columns: ${Object.keys(this.single.update)}.`\n            : '',\n        ].join(' ')\n      );\n    }\n\n    return vals;\n  }\n\n  _formatGroupsItemValue(value, nulls) {\n    const { formatter } = this;\n    let nullOrder = '';\n    if (nulls === 'last') {\n      nullOrder = ' is null';\n    } else if (nulls === 'first') {\n      nullOrder = ' is not null';\n    }\n\n    let groupOrder;\n    if (value instanceof Raw) {\n      groupOrder = unwrapRaw_(\n        value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      );\n    } else if (value instanceof QueryBuilder || nulls) {\n      groupOrder = '(' + formatter.columnize(value) + nullOrder + ')';\n    } else {\n      groupOrder = formatter.columnize(value);\n    }\n    return groupOrder;\n  }\n\n  _basicGroupOrder(item, type) {\n    const column = this._formatGroupsItemValue(item.value, item.nulls);\n    const direction =\n      type === 'order' && item.type !== 'orderByRaw'\n        ? ` ${direction_(\n            item.direction,\n            this.builder,\n            this.client,\n            this.bindingsHolder\n          )}`\n        : '';\n    return column + direction;\n  }\n\n  _groupOrder(item, type) {\n    return this._basicGroupOrder(item, type);\n  }\n\n  _groupOrderNulls(item, type) {\n    const column = this._formatGroupsItemValue(item.value);\n    const direction =\n      type === 'order' && item.type !== 'orderByRaw'\n        ? ` ${direction_(\n            item.direction,\n            this.builder,\n            this.client,\n            this.bindingsHolder\n          )}`\n        : '';\n    if (item.nulls && !(item.value instanceof Raw)) {\n      return `${column}${direction ? direction : ''} nulls ${item.nulls}`;\n    }\n    return column + direction;\n  }\n\n  // Compiles the `order by` statements.\n  _groupsOrders(type) {\n    const items = this.grouped[type];\n    if (!items) return '';\n    const sql = items.map((item) => {\n      return this._groupOrder(item, type);\n    });\n    return sql.length ? type + ' by ' + sql.join(', ') : '';\n  }\n\n  // Get the table name, wrapping it if necessary.\n  // Implemented as a property to prevent ordering issues as described in #704.\n  get tableName() {\n    if (!this._tableName) {\n      // Only call this.formatter.wrap() the first time this property is accessed.\n      let tableName = this.single.table;\n      const schemaName = this.single.schema;\n\n      if (tableName && schemaName) {\n        const isQueryBuilder = tableName instanceof QueryBuilder;\n        const isRawQuery = tableName instanceof Raw;\n        const isFunction = typeof tableName === 'function';\n\n        if (!isQueryBuilder && !isRawQuery && !isFunction) {\n          tableName = `${schemaName}.${tableName}`;\n        }\n      }\n\n      this._tableName = tableName\n        ? // Wrap subQuery with parenthesis, #3485\n          wrap_(\n            tableName,\n            tableName instanceof QueryBuilder,\n            this.builder,\n            this.client,\n            this.bindingsHolder\n          )\n        : '';\n    }\n    return this._tableName;\n  }\n\n  _jsonPathWrap(extraction) {\n    return this.client.parameter(\n      extraction.path || extraction[1],\n      this.builder,\n      this.bindingsHolder\n    );\n  }\n\n  // Json common functions\n  _jsonExtract(nameFunction, params) {\n    let extractions;\n    if (Array.isArray(params.column)) {\n      extractions = params.column;\n    } else {\n      extractions = [params];\n    }\n    if (!Array.isArray(nameFunction)) {\n      nameFunction = [nameFunction];\n    }\n    return extractions\n      .map((extraction) => {\n        let jsonCol = `${columnize_(\n          extraction.column || extraction[0],\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        )}, ${this._jsonPathWrap(extraction)}`;\n        nameFunction.forEach((f) => {\n          jsonCol = f + '(' + jsonCol + ')';\n        });\n        const alias = extraction.alias || extraction[2];\n        return alias\n          ? this.client.alias(jsonCol, this.formatter.wrap(alias))\n          : jsonCol;\n      })\n      .join(', ');\n  }\n\n  _jsonSet(nameFunction, params) {\n    const jsonSet = `${nameFunction}(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )}, ${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )}, ${this.client.parameter(\n      params.value,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n    return params.alias\n      ? this.client.alias(jsonSet, this.formatter.wrap(params.alias))\n      : jsonSet;\n  }\n\n  _whereJsonPath(nameFunction, statement) {\n    return `${nameFunction}(${this._columnClause(\n      statement\n    )}, ${this._jsonPathWrap({ path: statement.jsonPath })}) ${operator_(\n      statement.operator,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )} ${this._jsonValueClause(statement)}`;\n  }\n\n  _onJsonPathEquals(nameJoinFunction, clause) {\n    return (\n      nameJoinFunction +\n      '(' +\n      wrap_(\n        clause.columnFirst,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ', ' +\n      this.client.parameter(\n        clause.jsonPathFirst,\n        this.builder,\n        this.bindingsHolder\n      ) +\n      ') = ' +\n      nameJoinFunction +\n      '(' +\n      wrap_(\n        clause.columnSecond,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ', ' +\n      this.client.parameter(\n        clause.jsonPathSecond,\n        this.builder,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n}\n\nmodule.exports = QueryCompiler;\n","const { EventEmitter } = require('events');\nconst toArray = require('lodash/toArray');\nconst assign = require('lodash/assign');\nconst { addQueryContext } = require('../util/helpers');\nconst saveAsyncStack = require('../util/save-async-stack');\nconst {\n  augmentWithBuilderInterface,\n} = require('../builder-interface-augmenter');\n\n// Constructor for the builder instance, typically called from\n// `knex.builder`, accepting the current `knex` instance,\n// and pulling out the `client` and `grammar` from the current\n// knex instance.\nclass SchemaBuilder extends EventEmitter {\n  constructor(client) {\n    super();\n    this.client = client;\n    this._sequence = [];\n\n    if (client.config) {\n      this._debug = client.config.debug;\n      saveAsyncStack(this, 4);\n    }\n  }\n\n  withSchema(schemaName) {\n    this._schema = schemaName;\n    return this;\n  }\n\n  toString() {\n    return this.toQuery();\n  }\n\n  toSQL() {\n    return this.client.schemaCompiler(this).toSQL();\n  }\n\n  async generateDdlCommands() {\n    return await this.client.schemaCompiler(this).generateDdlCommands();\n  }\n}\n\n// Each of the schema builder methods just add to the\n// \"_sequence\" array for consistency.\n[\n  'createTable',\n  'createTableIfNotExists',\n  'createTableLike',\n  'createView',\n  'createViewOrReplace',\n  'createMaterializedView',\n  'refreshMaterializedView',\n  'dropView',\n  'dropViewIfExists',\n  'dropMaterializedView',\n  'dropMaterializedViewIfExists',\n  'createSchema',\n  'createSchemaIfNotExists',\n  'dropSchema',\n  'dropSchemaIfExists',\n  'createExtension',\n  'createExtensionIfNotExists',\n  'dropExtension',\n  'dropExtensionIfExists',\n  'table',\n  'alterTable',\n  'view',\n  'alterView',\n  'hasTable',\n  'hasColumn',\n  'dropTable',\n  'renameTable',\n  'renameView',\n  'dropTableIfExists',\n  'raw',\n].forEach(function (method) {\n  SchemaBuilder.prototype[method] = function () {\n    if (method === 'createTableIfNotExists') {\n      this.client.logger.warn(\n        [\n          'Use async .hasTable to check if table exists and then use plain .createTable. Since ',\n          '.createTableIfNotExists actually just generates plain \"CREATE TABLE IF NOT EXIST...\" ',\n          'query it will not work correctly if there are any alter table queries generated for ',\n          'columns afterwards. To not break old migrations this function is left untouched for now',\n          ', but it should not be used when writing new code and it is removed from documentation.',\n        ].join('')\n      );\n    }\n    if (method === 'table') method = 'alterTable';\n    if (method === 'view') method = 'alterView';\n    this._sequence.push({\n      method,\n      args: toArray(arguments),\n    });\n    return this;\n  };\n});\n\n\nSchemaBuilder.extend = (methodName, fn) => {\n  if (Object.prototype.hasOwnProperty.call(SchemaBuilder.prototype, methodName)) {\n    throw new Error(\n      `Can't extend SchemaBuilder with existing method ('${methodName}').`\n    );\n  }\n\n  assign(SchemaBuilder.prototype, { [methodName]: fn });\n};\n\naugmentWithBuilderInterface(SchemaBuilder);\naddQueryContext(SchemaBuilder);\n\nmodule.exports = SchemaBuilder;\n","const tail = require('lodash/tail');\nconst { isString } = require('../../util/is');\n\n// Push a new query onto the compiled \"sequence\" stack,\n// creating a new formatter, returning the compiler.\nfunction pushQuery(query) {\n  if (!query) return;\n  if (isString(query)) {\n    query = { sql: query };\n  }\n  if (!query.bindings) {\n    query.bindings = this.bindingsHolder.bindings;\n  }\n  this.sequence.push(query);\n\n  this.formatter = this.client.formatter(this._commonBuilder);\n  this.bindings = [];\n  this.formatter.bindings = this.bindings;\n}\n\n// Used in cases where we need to push some additional column specific statements.\nfunction pushAdditional(fn) {\n  const child = new this.constructor(\n    this.client,\n    this.tableCompiler,\n    this.columnBuilder\n  );\n  fn.call(child, tail(arguments));\n  this.sequence.additional = (this.sequence.additional || []).concat(\n    child.sequence\n  );\n}\n\n// Unshift a new query onto the compiled \"sequence\" stack,\n// creating a new formatter, returning the compiler.\nfunction unshiftQuery(query) {\n  if (!query) return;\n  if (isString(query)) {\n    query = { sql: query };\n  }\n  if (!query.bindings) {\n    query.bindings = this.bindingsHolder.bindings;\n  }\n  this.sequence.unshift(query);\n\n  this.formatter = this.client.formatter(this._commonBuilder);\n  this.bindings = [];\n  this.formatter.bindings = this.bindings;\n}\n\nmodule.exports = {\n  pushAdditional,\n  pushQuery,\n  unshiftQuery,\n};\n","const {\n  pushQuery,\n  pushAdditional,\n  unshiftQuery,\n} = require('./internal/helpers');\n\n// The \"SchemaCompiler\" takes all of the query statements which have been\n// gathered in the \"SchemaBuilder\" and turns them into an array of\n// properly formatted / bound query strings.\nclass SchemaCompiler {\n  constructor(client, builder) {\n    this.builder = builder;\n    this._commonBuilder = this.builder;\n    this.client = client;\n    this.schema = builder._schema;\n\n    this.bindings = [];\n    this.bindingsHolder = this;\n    this.formatter = client.formatter(builder);\n    this.formatter.bindings = this.bindings;\n    this.sequence = [];\n  }\n\n  createSchema() {\n    throwOnlyPGError('createSchema');\n  }\n\n  createSchemaIfNotExists() {\n    throwOnlyPGError('createSchemaIfNotExists');\n  }\n\n  dropSchema() {\n    throwOnlyPGError('dropSchema');\n  }\n\n  dropSchemaIfExists() {\n    throwOnlyPGError('dropSchemaIfExists');\n  }\n\n  dropTable(tableName) {\n    this.pushQuery(\n      this.dropTablePrefix +\n        this.formatter.wrap(prefixedTableName(this.schema, tableName))\n    );\n  }\n\n  dropTableIfExists(tableName) {\n    this.pushQuery(\n      this.dropTablePrefix +\n        'if exists ' +\n        this.formatter.wrap(prefixedTableName(this.schema, tableName))\n    );\n  }\n\n  dropView(viewName) {\n    this._dropView(viewName, false, false);\n  }\n\n  dropViewIfExists(viewName) {\n    this._dropView(viewName, true, false);\n  }\n\n  dropMaterializedView(viewName) {\n    throw new Error('materialized views are not supported by this dialect.');\n  }\n\n  dropMaterializedViewIfExists(viewName) {\n    throw new Error('materialized views are not supported by this dialect.');\n  }\n\n  renameView(from, to) {\n    throw new Error(\n      'rename view is not supported by this dialect (instead drop then create another view).'\n    );\n  }\n\n  refreshMaterializedView() {\n    throw new Error('materialized views are not supported by this dialect.');\n  }\n\n  _dropView(viewName, ifExists, materialized) {\n    this.pushQuery(\n      (materialized ? this.dropMaterializedViewPrefix : this.dropViewPrefix) +\n        (ifExists ? 'if exists ' : '') +\n        this.formatter.wrap(prefixedTableName(this.schema, viewName))\n    );\n  }\n\n  raw(sql, bindings) {\n    this.sequence.push(this.client.raw(sql, bindings).toSQL());\n  }\n\n  toSQL() {\n    const sequence = this.builder._sequence;\n    for (let i = 0, l = sequence.length; i < l; i++) {\n      const query = sequence[i];\n      this[query.method].apply(this, query.args);\n    }\n    return this.sequence;\n  }\n\n  async generateDdlCommands() {\n    const generatedCommands = this.toSQL();\n    return {\n      pre: [],\n      sql: Array.isArray(generatedCommands)\n        ? generatedCommands\n        : [generatedCommands],\n      check: null,\n      post: [],\n    };\n  }\n}\n\nSchemaCompiler.prototype.dropTablePrefix = 'drop table ';\nSchemaCompiler.prototype.dropViewPrefix = 'drop view ';\nSchemaCompiler.prototype.dropMaterializedViewPrefix = 'drop materialized view ';\nSchemaCompiler.prototype.alterViewPrefix = 'alter view ';\n\nSchemaCompiler.prototype.alterTable = buildTable('alter');\nSchemaCompiler.prototype.createTable = buildTable('create');\nSchemaCompiler.prototype.createTableIfNotExists = buildTable('createIfNot');\nSchemaCompiler.prototype.createTableLike = buildTable('createLike');\n\nSchemaCompiler.prototype.createView = buildView('create');\nSchemaCompiler.prototype.createViewOrReplace = buildView('createOrReplace');\nSchemaCompiler.prototype.createMaterializedView = buildView(\n  'createMaterializedView'\n);\nSchemaCompiler.prototype.alterView = buildView('alter');\n\nSchemaCompiler.prototype.pushQuery = pushQuery;\nSchemaCompiler.prototype.pushAdditional = pushAdditional;\nSchemaCompiler.prototype.unshiftQuery = unshiftQuery;\n\nfunction build(builder) {\n  // pass queryContext down to tableBuilder but do not overwrite it if already set\n  const queryContext = this.builder.queryContext();\n  if (queryContext !== undefined && builder.queryContext() === undefined) {\n    builder.queryContext(queryContext);\n  }\n\n  builder.setSchema(this.schema);\n  const sql = builder.toSQL();\n\n  for (let i = 0, l = sql.length; i < l; i++) {\n    this.sequence.push(sql[i]);\n  }\n}\n\nfunction buildTable(type) {\n  if (type === 'createLike') {\n    return function (tableName, tableNameLike, fn) {\n      const builder = this.client.tableBuilder(\n        type,\n        tableName,\n        tableNameLike,\n        fn\n      );\n      build.call(this, builder);\n    };\n  } else {\n    return function (tableName, fn) {\n      const builder = this.client.tableBuilder(type, tableName, null, fn);\n      build.call(this, builder);\n    };\n  }\n}\n\nfunction buildView(type) {\n  return function (viewName, fn) {\n    const builder = this.client.viewBuilder(type, viewName, fn);\n    build.call(this, builder);\n  };\n}\n\nfunction prefixedTableName(prefix, table) {\n  return prefix ? `${prefix}.${table}` : table;\n}\n\nfunction throwOnlyPGError(operationName) {\n  throw new Error(\n    `${operationName} is not supported for this dialect (only PostgreSQL supports it currently).`\n  );\n}\n\nmodule.exports = SchemaCompiler;\n","// TableBuilder\n\n// Takes the function passed to the \"createTable\" or \"table/editTable\"\n// functions and calls it with the \"TableBuilder\" as both the context and\n// the first argument. Inside this function we can specify what happens to the\n// method, pushing everything we want to do onto the \"allStatements\" array,\n// which is then compiled into sql.\n// ------\nconst each = require('lodash/each');\nconst extend = require('lodash/extend');\nconst assign = require('lodash/assign');\nconst toArray = require('lodash/toArray');\nconst helpers = require('../util/helpers');\nconst { isString, isFunction, isObject } = require('../util/is');\n\nclass TableBuilder {\n  constructor(client, method, tableName, tableNameLike, fn) {\n    this.client = client;\n    this._fn = fn;\n    this._method = method;\n    this._schemaName = undefined;\n    this._tableName = tableName;\n    this._tableNameLike = tableNameLike;\n    this._statements = [];\n    this._single = {};\n\n    if (!tableNameLike && !isFunction(this._fn)) {\n      throw new TypeError(\n        'A callback function must be supplied to calls against `.createTable` ' +\n          'and `.table`'\n      );\n    }\n  }\n\n  setSchema(schemaName) {\n    this._schemaName = schemaName;\n  }\n\n  // Convert the current tableBuilder object \"toSQL\"\n  // giving us additional methods if we're altering\n  // rather than creating the table.\n  toSQL() {\n    if (this._method === 'alter') {\n      extend(this, AlterMethods);\n    }\n    // With 'create table ... like' callback function is useless.\n    if (this._fn) {\n      this._fn.call(this, this);\n    }\n    return this.client.tableCompiler(this).toSQL();\n  }\n\n  // The \"timestamps\" call is really just sets the `created_at` and `updated_at` columns.\n\n  timestamps(useTimestamps, defaultToNow, useCamelCase) {\n    if (isObject(useTimestamps)) {\n      ({ useTimestamps, defaultToNow, useCamelCase } = useTimestamps);\n    }\n    const method = useTimestamps === true ? 'timestamp' : 'datetime';\n    const createdAt = this[method](useCamelCase ? 'createdAt' : 'created_at');\n    const updatedAt = this[method](useCamelCase ? 'updatedAt' : 'updated_at');\n\n    if (defaultToNow === true) {\n      const now = this.client.raw('CURRENT_TIMESTAMP');\n      createdAt.notNullable().defaultTo(now);\n      updatedAt.notNullable().defaultTo(now);\n    }\n  }\n\n  // Set the comment value for a table, they're only allowed to be called\n  // once per table.\n  comment(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('Table comment must be string');\n    }\n    this._single.comment = value;\n  }\n\n  // Set a foreign key on the table, calling\n  // `table.foreign('column_name').references('column').on('table').onDelete()...\n  // Also called from the ColumnBuilder context when chaining.\n  foreign(column, keyName) {\n    const foreignData = { column: column, keyName: keyName };\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'foreign',\n      args: [foreignData],\n    });\n    let returnObj = {\n      references(tableColumn) {\n        let pieces;\n        if (isString(tableColumn)) {\n          pieces = tableColumn.split('.');\n        }\n        if (!pieces || pieces.length === 1) {\n          foreignData.references = pieces ? pieces[0] : tableColumn;\n          return {\n            on(tableName) {\n              if (typeof tableName !== 'string') {\n                throw new TypeError(\n                  `Expected tableName to be a string, got: ${typeof tableName}`\n                );\n              }\n              foreignData.inTable = tableName;\n              return returnObj;\n            },\n            inTable() {\n              return this.on.apply(this, arguments);\n            },\n          };\n        }\n        foreignData.inTable = pieces[0];\n        foreignData.references = pieces[1];\n        return returnObj;\n      },\n      withKeyName(keyName) {\n        foreignData.keyName = keyName;\n        return returnObj;\n      },\n      onUpdate(statement) {\n        foreignData.onUpdate = statement;\n        return returnObj;\n      },\n      onDelete(statement) {\n        foreignData.onDelete = statement;\n        return returnObj;\n      },\n      deferrable: (type) => {\n        const unSupported = [\n          'mysql',\n          'mssql',\n          'redshift',\n          'mysql2',\n          'oracledb',\n        ];\n        if (unSupported.indexOf(this.client.dialect) !== -1) {\n          throw new Error(`${this.client.dialect} does not support deferrable`);\n        }\n        foreignData.deferrable = type;\n        return returnObj;\n      },\n      _columnBuilder(builder) {\n        extend(builder, returnObj);\n        returnObj = builder;\n        return builder;\n      },\n    };\n    return returnObj;\n  }\n\n  check(checkPredicate, bindings, constraintName) {\n    this._statements.push({\n      grouping: 'checks',\n      args: [checkPredicate, bindings, constraintName],\n    });\n    return this;\n  }\n}\n\n[\n  // Each of the index methods can be called individually, with the\n  // column name to be used, e.g. table.unique('column').\n  'index',\n  'primary',\n  'unique',\n\n  // Key specific\n  'dropPrimary',\n  'dropUnique',\n  'dropIndex',\n  'dropForeign',\n].forEach((method) => {\n  TableBuilder.prototype[method] = function () {\n    this._statements.push({\n      grouping: 'alterTable',\n      method,\n      args: toArray(arguments),\n    });\n    return this;\n  };\n});\n\n// Warn for dialect-specific table methods, since that's the\n// only time these are supported.\nconst specialMethods = {\n  mysql: ['engine', 'charset', 'collate'],\n  postgresql: ['inherits'],\n};\neach(specialMethods, function (methods, dialect) {\n  methods.forEach(function (method) {\n    TableBuilder.prototype[method] = function (value) {\n      if (this.client.dialect !== dialect) {\n        throw new Error(\n          `Knex only supports ${method} statement with ${dialect}.`\n        );\n      }\n      if (this._method === 'alter') {\n        throw new Error(\n          `Knex does not support altering the ${method} outside of create ` +\n            `table, please use knex.raw statement.`\n        );\n      }\n      this._single[method] = value;\n    };\n  });\n});\n\nhelpers.addQueryContext(TableBuilder);\n\n// Each of the column types that we can add, we create a new ColumnBuilder\n// instance and push it onto the statements array.\nconst columnTypes = [\n  // Numeric\n  'tinyint',\n  'smallint',\n  'mediumint',\n  'int',\n  'bigint',\n  'decimal',\n  'float',\n  'double',\n  'real',\n  'bit',\n  'boolean',\n  'serial',\n\n  // Date / Time\n  'date',\n  'datetime',\n  'timestamp',\n  'time',\n  'year',\n\n  // Geometry\n  'geometry',\n  'geography',\n  'point',\n\n  // String\n  'char',\n  'varchar',\n  'tinytext',\n  'tinyText',\n  'text',\n  'mediumtext',\n  'mediumText',\n  'longtext',\n  'longText',\n  'binary',\n  'varbinary',\n  'tinyblob',\n  'tinyBlob',\n  'mediumblob',\n  'mediumBlob',\n  'blob',\n  'longblob',\n  'longBlob',\n  'enum',\n  'set',\n\n  // Increments, Aliases, and Additional\n  'bool',\n  'dateTime',\n  'increments',\n  'bigincrements',\n  'bigIncrements',\n  'integer',\n  'biginteger',\n  'bigInteger',\n  'string',\n  'json',\n  'jsonb',\n  'uuid',\n  'enu',\n  'specificType',\n];\n\n// For each of the column methods, create a new \"ColumnBuilder\" interface,\n// push it onto the \"allStatements\" stack, and then return the interface,\n// with which we can add indexes, etc.\ncolumnTypes.forEach((type) => {\n  TableBuilder.prototype[type] = function () {\n    const args = toArray(arguments);\n    const builder = this.client.columnBuilder(this, type, args);\n    this._statements.push({\n      grouping: 'columns',\n      builder,\n    });\n    return builder;\n  };\n});\n\nconst AlterMethods = {\n  // Renames the current column `from` the current\n  // TODO: this.column(from).rename(to)\n  renameColumn(from, to) {\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'renameColumn',\n      args: [from, to],\n    });\n    return this;\n  },\n\n  dropTimestamps() {\n    // arguments[0] = useCamelCase\n    return this.dropColumns(\n      arguments[0] === true\n        ? ['createdAt', 'updatedAt']\n        : ['created_at', 'updated_at']\n    );\n  },\n\n  setNullable(column) {\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'setNullable',\n      args: [column],\n    });\n\n    return this;\n  },\n\n  check(checkPredicate, bindings, constraintName) {\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'check',\n      args: [checkPredicate, bindings, constraintName],\n    });\n  },\n\n  dropChecks() {\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'dropChecks',\n      args: toArray(arguments),\n    });\n  },\n\n  dropNullable(column) {\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'dropNullable',\n      args: [column],\n    });\n\n    return this;\n  },\n\n  // TODO: changeType\n};\n\n// Drop a column from the current table.\n// TODO: Enable this.column(columnName).drop();\nAlterMethods.dropColumn = AlterMethods.dropColumns = function () {\n  this._statements.push({\n    grouping: 'alterTable',\n    method: 'dropColumn',\n    args: toArray(arguments),\n  });\n  return this;\n};\n\n\nTableBuilder.extend = (methodName, fn) => {\n  if (Object.prototype.hasOwnProperty.call(TableBuilder.prototype, methodName)) {\n    throw new Error(\n      `Can't extend TableBuilder with existing method ('${methodName}').`\n    );\n  }\n\n  assign(TableBuilder.prototype, { [methodName]: fn });\n};\n\nmodule.exports = TableBuilder;\n","/* eslint max-len:0 */\n\n// Table Compiler\n// -------\nconst {\n  pushAdditional,\n  pushQuery,\n  unshiftQuery,\n} = require('./internal/helpers');\nconst helpers = require('../util/helpers');\nconst groupBy = require('lodash/groupBy');\nconst indexOf = require('lodash/indexOf');\nconst isEmpty = require('lodash/isEmpty');\nconst tail = require('lodash/tail');\nconst { normalizeArr } = require('../util/helpers');\n\nclass TableCompiler {\n  constructor(client, tableBuilder) {\n    this.client = client;\n    this.tableBuilder = tableBuilder;\n    this._commonBuilder = this.tableBuilder;\n    this.method = tableBuilder._method;\n    this.schemaNameRaw = tableBuilder._schemaName;\n    this.tableNameRaw = tableBuilder._tableName;\n    this.tableNameLikeRaw = tableBuilder._tableNameLike;\n    this.single = tableBuilder._single;\n    this.grouped = groupBy(tableBuilder._statements, 'grouping');\n\n    this.formatter = client.formatter(tableBuilder);\n    this.bindings = [];\n    this.formatter.bindings = this.bindings;\n    this.bindingsHolder = this;\n\n    this.sequence = [];\n    this._formatting = client.config && client.config.formatting;\n\n    this.checksCount = 0;\n  }\n\n  // Convert the tableCompiler toSQL\n  toSQL() {\n    this[this.method]();\n    return this.sequence;\n  }\n\n  // Column Compilation\n  // -------\n\n  // If this is a table \"creation\", we need to first run through all\n  // of the columns to build them into a single string,\n  // and then run through anything else and push it to the query sequence.\n  create(ifNot, like) {\n    const columnBuilders = this.getColumns();\n    const columns = columnBuilders.map((col) => col.toSQL());\n    const columnTypes = this.getColumnTypes(columns);\n    if (this.createAlterTableMethods) {\n      this.alterTableForCreate(columnTypes);\n    }\n    this.createQuery(columnTypes, ifNot, like);\n    this.columnQueries(columns);\n    delete this.single.comment;\n    this.alterTable();\n  }\n\n  // Only create the table if it doesn't exist.\n  createIfNot() {\n    this.create(true);\n  }\n\n  createLike() {\n    this.create(false, true);\n  }\n\n  createLikeIfNot() {\n    this.create(true, true);\n  }\n\n  // If we're altering the table, we need to one-by-one\n  // go through and handle each of the queries associated\n  // with altering the table's schema.\n  alter() {\n    const addColBuilders = this.getColumns();\n    const addColumns = addColBuilders.map((col) => col.toSQL());\n    const alterColBuilders = this.getColumns('alter');\n    const alterColumns = alterColBuilders.map((col) => col.toSQL());\n    const addColumnTypes = this.getColumnTypes(addColumns);\n    const alterColumnTypes = this.getColumnTypes(alterColumns);\n\n    this.addColumns(addColumnTypes);\n    this.alterColumns(alterColumnTypes, alterColBuilders);\n    this.columnQueries(addColumns);\n    this.columnQueries(alterColumns);\n    this.alterTable();\n  }\n\n  foreign(foreignData) {\n    if (foreignData.inTable && foreignData.references) {\n      const keyName = foreignData.keyName\n        ? this.formatter.wrap(foreignData.keyName)\n        : this._indexCommand('foreign', this.tableNameRaw, foreignData.column);\n      const column = this.formatter.columnize(foreignData.column);\n      const references = this.formatter.columnize(foreignData.references);\n      const inTable = this.formatter.wrap(foreignData.inTable);\n      const onUpdate = foreignData.onUpdate\n        ? (this.lowerCase ? ' on update ' : ' ON UPDATE ') +\n          foreignData.onUpdate\n        : '';\n      const onDelete = foreignData.onDelete\n        ? (this.lowerCase ? ' on delete ' : ' ON DELETE ') +\n          foreignData.onDelete\n        : '';\n      const deferrable = foreignData.deferrable\n        ? this.lowerCase\n          ? ` deferrable initially ${foreignData.deferrable.toLowerCase()} `\n          : ` DEFERRABLE INITIALLY ${foreignData.deferrable.toUpperCase()} `\n        : '';\n      if (this.lowerCase) {\n        this.pushQuery(\n          (!this.forCreate ? `alter table ${this.tableName()} add ` : '') +\n            'constraint ' +\n            keyName +\n            ' ' +\n            'foreign key (' +\n            column +\n            ') references ' +\n            inTable +\n            ' (' +\n            references +\n            ')' +\n            onUpdate +\n            onDelete +\n            deferrable\n        );\n      } else {\n        this.pushQuery(\n          (!this.forCreate ? `ALTER TABLE ${this.tableName()} ADD ` : '') +\n            'CONSTRAINT ' +\n            keyName +\n            ' ' +\n            'FOREIGN KEY (' +\n            column +\n            ') REFERENCES ' +\n            inTable +\n            ' (' +\n            references +\n            ')' +\n            onUpdate +\n            onDelete +\n            deferrable\n        );\n      }\n    }\n  }\n\n  // Get all of the column sql & bindings individually for building the table queries.\n  getColumnTypes(columns) {\n    return columns.reduce(\n      function (memo, columnSQL) {\n        const column = columnSQL[0];\n        memo.sql.push(column.sql);\n        memo.bindings.concat(column.bindings);\n        return memo;\n      },\n      { sql: [], bindings: [] }\n    );\n  }\n\n  // Adds all of the additional queries from the \"column\"\n  columnQueries(columns) {\n    const queries = columns.reduce(function (memo, columnSQL) {\n      const column = tail(columnSQL);\n      if (!isEmpty(column)) return memo.concat(column);\n      return memo;\n    }, []);\n    for (const q of queries) {\n      this.pushQuery(q);\n    }\n  }\n\n  // All of the columns to \"add\" for the query\n  addColumns(columns, prefix) {\n    prefix = prefix || this.addColumnsPrefix;\n\n    if (columns.sql.length > 0) {\n      const columnSql = columns.sql.map((column) => {\n        return prefix + column;\n      });\n      this.pushQuery({\n        sql:\n          (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +\n          this.tableName() +\n          ' ' +\n          columnSql.join(', '),\n        bindings: columns.bindings,\n      });\n    }\n  }\n\n  alterColumns(columns, colBuilders) {\n    if (columns.sql.length > 0) {\n      this.addColumns(columns, this.alterColumnsPrefix, colBuilders);\n    }\n  }\n\n  // Compile the columns as needed for the current create or alter table\n  getColumns(method) {\n    const columns = this.grouped.columns || [];\n    method = method || 'add';\n\n    const queryContext = this.tableBuilder.queryContext();\n\n    return columns\n      .filter((column) => column.builder._method === method)\n      .map((column) => {\n        // pass queryContext down to columnBuilder but do not overwrite it if already set\n        if (\n          queryContext !== undefined &&\n          column.builder.queryContext() === undefined\n        ) {\n          column.builder.queryContext(queryContext);\n        }\n        return this.client.columnCompiler(this, column.builder);\n      });\n  }\n\n  tableName() {\n    const name = this.schemaNameRaw\n      ? `${this.schemaNameRaw}.${this.tableNameRaw}`\n      : this.tableNameRaw;\n\n    return this.formatter.wrap(name);\n  }\n\n  tableNameLike() {\n    const name = this.schemaNameRaw\n      ? `${this.schemaNameRaw}.${this.tableNameLikeRaw}`\n      : this.tableNameLikeRaw;\n\n    return this.formatter.wrap(name);\n  }\n\n  // Generate all of the alter column statements necessary for the query.\n  alterTable() {\n    const alterTable = this.grouped.alterTable || [];\n    for (let i = 0, l = alterTable.length; i < l; i++) {\n      const statement = alterTable[i];\n      if (this[statement.method]) {\n        this[statement.method].apply(this, statement.args);\n      } else {\n        this.client.logger.error(`Debug: ${statement.method} does not exist`);\n      }\n    }\n    for (const item in this.single) {\n      if (typeof this[item] === 'function') this[item](this.single[item]);\n    }\n  }\n\n  alterTableForCreate(columnTypes) {\n    this.forCreate = true;\n    const savedSequence = this.sequence;\n    const alterTable = this.grouped.alterTable || [];\n    this.grouped.alterTable = [];\n    for (let i = 0, l = alterTable.length; i < l; i++) {\n      const statement = alterTable[i];\n      if (indexOf(this.createAlterTableMethods, statement.method) < 0) {\n        this.grouped.alterTable.push(statement);\n        continue;\n      }\n      if (this[statement.method]) {\n        this.sequence = [];\n        this[statement.method].apply(this, statement.args);\n        columnTypes.sql.push(this.sequence[0].sql);\n      } else {\n        this.client.logger.error(`Debug: ${statement.method} does not exist`);\n      }\n    }\n    this.sequence = savedSequence;\n    this.forCreate = false;\n  }\n\n  // Drop the index on the current table.\n  dropIndex(value) {\n    this.pushQuery(`drop index${value}`);\n  }\n\n  dropUnique() {\n    throw new Error('Method implemented in the dialect driver');\n  }\n\n  dropForeign() {\n    throw new Error('Method implemented in the dialect driver');\n  }\n\n  dropColumn() {\n    const columns = helpers.normalizeArr.apply(null, arguments);\n    const drops = (Array.isArray(columns) ? columns : [columns]).map(\n      (column) => {\n        return this.dropColumnPrefix + this.formatter.wrap(column);\n      }\n    );\n    this.pushQuery(\n      (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +\n        this.tableName() +\n        ' ' +\n        drops.join(', ')\n    );\n  }\n\n  //Default implementation of setNullable. Overwrite on dialect-specific tablecompiler when needed\n  //(See postgres/mssql for reference)\n  _setNullableState(column, nullable) {\n    const tableName = this.tableName();\n    const columnName = this.formatter.columnize(column);\n    const alterColumnPrefix = this.alterColumnsPrefix;\n    return this.pushQuery({\n      sql: 'SELECT 1',\n      output: () => {\n        return this.client\n          .queryBuilder()\n          .from(this.tableNameRaw)\n          .columnInfo(column)\n          .then((columnInfo) => {\n            if (isEmpty(columnInfo)) {\n              throw new Error(\n                `.setNullable: Column ${columnName} does not exist in table ${tableName}.`\n              );\n            }\n            const nullableType = nullable ? 'null' : 'not null';\n            const columnType =\n              columnInfo.type +\n              (columnInfo.maxLength ? `(${columnInfo.maxLength})` : '');\n            const defaultValue =\n              columnInfo.defaultValue !== null &&\n              columnInfo.defaultValue !== void 0\n                ? `default '${columnInfo.defaultValue}'`\n                : '';\n            const sql = `alter table ${tableName} ${alterColumnPrefix} ${columnName} ${columnType} ${nullableType} ${defaultValue}`;\n            return this.client.raw(sql);\n          });\n      },\n    });\n  }\n\n  setNullable(column) {\n    return this._setNullableState(column, true);\n  }\n\n  dropNullable(column) {\n    return this._setNullableState(column, false);\n  }\n\n  dropChecks(checkConstraintNames) {\n    if (checkConstraintNames === undefined) return '';\n    checkConstraintNames = normalizeArr(checkConstraintNames);\n    const tableName = this.tableName();\n    const sql = `alter table ${tableName} ${checkConstraintNames\n      .map((constraint) => `drop constraint ${constraint}`)\n      .join(', ')}`;\n    this.pushQuery(sql);\n  }\n\n  check(checkPredicate, bindings, constraintName) {\n    const tableName = this.tableName();\n    let checkConstraint = constraintName;\n    if (!checkConstraint) {\n      this.checksCount++;\n      checkConstraint = tableName + '_' + this.checksCount;\n    }\n    const sql = `alter table ${tableName} add constraint ${checkConstraint} check(${checkPredicate})`;\n    this.pushQuery(sql);\n  }\n\n  _addChecks() {\n    if (this.grouped.checks) {\n      return (\n        ', ' +\n        this.grouped.checks\n          .map((c) => {\n            return `${\n              c.args[2] ? 'constraint ' + c.args[2] + ' ' : ''\n            }check (${this.client.raw(c.args[0], c.args[1])})`;\n          })\n          .join(', ')\n      );\n    }\n    return '';\n  }\n\n  // If no name was specified for this index, we will create one using a basic\n  // convention of the table name, followed by the columns, followed by an\n  // index type, such as primary or index, which makes the index unique.\n  _indexCommand(type, tableName, columns) {\n    if (!Array.isArray(columns)) columns = columns ? [columns] : [];\n    const table = tableName.replace(/\\.|-/g, '_');\n    const indexName = (\n      table +\n      '_' +\n      columns.join('_') +\n      '_' +\n      type\n    ).toLowerCase();\n    return this.formatter.wrap(indexName);\n  }\n\n  _getPrimaryKeys() {\n    return (this.grouped.alterTable || [])\n      .filter((a) => a.method === 'primary')\n      .flatMap((a) => a.args)\n      .flat();\n  }\n\n  _canBeAddPrimaryKey(options) {\n    return options.primaryKey && this._getPrimaryKeys().length === 0;\n  }\n\n  _getIncrementsColumnNames() {\n    return this.grouped.columns\n      .filter((c) => c.builder._type === 'increments')\n      .map((c) => c.builder._args[0]);\n  }\n}\n\nTableCompiler.prototype.pushQuery = pushQuery;\nTableCompiler.prototype.pushAdditional = pushAdditional;\nTableCompiler.prototype.unshiftQuery = unshiftQuery;\nTableCompiler.prototype.lowerCase = true;\nTableCompiler.prototype.createAlterTableMethods = null;\nTableCompiler.prototype.addColumnsPrefix = 'add column ';\nTableCompiler.prototype.alterColumnsPrefix = 'alter column ';\nTableCompiler.prototype.modifyColumnPrefix = 'modify column ';\nTableCompiler.prototype.dropColumnPrefix = 'drop column ';\n\nmodule.exports = TableCompiler;\n","const extend = require('lodash/extend');\nconst assign = require('lodash/assign');\nconst toArray = require('lodash/toArray');\nconst { addQueryContext } = require('../util/helpers');\n\n// The chainable interface off the original \"column\" method.\nclass ColumnBuilder {\n  constructor(client, tableBuilder, type, args) {\n    this.client = client;\n    this._method = 'add';\n    this._single = {};\n    this._modifiers = {};\n    this._statements = [];\n    this._type = columnAlias[type] || type;\n    this._args = args;\n    this._tableBuilder = tableBuilder;\n\n    // If we're altering the table, extend the object\n    // with the available \"alter\" methods.\n    if (tableBuilder._method === 'alter') {\n      extend(this, AlterMethods);\n    }\n  }\n\n  // Specify that the current column \"references\" a column,\n  // which may be tableName.column or just \"column\"\n  references(value) {\n    return this._tableBuilder.foreign\n      .call(this._tableBuilder, this._args[0], undefined, this)\n      ._columnBuilder(this)\n      .references(value);\n  }\n}\n\n// All of the modifier methods that can be used to modify the current query.\nconst modifiers = [\n  'default',\n  'defaultsTo',\n  'defaultTo',\n  'unsigned',\n  'nullable',\n  'first',\n  'after',\n  'comment',\n  'collate',\n  'check',\n  'checkPositive',\n  'checkNegative',\n  'checkIn',\n  'checkNotIn',\n  'checkBetween',\n  'checkLength',\n  'checkRegex',\n];\n\n// Aliases for convenience.\nconst aliasMethod = {\n  default: 'defaultTo',\n  defaultsTo: 'defaultTo',\n};\n\n// If we call any of the modifiers (index or otherwise) on the chainable, we pretend\n// as though we're calling `table.method(column)` directly.\nmodifiers.forEach(function (method) {\n  const key = aliasMethod[method] || method;\n  ColumnBuilder.prototype[method] = function () {\n    this._modifiers[key] = toArray(arguments);\n    return this;\n  };\n});\n\naddQueryContext(ColumnBuilder);\n\nColumnBuilder.prototype.notNull = ColumnBuilder.prototype.notNullable =\n  function notNullable() {\n    return this.nullable(false);\n  };\n\n['index', 'primary', 'unique'].forEach(function (method) {\n  ColumnBuilder.prototype[method] = function () {\n    if (this._type.toLowerCase().indexOf('increments') === -1) {\n      this._tableBuilder[method].apply(\n        this._tableBuilder,\n        [this._args[0]].concat(toArray(arguments))\n      );\n    }\n    return this;\n  };\n});\n\n\nColumnBuilder.extend = (methodName, fn) => {\n  if (Object.prototype.hasOwnProperty.call(ColumnBuilder.prototype, methodName)) {\n    throw new Error(\n      `Can't extend ColumnBuilder with existing method ('${methodName}').`\n    );\n  }\n\n  assign(ColumnBuilder.prototype, { [methodName]: fn });\n};\n\nconst AlterMethods = {};\n\n// Specify that the column is to be dropped. This takes precedence\n// over all other rules for the column.\nAlterMethods.drop = function () {\n  this._single.drop = true;\n\n  return this;\n};\n\n// Specify the \"type\" that we're looking to set the\n// Knex takes no responsibility for any data-loss that may\n// occur when changing data types.\nAlterMethods.alterType = function (type) {\n  this._statements.push({\n    grouping: 'alterType',\n    value: type,\n  });\n\n  return this;\n};\n\n// Set column method to alter (default is add).\nAlterMethods.alter = function ({\n  alterNullable = true,\n  alterType = true,\n} = {}) {\n  this._method = 'alter';\n  this.alterNullable = alterNullable;\n  this.alterType = alterType;\n\n  return this;\n};\n\n// Alias a few methods for clarity when processing.\nconst columnAlias = {\n  float: 'floating',\n  enum: 'enu',\n  boolean: 'bool',\n  string: 'varchar',\n  bigint: 'bigInteger',\n};\n\nmodule.exports = ColumnBuilder;\n","// Column Compiler\n// Used for designating column definitions\n// during the table \"create\" / \"alter\" statements.\n// -------\nconst helpers = require('./internal/helpers');\nconst groupBy = require('lodash/groupBy');\nconst first = require('lodash/first');\nconst has = require('lodash/has');\nconst tail = require('lodash/tail');\nconst { toNumber } = require('../util/helpers');\nconst { formatDefault } = require('../formatter/formatterUtils');\nconst { operator: operator_ } = require('../formatter/wrappingFormatter');\n\nclass ColumnCompiler {\n  constructor(client, tableCompiler, columnBuilder) {\n    this.client = client;\n    this.tableCompiler = tableCompiler;\n    this.columnBuilder = columnBuilder;\n    this._commonBuilder = this.columnBuilder;\n    this.args = columnBuilder._args;\n    this.type = columnBuilder._type.toLowerCase();\n    this.grouped = groupBy(columnBuilder._statements, 'grouping');\n    this.modified = columnBuilder._modifiers;\n    this.isIncrements = this.type.indexOf('increments') !== -1;\n\n    this.formatter = client.formatter(columnBuilder);\n    this.bindings = [];\n    this.formatter.bindings = this.bindings;\n    this.bindingsHolder = this;\n\n    this.sequence = [];\n    this.modifiers = [];\n\n    this.checksCount = 0;\n  }\n\n  _addCheckModifiers() {\n    this.modifiers.push(\n      'check',\n      'checkPositive',\n      'checkNegative',\n      'checkIn',\n      'checkNotIn',\n      'checkBetween',\n      'checkLength',\n      'checkRegex'\n    );\n  }\n\n  defaults(label) {\n    if (Object.prototype.hasOwnProperty.call(this._defaultMap, label)) {\n      return this._defaultMap[label].bind(this)();\n    } else {\n      throw new Error(\n        `There is no default for the specified identifier ${label}`\n      );\n    }\n  }\n\n  // To convert to sql, we first go through and build the\n  // column as it would be in the insert statement\n  toSQL() {\n    this.pushQuery(this.compileColumn());\n    if (this.sequence.additional) {\n      this.sequence = this.sequence.concat(this.sequence.additional);\n    }\n    return this.sequence;\n  }\n\n  // Compiles a column.\n  compileColumn() {\n    return (\n      this.formatter.wrap(this.getColumnName()) +\n      ' ' +\n      this.getColumnType() +\n      this.getModifiers()\n    );\n  }\n\n  // Assumes the autoincrementing key is named `id` if not otherwise specified.\n  getColumnName() {\n    const value = first(this.args);\n    return value || this.defaults('columnName');\n  }\n\n  getColumnType() {\n    // Column type is cached so side effects (such as in pg native enums) are only run once\n    if (!this._columnType) {\n      const type = this[this.type];\n      this._columnType =\n        typeof type === 'function' ? type.apply(this, tail(this.args)) : type;\n    }\n\n    return this._columnType;\n  }\n\n  getModifiers() {\n    const modifiers = [];\n\n    for (let i = 0, l = this.modifiers.length; i < l; i++) {\n      const modifier = this.modifiers[i];\n\n      //Cannot allow 'nullable' modifiers on increments types\n      if (!this.isIncrements || (this.isIncrements && modifier === 'comment')) {\n        if (has(this.modified, modifier)) {\n          const val = this[modifier].apply(this, this.modified[modifier]);\n          if (val) modifiers.push(val);\n        }\n      }\n    }\n\n    return modifiers.length > 0 ? ` ${modifiers.join(' ')}` : '';\n  }\n\n  // Types\n  // ------\n  varchar(length) {\n    return `varchar(${toNumber(length, 255)})`;\n  }\n\n  floating(precision, scale) {\n    return `float(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  decimal(precision, scale) {\n    if (precision === null) {\n      throw new Error(\n        'Specifying no precision on decimal columns is not supported for that SQL dialect.'\n      );\n    }\n    return `decimal(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  // Used to support custom types\n  specifictype(type) {\n    return type;\n  }\n\n  // Modifiers\n  // -------\n\n  nullable(nullable) {\n    return nullable === false ? 'not null' : 'null';\n  }\n\n  notNullable() {\n    return this.nullable(false);\n  }\n\n  defaultTo(value) {\n    return `default ${formatDefault(value, this.type, this.client)}`;\n  }\n\n  increments(options = { primaryKey: true }) {\n    return (\n      'integer not null' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '') +\n      ' autoincrement'\n    );\n  }\n\n  bigincrements(options = { primaryKey: true }) {\n    return this.increments(options);\n  }\n\n  _pushAlterCheckQuery(checkPredicate, constraintName) {\n    let checkName = constraintName;\n    if (!checkName) {\n      this.checksCount++;\n      checkName =\n        this.tableCompiler.tableNameRaw +\n        '_' +\n        this.getColumnName() +\n        '_' +\n        this.checksCount;\n    }\n    this.pushAdditional(function () {\n      this.pushQuery(\n        `alter table ${this.tableCompiler.tableName()} add constraint ${checkName} check(${checkPredicate})`\n      );\n    });\n  }\n\n  _checkConstraintName(constraintName) {\n    return constraintName ? `constraint ${constraintName} ` : '';\n  }\n\n  _check(checkPredicate, constraintName) {\n    if (this.columnBuilder._method === 'alter') {\n      this._pushAlterCheckQuery(checkPredicate, constraintName);\n      return '';\n    }\n    return `${this._checkConstraintName(\n      constraintName\n    )}check (${checkPredicate})`;\n  }\n\n  checkPositive(constraintName) {\n    return this._check(\n      `${this.formatter.wrap(this.getColumnName())} ${operator_(\n        '>',\n        this.columnBuilder,\n        this.bindingsHolder\n      )} 0`,\n      constraintName\n    );\n  }\n\n  checkNegative(constraintName) {\n    return this._check(\n      `${this.formatter.wrap(this.getColumnName())} ${operator_(\n        '<',\n        this.columnBuilder,\n        this.bindingsHolder\n      )} 0`,\n      constraintName\n    );\n  }\n\n  _checkIn(values, constraintName, not) {\n    return this._check(\n      `${this.formatter.wrap(this.getColumnName())} ${\n        not ? 'not ' : ''\n      }in (${values.map((v) => this.client._escapeBinding(v)).join(',')})`,\n      constraintName\n    );\n  }\n\n  checkIn(values, constraintName) {\n    return this._checkIn(values, constraintName);\n  }\n\n  checkNotIn(values, constraintName) {\n    return this._checkIn(values, constraintName, true);\n  }\n\n  checkBetween(intervals, constraintName) {\n    if (\n      intervals.length === 2 &&\n      !Array.isArray(intervals[0]) &&\n      !Array.isArray(intervals[1])\n    ) {\n      intervals = [intervals];\n    }\n    const intervalChecks = intervals\n      .map((interval) => {\n        return `${this.formatter.wrap(\n          this.getColumnName()\n        )} between ${this.client._escapeBinding(\n          interval[0]\n        )} and ${this.client._escapeBinding(interval[1])}`;\n      })\n      .join(' or ');\n    return this._check(intervalChecks, constraintName);\n  }\n\n  checkLength(operator, length, constraintName) {\n    return this._check(\n      `length(${this.formatter.wrap(this.getColumnName())}) ${operator_(\n        operator,\n        this.columnBuilder,\n        this.bindingsHolder\n      )} ${toNumber(length)}`,\n      constraintName\n    );\n  }\n}\n\nColumnCompiler.prototype.binary = 'blob';\nColumnCompiler.prototype.bool = 'boolean';\nColumnCompiler.prototype.date = 'date';\nColumnCompiler.prototype.datetime = 'datetime';\nColumnCompiler.prototype.time = 'time';\nColumnCompiler.prototype.timestamp = 'timestamp';\nColumnCompiler.prototype.geometry = 'geometry';\nColumnCompiler.prototype.geography = 'geography';\nColumnCompiler.prototype.point = 'point';\nColumnCompiler.prototype.enu = 'varchar';\nColumnCompiler.prototype.bit = ColumnCompiler.prototype.json = 'text';\nColumnCompiler.prototype.uuid = ({\n  useBinaryUuid = false,\n  primaryKey = false,\n} = {}) => (useBinaryUuid ? 'binary(16)' : 'char(36)');\nColumnCompiler.prototype.integer =\n  ColumnCompiler.prototype.smallint =\n  ColumnCompiler.prototype.mediumint =\n    'integer';\nColumnCompiler.prototype.biginteger = 'bigint';\nColumnCompiler.prototype.text = 'text';\nColumnCompiler.prototype.tinyint = 'tinyint';\n\nColumnCompiler.prototype.pushQuery = helpers.pushQuery;\nColumnCompiler.prototype.pushAdditional = helpers.pushAdditional;\nColumnCompiler.prototype.unshiftQuery = helpers.unshiftQuery;\n\nColumnCompiler.prototype._defaultMap = {\n  columnName: function () {\n    if (!this.isIncrements) {\n      throw new Error(\n        `You did not specify a column name for the ${this.type} column.`\n      );\n    }\n    return 'id';\n  },\n};\n\nmodule.exports = ColumnCompiler;\n","const Raw = require('./raw');\n\nclass Ref extends Raw {\n  constructor(client, ref) {\n    super(client);\n\n    this.ref = ref;\n    this._schema = null;\n    this._alias = null;\n  }\n\n  withSchema(schema) {\n    this._schema = schema;\n\n    return this;\n  }\n\n  as(alias) {\n    this._alias = alias;\n\n    return this;\n  }\n\n  toSQL() {\n    const string = this._schema ? `${this._schema}.${this.ref}` : this.ref;\n\n    const formatter = this.client.formatter(this);\n\n    const ref = formatter.columnize(string);\n\n    const sql = this._alias ? `${ref} as ${formatter.wrap(this._alias)}` : ref;\n\n    this.set(sql, []);\n\n    return super.toSQL(...arguments);\n  }\n}\n\nmodule.exports = Ref;\n","const {\n  columnize: columnize_,\n  wrap: wrap_,\n} = require('./formatter/wrappingFormatter');\n\nclass Formatter {\n  constructor(client, builder) {\n    this.client = client;\n    this.builder = builder;\n    this.bindings = [];\n  }\n\n  // Accepts a string or array of columns to wrap as appropriate.\n  columnize(target) {\n    return columnize_(target, this.builder, this.client, this);\n  }\n\n  // Puts the appropriate wrapper around a value depending on the database\n  // engine, unless it's a knex.raw value, in which case it's left alone.\n  wrap(value, isParameter) {\n    return wrap_(value, isParameter, this.builder, this.client, this);\n  }\n}\n\nmodule.exports = Formatter;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tty = require('tty');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar tty__namespace = /*#__PURE__*/_interopNamespace(tty);\n\nconst {\n  env = {},\n  argv = [],\n  platform = \"\",\n} = typeof process === \"undefined\" ? {} : process;\n\nconst isDisabled = \"NO_COLOR\" in env || argv.includes(\"--no-color\");\nconst isForced = \"FORCE_COLOR\" in env || argv.includes(\"--color\");\nconst isWindows = platform === \"win32\";\nconst isDumbTerminal = env.TERM === \"dumb\";\n\nconst isCompatibleTerminal =\n  tty__namespace && tty__namespace.isatty && tty__namespace.isatty(1) && env.TERM && !isDumbTerminal;\n\nconst isCI =\n  \"CI\" in env &&\n  (\"GITHUB_ACTIONS\" in env || \"GITLAB_CI\" in env || \"CIRCLECI\" in env);\n\nconst isColorSupported =\n  !isDisabled &&\n  (isForced || (isWindows && !isDumbTerminal) || isCompatibleTerminal || isCI);\n\nconst replaceClose = (\n  index,\n  string,\n  close,\n  replace,\n  head = string.substring(0, index) + replace,\n  tail = string.substring(index + close.length),\n  next = tail.indexOf(close)\n) => head + (next < 0 ? tail : replaceClose(next, tail, close, replace));\n\nconst clearBleed = (index, string, open, close, replace) =>\n  index < 0\n    ? open + string + close\n    : open + replaceClose(index, string, close, replace) + close;\n\nconst filterEmpty =\n  (open, close, replace = open, at = open.length + 1) =>\n  (string) =>\n    string || !(string === \"\" || string === undefined)\n      ? clearBleed(\n          (\"\" + string).indexOf(close, at),\n          string,\n          open,\n          close,\n          replace\n        )\n      : \"\";\n\nconst init = (open, close, replace) =>\n  filterEmpty(`\\x1b[${open}m`, `\\x1b[${close}m`, replace);\n\nconst colors = {\n  reset: init(0, 0),\n  bold: init(1, 22, \"\\x1b[22m\\x1b[1m\"),\n  dim: init(2, 22, \"\\x1b[22m\\x1b[2m\"),\n  italic: init(3, 23),\n  underline: init(4, 24),\n  inverse: init(7, 27),\n  hidden: init(8, 28),\n  strikethrough: init(9, 29),\n  black: init(30, 39),\n  red: init(31, 39),\n  green: init(32, 39),\n  yellow: init(33, 39),\n  blue: init(34, 39),\n  magenta: init(35, 39),\n  cyan: init(36, 39),\n  white: init(37, 39),\n  gray: init(90, 39),\n  bgBlack: init(40, 49),\n  bgRed: init(41, 49),\n  bgGreen: init(42, 49),\n  bgYellow: init(43, 49),\n  bgBlue: init(44, 49),\n  bgMagenta: init(45, 49),\n  bgCyan: init(46, 49),\n  bgWhite: init(47, 49),\n  blackBright: init(90, 39),\n  redBright: init(91, 39),\n  greenBright: init(92, 39),\n  yellowBright: init(93, 39),\n  blueBright: init(94, 39),\n  magentaBright: init(95, 39),\n  cyanBright: init(96, 39),\n  whiteBright: init(97, 39),\n  bgBlackBright: init(100, 49),\n  bgRedBright: init(101, 49),\n  bgGreenBright: init(102, 49),\n  bgYellowBright: init(103, 49),\n  bgBlueBright: init(104, 49),\n  bgMagentaBright: init(105, 49),\n  bgCyanBright: init(106, 49),\n  bgWhiteBright: init(107, 49),\n};\n\nconst createColors = ({ useColor = isColorSupported } = {}) =>\n  useColor\n    ? colors\n    : Object.keys(colors).reduce(\n        (colors, key) => ({ ...colors, [key]: String }),\n        {}\n      );\n\nconst {\n  reset,\n  bold,\n  dim,\n  italic,\n  underline,\n  inverse,\n  hidden,\n  strikethrough,\n  black,\n  red,\n  green,\n  yellow,\n  blue,\n  magenta,\n  cyan,\n  white,\n  gray,\n  bgBlack,\n  bgRed,\n  bgGreen,\n  bgYellow,\n  bgBlue,\n  bgMagenta,\n  bgCyan,\n  bgWhite,\n  blackBright,\n  redBright,\n  greenBright,\n  yellowBright,\n  blueBright,\n  magentaBright,\n  cyanBright,\n  whiteBright,\n  bgBlackBright,\n  bgRedBright,\n  bgGreenBright,\n  bgYellowBright,\n  bgBlueBright,\n  bgMagentaBright,\n  bgCyanBright,\n  bgWhiteBright,\n} = createColors();\n\nexports.bgBlack = bgBlack;\nexports.bgBlackBright = bgBlackBright;\nexports.bgBlue = bgBlue;\nexports.bgBlueBright = bgBlueBright;\nexports.bgCyan = bgCyan;\nexports.bgCyanBright = bgCyanBright;\nexports.bgGreen = bgGreen;\nexports.bgGreenBright = bgGreenBright;\nexports.bgMagenta = bgMagenta;\nexports.bgMagentaBright = bgMagentaBright;\nexports.bgRed = bgRed;\nexports.bgRedBright = bgRedBright;\nexports.bgWhite = bgWhite;\nexports.bgWhiteBright = bgWhiteBright;\nexports.bgYellow = bgYellow;\nexports.bgYellowBright = bgYellowBright;\nexports.black = black;\nexports.blackBright = blackBright;\nexports.blue = blue;\nexports.blueBright = blueBright;\nexports.bold = bold;\nexports.createColors = createColors;\nexports.cyan = cyan;\nexports.cyanBright = cyanBright;\nexports.dim = dim;\nexports.gray = gray;\nexports.green = green;\nexports.greenBright = greenBright;\nexports.hidden = hidden;\nexports.inverse = inverse;\nexports.isColorSupported = isColorSupported;\nexports.italic = italic;\nexports.magenta = magenta;\nexports.magentaBright = magentaBright;\nexports.red = red;\nexports.redBright = redBright;\nexports.reset = reset;\nexports.strikethrough = strikethrough;\nexports.underline = underline;\nexports.white = white;\nexports.whiteBright = whiteBright;\nexports.yellow = yellow;\nexports.yellowBright = yellowBright;\n","const color = require('colorette');\nconst { inspect } = require('util');\nconst { isString, isFunction } = require('./util/is');\n\nclass Logger {\n  constructor(config = {}) {\n    const {\n      log: {\n        debug,\n        warn,\n        error,\n        deprecate,\n        inspectionDepth,\n        enableColors,\n      } = {},\n    } = config;\n    this._inspectionDepth = inspectionDepth || 5;\n    this._enableColors = resolveIsEnabledColors(enableColors);\n    this._debug = debug;\n    this._warn = warn;\n    this._error = error;\n    this._deprecate = deprecate;\n  }\n\n  _log(message, userFn, colorFn) {\n    if (userFn != null && !isFunction(userFn)) {\n      throw new TypeError('Extensions to knex logger must be functions!');\n    }\n\n    if (isFunction(userFn)) {\n      userFn(message);\n      return;\n    }\n\n    if (!isString(message)) {\n      message = inspect(message, {\n        depth: this._inspectionDepth,\n        colors: this._enableColors,\n      });\n    }\n\n    console.log(colorFn ? colorFn(message) : message);\n  }\n\n  debug(message) {\n    this._log(message, this._debug);\n  }\n\n  warn(message) {\n    this._log(message, this._warn, color.yellow);\n  }\n\n  error(message) {\n    this._log(message, this._error, color.red);\n  }\n\n  deprecate(method, alternative) {\n    const message = `${method} is deprecated, please use ${alternative}`;\n\n    this._log(message, this._deprecate, color.yellow);\n  }\n}\n\nfunction resolveIsEnabledColors(enableColorsParam) {\n  if (enableColorsParam != null) {\n    return enableColorsParam;\n  }\n\n  if (process && process.stdout) {\n    return process.stdout.isTTY;\n  }\n\n  return false;\n}\n\nmodule.exports = Logger;\n","const helpers = require('../util/helpers');\nconst extend = require('lodash/extend');\nconst assign = require('lodash/assign');\n\nclass ViewBuilder {\n  constructor(client, method, viewName, fn) {\n    this.client = client;\n    this._method = method;\n    this._schemaName = undefined;\n    this._columns = undefined;\n    this._fn = fn;\n    this._viewName = viewName;\n    this._statements = [];\n    this._single = {};\n  }\n\n  setSchema(schemaName) {\n    this._schemaName = schemaName;\n  }\n\n  columns(columns) {\n    this._columns = columns;\n  }\n\n  as(selectQuery) {\n    this._selectQuery = selectQuery;\n  }\n\n  checkOption() {\n    throw new Error(\n      'check option definition is not supported by this dialect.'\n    );\n  }\n\n  localCheckOption() {\n    throw new Error(\n      'check option definition is not supported by this dialect.'\n    );\n  }\n\n  cascadedCheckOption() {\n    throw new Error(\n      'check option definition is not supported by this dialect.'\n    );\n  }\n\n  toSQL() {\n    if (this._method === 'alter') {\n      extend(this, AlterMethods);\n    }\n    this._fn.call(this, this);\n    return this.client.viewCompiler(this).toSQL();\n  }\n}\n\nconst AlterMethods = {\n  column(column) {\n    const self = this;\n    return {\n      rename: function (newName) {\n        self._statements.push({\n          grouping: 'alterView',\n          method: 'renameColumn',\n          args: [column, newName],\n        });\n        return this;\n      },\n      defaultTo: function (defaultValue) {\n        self._statements.push({\n          grouping: 'alterView',\n          method: 'defaultTo',\n          args: [column, defaultValue],\n        });\n        return this;\n      },\n    };\n  },\n};\n\nhelpers.addQueryContext(ViewBuilder);\n\n\nViewBuilder.extend = (methodName, fn) => {\n  if (Object.prototype.hasOwnProperty.call(ViewBuilder.prototype, methodName)) {\n    throw new Error(\n      `Can't extend ViewBuilder with existing method ('${methodName}').`\n    );\n  }\n\n  assign(ViewBuilder.prototype, { [methodName]: fn });\n};\n\nmodule.exports = ViewBuilder;\n","/* eslint max-len:0 */\n\n// View Compiler\n// -------\nconst { pushQuery } = require('./internal/helpers');\nconst groupBy = require('lodash/groupBy');\nconst { columnize: columnize_ } = require('../formatter/wrappingFormatter');\n\nclass ViewCompiler {\n  constructor(client, viewBuilder) {\n    this.client = client;\n    this.viewBuilder = viewBuilder;\n    this._commonBuilder = this.viewBuilder;\n    this.method = viewBuilder._method;\n    this.schemaNameRaw = viewBuilder._schemaName;\n    this.viewNameRaw = viewBuilder._viewName;\n    this.single = viewBuilder._single;\n    this.selectQuery = viewBuilder._selectQuery;\n    this.columns = viewBuilder._columns;\n    this.grouped = groupBy(viewBuilder._statements, 'grouping');\n\n    this.formatter = client.formatter(viewBuilder);\n    this.bindings = [];\n    this.formatter.bindings = this.bindings;\n    this.bindingsHolder = this;\n\n    this.sequence = [];\n  }\n\n  // Convert the tableCompiler toSQL\n  toSQL() {\n    this[this.method]();\n    return this.sequence;\n  }\n\n  // Column Compilation\n  // -------\n\n  create() {\n    this.createQuery(this.columns, this.selectQuery);\n  }\n\n  createOrReplace() {\n    throw new Error('replace views is not supported by this dialect.');\n  }\n\n  createMaterializedView() {\n    throw new Error('materialized views are not supported by this dialect.');\n  }\n\n  createQuery(columns, selectQuery, materialized, replace) {\n    const createStatement =\n      'create ' +\n      (materialized ? 'materialized ' : '') +\n      (replace ? 'or replace ' : '') +\n      'view ';\n    const columnList = columns\n      ? ' (' +\n        columnize_(\n          columns,\n          this.viewBuilder,\n          this.client,\n          this.bindingsHolder\n        ) +\n        ')'\n      : '';\n    let sql = createStatement + this.viewName() + columnList;\n    sql += ' as ';\n    sql += selectQuery.toString();\n    switch (this.single.checkOption) {\n      case 'default_option':\n        sql += ' with check option';\n        break;\n      case 'local':\n        sql += ' with local check option';\n        break;\n      case 'cascaded':\n        sql += ' with cascaded check option';\n        break;\n      default:\n        break;\n    }\n    this.pushQuery({\n      sql,\n    });\n  }\n\n  renameView(from, to) {\n    throw new Error(\n      'rename view is not supported by this dialect (instead drop, then create another view).'\n    );\n  }\n\n  refreshMaterializedView() {\n    throw new Error('materialized views are not supported by this dialect.');\n  }\n\n  alter() {\n    this.alterView();\n  }\n\n  alterView() {\n    const alterView = this.grouped.alterView || [];\n    for (let i = 0, l = alterView.length; i < l; i++) {\n      const statement = alterView[i];\n      if (this[statement.method]) {\n        this[statement.method].apply(this, statement.args);\n      } else {\n        this.client.logger.error(`Debug: ${statement.method} does not exist`);\n      }\n    }\n    for (const item in this.single) {\n      if (typeof this[item] === 'function') this[item](this.single[item]);\n    }\n  }\n\n  renameColumn(from, to) {\n    throw new Error('rename column of views is not supported by this dialect.');\n  }\n\n  defaultTo(column, defaultValue) {\n    throw new Error(\n      'change default values of views is not supported by this dialect.'\n    );\n  }\n\n  viewName() {\n    const name = this.schemaNameRaw\n      ? `${this.schemaNameRaw}.${this.viewNameRaw}`\n      : this.viewNameRaw;\n\n    return this.formatter.wrap(name);\n  }\n}\n\nViewCompiler.prototype.pushQuery = pushQuery;\n\nmodule.exports = ViewCompiler;\n","const { Pool, TimeoutError } = require('tarn');\nconst { EventEmitter } = require('events');\nconst { promisify } = require('util');\nconst { makeEscape } = require('./util/string');\nconst cloneDeep = require('lodash/cloneDeep');\nconst defaults = require('lodash/defaults');\nconst uniqueId = require('lodash/uniqueId');\n\nconst Runner = require('./execution/runner');\nconst Transaction = require('./execution/transaction');\nconst {\n  executeQuery,\n  enrichQueryObject,\n} = require('./execution/internal/query-executioner');\nconst QueryBuilder = require('./query/querybuilder');\nconst QueryCompiler = require('./query/querycompiler');\nconst SchemaBuilder = require('./schema/builder');\nconst SchemaCompiler = require('./schema/compiler');\nconst TableBuilder = require('./schema/tablebuilder');\nconst TableCompiler = require('./schema/tablecompiler');\nconst ColumnBuilder = require('./schema/columnbuilder');\nconst ColumnCompiler = require('./schema/columncompiler');\nconst { KnexTimeoutError } = require('./util/timeout');\nconst { outputQuery, unwrapRaw } = require('./formatter/wrappingFormatter');\nconst { compileCallback } = require('./formatter/formatterUtils');\nconst Raw = require('./raw');\nconst Ref = require('./ref');\nconst Formatter = require('./formatter');\nconst Logger = require('./logger');\nconst { POOL_CONFIG_OPTIONS } = require('./constants');\nconst ViewBuilder = require('./schema/viewbuilder.js');\nconst ViewCompiler = require('./schema/viewcompiler.js');\nconst isPlainObject = require('lodash/isPlainObject');\n\nconst debug = require('debug')('knex:client');\n\n// The base client provides the general structure\n// for a dialect specific client object.\n\nclass Client extends EventEmitter {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.logger = new Logger(config);\n\n    //Client is a required field, so throw error if it's not supplied.\n    //If 'this.dialect' is set, then this is a 'super()' call, in which case\n    //'client' does not have to be set as it's already assigned on the client prototype.\n\n    if (this.dialect && !this.config.client) {\n      this.logger.warn(\n        `Using 'this.dialect' to identify the client is deprecated and support for it will be removed in the future. Please use configuration option 'client' instead.`\n      );\n    }\n\n    const dbClient = this.config.client || this.dialect;\n    if (!dbClient) {\n      throw new Error(\n        `knex: Required configuration option 'client' is missing.`\n      );\n    }\n\n    if (config.version) {\n      this.version = config.version;\n    }\n\n    if (config.connection && config.connection instanceof Function) {\n      this.connectionConfigProvider = config.connection;\n      this.connectionConfigExpirationChecker = () => true; // causes the provider to be called on first use\n    } else {\n      this.connectionSettings = cloneDeep(config.connection || {});\n      this.connectionConfigExpirationChecker = null;\n    }\n    if (this.driverName && config.connection) {\n      this.initializeDriver();\n      if (!config.pool || (config.pool && config.pool.max !== 0)) {\n        this.initializePool(config);\n      }\n    }\n    this.valueForUndefined = this.raw('DEFAULT');\n    if (config.useNullAsDefault) {\n      this.valueForUndefined = null;\n    }\n  }\n  formatter(builder) {\n    return new Formatter(this, builder);\n  }\n\n  queryBuilder() {\n    return new QueryBuilder(this);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  schemaBuilder() {\n    return new SchemaBuilder(this);\n  }\n\n  schemaCompiler(builder) {\n    return new SchemaCompiler(this, builder);\n  }\n\n  tableBuilder(type, tableName, tableNameLike, fn) {\n    return new TableBuilder(this, type, tableName, tableNameLike, fn);\n  }\n\n  viewBuilder(type, viewBuilder, fn) {\n    return new ViewBuilder(this, type, viewBuilder, fn);\n  }\n\n  tableCompiler(tableBuilder) {\n    return new TableCompiler(this, tableBuilder);\n  }\n\n  viewCompiler(viewCompiler) {\n    return new ViewCompiler(this, viewCompiler);\n  }\n\n  columnBuilder(tableBuilder, type, args) {\n    return new ColumnBuilder(this, tableBuilder, type, args);\n  }\n\n  columnCompiler(tableBuilder, columnBuilder) {\n    return new ColumnCompiler(this, tableBuilder, columnBuilder);\n  }\n\n  runner(builder) {\n    return new Runner(this, builder);\n  }\n\n  transaction(container, config, outerTx) {\n    return new Transaction(this, container, config, outerTx);\n  }\n\n  raw() {\n    return new Raw(this).set(...arguments);\n  }\n\n  ref() {\n    return new Ref(this, ...arguments);\n  }\n  query(connection, queryParam) {\n    const queryObject = enrichQueryObject(connection, queryParam, this);\n    return executeQuery(connection, queryObject, this);\n  }\n\n  stream(connection, queryParam, stream, options) {\n    const queryObject = enrichQueryObject(connection, queryParam, this);\n    return this._stream(connection, queryObject, stream, options);\n  }\n\n  prepBindings(bindings) {\n    return bindings;\n  }\n\n  positionBindings(sql) {\n    return sql;\n  }\n\n  postProcessResponse(resp, queryContext) {\n    if (this.config.postProcessResponse) {\n      return this.config.postProcessResponse(resp, queryContext);\n    }\n    return resp;\n  }\n\n  wrapIdentifier(value, queryContext) {\n    return this.customWrapIdentifier(\n      value,\n      this.wrapIdentifierImpl,\n      queryContext\n    );\n  }\n\n  customWrapIdentifier(value, origImpl, queryContext) {\n    if (this.config.wrapIdentifier) {\n      return this.config.wrapIdentifier(value, origImpl, queryContext);\n    }\n    return origImpl(value);\n  }\n\n  wrapIdentifierImpl(value) {\n    return value !== '*' ? `\"${value.replace(/\"/g, '\"\"')}\"` : '*';\n  }\n\n  initializeDriver() {\n    try {\n      this.driver = this._driver();\n    } catch (e) {\n      const message = `Knex: run\\n$ npm install ${this.driverName} --save`;\n      this.logger.error(`${message}\\n${e.message}\\n${e.stack}`);\n      throw new Error(`${message}\\n${e.message}`);\n    }\n  }\n\n  poolDefaults() {\n    return { min: 2, max: 10, propagateCreateError: true };\n  }\n\n  getPoolSettings(poolConfig) {\n    poolConfig = defaults({}, poolConfig, this.poolDefaults());\n\n    POOL_CONFIG_OPTIONS.forEach((option) => {\n      if (option in poolConfig) {\n        this.logger.warn(\n          [\n            `Pool config option \"${option}\" is no longer supported.`,\n            `See https://github.com/Vincit/tarn.js for possible pool config options.`,\n          ].join(' ')\n        );\n      }\n    });\n\n    const timeouts = [\n      this.config.acquireConnectionTimeout || 60000,\n      poolConfig.acquireTimeoutMillis,\n    ].filter((timeout) => timeout !== undefined);\n\n    // acquire connection timeout can be set on config or config.pool\n    // choose the smallest, positive timeout setting and set on poolConfig\n    poolConfig.acquireTimeoutMillis = Math.min(...timeouts);\n\n    const updatePoolConnectionSettingsFromProvider = async () => {\n      if (!this.connectionConfigProvider) {\n        return; // static configuration, nothing to update\n      }\n      if (\n        !this.connectionConfigExpirationChecker ||\n        !this.connectionConfigExpirationChecker()\n      ) {\n        return; // not expired, reuse existing connection\n      }\n      const providerResult = await this.connectionConfigProvider();\n      if (providerResult.expirationChecker) {\n        this.connectionConfigExpirationChecker =\n          providerResult.expirationChecker;\n        delete providerResult.expirationChecker; // MySQL2 driver warns on receiving extra properties\n      } else {\n        this.connectionConfigExpirationChecker = null;\n      }\n      this.connectionSettings = providerResult;\n    };\n\n    return Object.assign(poolConfig, {\n      create: async () => {\n        await updatePoolConnectionSettingsFromProvider();\n        const connection = await this.acquireRawConnection();\n        connection.__knexUid = uniqueId('__knexUid');\n        if (poolConfig.afterCreate) {\n          await promisify(poolConfig.afterCreate)(connection);\n        }\n        return connection;\n      },\n\n      destroy: (connection) => {\n        if (connection !== void 0) {\n          return this.destroyRawConnection(connection);\n        }\n      },\n\n      validate: (connection) => {\n        if (connection.__knex__disposed) {\n          this.logger.warn(`Connection Error: ${connection.__knex__disposed}`);\n          return false;\n        }\n\n        return this.validateConnection(connection);\n      },\n    });\n  }\n\n  initializePool(config = this.config) {\n    if (this.pool) {\n      this.logger.warn('The pool has already been initialized');\n      return;\n    }\n\n    const tarnPoolConfig = {\n      ...this.getPoolSettings(config.pool),\n    };\n    // afterCreate is an internal knex param, tarn.js does not support it\n    if (tarnPoolConfig.afterCreate) {\n      delete tarnPoolConfig.afterCreate;\n    }\n\n    this.pool = new Pool(tarnPoolConfig);\n  }\n\n  validateConnection(connection) {\n    return true;\n  }\n\n  // Acquire a connection from the pool.\n  async acquireConnection() {\n    if (!this.pool) {\n      throw new Error('Unable to acquire a connection');\n    }\n    try {\n      const connection = await this.pool.acquire().promise;\n      debug('acquired connection from pool: %s', connection.__knexUid);\n      return connection;\n    } catch (error) {\n      let convertedError = error;\n      if (error instanceof TimeoutError) {\n        convertedError = new KnexTimeoutError(\n          'Knex: Timeout acquiring a connection. The pool is probably full. ' +\n            'Are you missing a .transacting(trx) call?'\n        );\n      }\n      throw convertedError;\n    }\n  }\n\n  // Releases a connection back to the connection pool,\n  // returning a promise resolved when the connection is released.\n  releaseConnection(connection) {\n    debug('releasing connection to pool: %s', connection.__knexUid);\n    const didRelease = this.pool.release(connection);\n\n    if (!didRelease) {\n      debug('pool refused connection: %s', connection.__knexUid);\n    }\n\n    return Promise.resolve();\n  }\n\n  // Destroy the current connection pool for the client.\n  async destroy(callback) {\n    try {\n      if (this.pool && this.pool.destroy) {\n        await this.pool.destroy();\n      }\n      this.pool = undefined;\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    } catch (err) {\n      if (typeof callback === 'function') {\n        return callback(err);\n      }\n      throw err;\n    }\n  }\n\n  // Return the database being used by this client.\n  database() {\n    return this.connectionSettings.database;\n  }\n\n  toString() {\n    return '[object KnexClient]';\n  }\n\n  assertCanCancelQuery() {\n    if (!this.canCancelQuery) {\n      throw new Error('Query cancelling not supported for this dialect');\n    }\n  }\n\n  cancelQuery() {\n    throw new Error('Query cancelling not supported for this dialect');\n  }\n\n  // Formatter part\n\n  alias(first, second) {\n    return first + ' as ' + second;\n  }\n\n  // Checks whether a value is a function... if it is, we compile it\n  // otherwise we check whether it's a raw\n  parameter(value, builder, bindingsHolder) {\n    if (typeof value === 'function') {\n      return outputQuery(\n        compileCallback(value, undefined, this, bindingsHolder),\n        true,\n        builder,\n        this\n      );\n    }\n    return unwrapRaw(value, true, builder, this, bindingsHolder) || '?';\n  }\n\n  // Turns a list of values into a list of ?'s, joining them with commas unless\n  // a \"joining\" value is specified (e.g. ' and ')\n  parameterize(values, notSetValue, builder, bindingsHolder) {\n    if (typeof values === 'function')\n      return this.parameter(values, builder, bindingsHolder);\n    values = Array.isArray(values) ? values : [values];\n    let str = '',\n      i = -1;\n    while (++i < values.length) {\n      if (i > 0) str += ', ';\n      let value = values[i];\n      // json columns can have object in values.\n      if (isPlainObject(value)) {\n        value = JSON.stringify(value);\n      }\n      str += this.parameter(\n        value === undefined ? notSetValue : value,\n        builder,\n        bindingsHolder\n      );\n    }\n    return str;\n  }\n\n  // Formats `values` into a parenthesized list of parameters for a `VALUES`\n  // clause.\n  //\n  // [1, 2]                  -> '(?, ?)'\n  // [[1, 2], [3, 4]]        -> '((?, ?), (?, ?))'\n  // knex('table')           -> '(select * from \"table\")'\n  // knex.raw('select ?', 1) -> '(select ?)'\n  //\n  values(values, builder, bindingsHolder) {\n    if (Array.isArray(values)) {\n      if (Array.isArray(values[0])) {\n        return `(${values\n          .map(\n            (value) =>\n              `(${this.parameterize(\n                value,\n                undefined,\n                builder,\n                bindingsHolder\n              )})`\n          )\n          .join(', ')})`;\n      }\n      return `(${this.parameterize(\n        values,\n        undefined,\n        builder,\n        bindingsHolder\n      )})`;\n    }\n\n    if (values && values.isRawInstance) {\n      return `(${this.parameter(values, builder, bindingsHolder)})`;\n    }\n\n    return this.parameter(values, builder, bindingsHolder);\n  }\n\n  processPassedConnection(connection) {\n    // Default implementation is noop\n  }\n\n  toPathForJson(jsonPath) {\n    // By default, we want a json path, so if this function is not overriden,\n    // we return the path.\n    return jsonPath;\n  }\n}\n\nObject.assign(Client.prototype, {\n  _escapeBinding: makeEscape({\n    escapeString(str) {\n      return `'${str.replace(/'/g, \"''\")}'`;\n    },\n  }),\n\n  canCancelQuery: false,\n});\n\nmodule.exports = Client;\n","'use strict'\n\nvar url = require('url')\nvar fs = require('fs')\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  //unix socket\n  if (str.charAt(0) === '/') {\n    var config = str.split(' ')\n    return { host: config[0], database: config[1] }\n  }\n\n  // url parse expects spaces encoded as %20\n  var result = url.parse(\n    / |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str) ? encodeURI(str).replace(/\\%25(\\d\\d)/g, '%$1') : str,\n    true\n  )\n  var config = result.query\n  for (var k in config) {\n    if (Array.isArray(config[k])) {\n      config[k] = config[k][config[k].length - 1]\n    }\n  }\n\n  var auth = (result.auth || ':').split(':')\n  config.user = auth[0]\n  config.password = auth.splice(1).join(':')\n\n  config.port = result.port\n  if (result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname)\n    config.database = result.query.db\n    config.client_encoding = result.query.encoding\n    return config\n  }\n  if (!config.host) {\n    // Only set the host if there is no equivalent query param.\n    config.host = result.hostname\n  }\n\n  // If the host is missing it might be a URL-encoded path to a socket.\n  var pathname = result.pathname\n  if (!config.host && pathname && /^%2f/i.test(pathname)) {\n    var pathnameSplit = pathname.split('/')\n    config.host = decodeURIComponent(pathnameSplit[0])\n    pathname = pathnameSplit.splice(1).join('/')\n  }\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = pathname.slice(1) || null\n  }\n  config.database = pathname && decodeURI(pathname)\n\n  if (config.ssl === 'true' || config.ssl === '1') {\n    config.ssl = true\n  }\n\n  if (config.ssl === '0') {\n    config.ssl = false\n  }\n\n  if (config.sslcert || config.sslkey || config.sslrootcert || config.sslmode) {\n    config.ssl = {}\n  }\n\n  if (config.sslcert) {\n    config.ssl.cert = fs.readFileSync(config.sslcert).toString()\n  }\n\n  if (config.sslkey) {\n    config.ssl.key = fs.readFileSync(config.sslkey).toString()\n  }\n\n  if (config.sslrootcert) {\n    config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()\n  }\n\n  switch (config.sslmode) {\n    case 'disable': {\n      config.ssl = false\n      break\n    }\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full': {\n      break\n    }\n    case 'no-verify': {\n      config.ssl.rejectUnauthorized = false\n      break\n    }\n  }\n\n  return config\n}\n\nmodule.exports = parse\n\nparse.parse = parse\n","const { parse } = require('pg-connection-string');\nconst parsePG = parse;\nconst isWindows = process && process.platform && process.platform === 'win32';\n\n/**\n * @param str\n * @returns {URL}\n */\nfunction tryParse(str) {\n  try {\n    return new URL(str);\n  } catch (e) {\n    return null;\n  }\n}\n\nmodule.exports = function parseConnectionString(str) {\n  const parsed = tryParse(str);\n  const isDriveLetter = isWindows && parsed && parsed.protocol.length === 2;\n  if (!parsed || isDriveLetter) {\n    return {\n      client: 'sqlite3',\n      connection: {\n        filename: str,\n      },\n    };\n  }\n  let { protocol } = parsed;\n  if (protocol.slice(-1) === ':') {\n    protocol = protocol.slice(0, -1);\n  }\n\n  const isPG = ['postgresql', 'postgres'].includes(protocol);\n\n  return {\n    client: protocol,\n    connection: isPG ? parsePG(str) : connectionObject(parsed),\n  };\n};\n\n/**\n * @param {URL} parsed\n * @returns {{}}\n */\nfunction connectionObject(parsed) {\n  const connection = {};\n  let db = parsed.pathname;\n  if (db[0] === '/') {\n    db = db.slice(1);\n  }\n\n  connection.database = db;\n\n  if (parsed.hostname) {\n    if (parsed.protocol.indexOf('mssql') === 0) {\n      connection.server = parsed.hostname;\n    } else {\n      connection.host = parsed.hostname;\n    }\n  }\n  if (parsed.port) {\n    connection.port = parsed.port;\n  }\n  if (parsed.username || parsed.password) {\n    connection.user = decodeURIComponent(parsed.username);\n  }\n  if (parsed.password) {\n    connection.password = decodeURIComponent(parsed.password);\n  }\n  if (parsed.searchParams) {\n    for (const [key, value] of parsed.searchParams.entries()) {\n      const isNestedConfigSupported = ['mysql:', 'mariadb:', 'mssql:'].includes(\n        parsed.protocol\n      );\n      if (isNestedConfigSupported) {\n        try {\n          connection[key] = JSON.parse(value);\n        } catch (err) {\n          connection[key] = value;\n        }\n      } else {\n        connection[key] = value;\n      }\n    }\n  }\n  return connection;\n}\n","const Transaction = require('../../../execution/transaction');\n\nclass Transaction_Sqlite extends Transaction {\n  begin(conn) {\n    // SQLite doesn't really support isolation levels, it is serializable by\n    // default and so we override it to ignore isolation level.\n    // There is a `PRAGMA read_uncommitted = true;`, but that's probably not\n    // what the user wants\n    if (this.isolationLevel) {\n      this.client.logger.warn(\n        'sqlite3 only supports serializable transactions, ignoring the isolation level param'\n      );\n    }\n    return this.query(conn, 'BEGIN;');\n  }\n}\n\nmodule.exports = Transaction_Sqlite;\n","// SQLite3 Query Builder & Compiler\n\nconst constant = require('lodash/constant');\nconst each = require('lodash/each');\nconst identity = require('lodash/identity');\nconst isEmpty = require('lodash/isEmpty');\nconst reduce = require('lodash/reduce');\n\nconst QueryCompiler = require('../../../query/querycompiler');\nconst noop = require('../../../util/noop');\nconst { isString } = require('../../../util/is');\nconst {\n  wrapString,\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nconst emptyStr = constant('');\n\nclass QueryCompiler_SQLite3 extends QueryCompiler {\n  constructor(client, builder, formatter) {\n    super(client, builder, formatter);\n\n    // The locks are not applicable in SQLite3\n    this.forShare = emptyStr;\n    this.forKeyShare = emptyStr;\n    this.forUpdate = emptyStr;\n    this.forNoKeyUpdate = emptyStr;\n  }\n\n  // SQLite requires us to build the multi-row insert as a listing of select with\n  // unions joining them together. So we'll build out this list of columns and\n  // then join them all together with select unions to complete the queries.\n  insert() {\n    const insertValues = this.single.insert || [];\n    let sql = this.with() + `insert into ${this.tableName} `;\n\n    if (Array.isArray(insertValues)) {\n      if (insertValues.length === 0) {\n        return '';\n      } else if (\n        insertValues.length === 1 &&\n        insertValues[0] &&\n        isEmpty(insertValues[0])\n      ) {\n        return {\n          sql: sql + this._emptyInsertValue,\n        };\n      }\n    } else if (typeof insertValues === 'object' && isEmpty(insertValues)) {\n      return {\n        sql: sql + this._emptyInsertValue,\n      };\n    }\n\n    const insertData = this._prepInsert(insertValues);\n\n    if (isString(insertData)) {\n      return {\n        sql: sql + insertData,\n      };\n    }\n\n    if (insertData.columns.length === 0) {\n      return {\n        sql: '',\n      };\n    }\n\n    sql += `(${this.formatter.columnize(insertData.columns)})`;\n\n    // backwards compatible error\n    if (this.client.valueForUndefined !== null) {\n      insertData.values.forEach((bindings) => {\n        each(bindings, (binding) => {\n          if (binding === undefined)\n            throw new TypeError(\n              '`sqlite` does not support inserting default values. Specify ' +\n                'values explicitly or use the `useNullAsDefault` config flag. ' +\n                '(see docs https://knexjs.org/guide/query-builder.html#insert).'\n            );\n        });\n      });\n    }\n\n    if (insertData.values.length === 1) {\n      const parameters = this.client.parameterize(\n        insertData.values[0],\n        this.client.valueForUndefined,\n        this.builder,\n        this.bindingsHolder\n      );\n      sql += ` values (${parameters})`;\n\n      const { onConflict, ignore, merge } = this.single;\n      if (onConflict && ignore) sql += this._ignore(onConflict);\n      else if (onConflict && merge) {\n        sql += this._merge(merge.updates, onConflict, insertValues);\n        const wheres = this.where();\n        if (wheres) sql += ` ${wheres}`;\n      }\n\n      const { returning } = this.single;\n      if (returning) {\n        sql += this._returning(returning);\n      }\n\n      return {\n        sql,\n        returning,\n      };\n    }\n\n    const blocks = [];\n    let i = -1;\n    while (++i < insertData.values.length) {\n      let i2 = -1;\n      const block = (blocks[i] = []);\n      let current = insertData.values[i];\n      current = current === undefined ? this.client.valueForUndefined : current;\n      while (++i2 < insertData.columns.length) {\n        block.push(\n          this.client.alias(\n            this.client.parameter(\n              current[i2],\n              this.builder,\n              this.bindingsHolder\n            ),\n            this.formatter.wrap(insertData.columns[i2])\n          )\n        );\n      }\n      blocks[i] = block.join(', ');\n    }\n    sql += ' select ' + blocks.join(' union all select ');\n\n    const { onConflict, ignore, merge } = this.single;\n    if (onConflict && ignore) sql += ' where true' + this._ignore(onConflict);\n    else if (onConflict && merge) {\n      sql +=\n        ' where true' + this._merge(merge.updates, onConflict, insertValues);\n    }\n\n    const { returning } = this.single;\n    if (returning) sql += this._returning(returning);\n\n    return {\n      sql,\n      returning,\n    };\n  }\n\n  // Compiles an `update` query, allowing for a return value.\n  update() {\n    const withSQL = this.with();\n    const updateData = this._prepUpdate(this.single.update);\n    const wheres = this.where();\n    const { returning } = this.single;\n    return {\n      sql:\n        withSQL +\n        `update ${this.single.only ? 'only ' : ''}${this.tableName} ` +\n        `set ${updateData.join(', ')}` +\n        (wheres ? ` ${wheres}` : '') +\n        this._returning(returning),\n      returning,\n    };\n  }\n\n  _ignore(columns) {\n    if (columns === true) {\n      return ' on conflict do nothing';\n    }\n    return ` on conflict ${this._onConflictClause(columns)} do nothing`;\n  }\n\n  _merge(updates, columns, insert) {\n    let sql = ` on conflict ${this._onConflictClause(columns)} do update set `;\n    if (updates && Array.isArray(updates)) {\n      sql += updates\n        .map((column) =>\n          wrapString(\n            column.split('.').pop(),\n            this.formatter.builder,\n            this.client,\n            this.formatter\n          )\n        )\n        .map((column) => `${column} = excluded.${column}`)\n        .join(', ');\n\n      return sql;\n    } else if (updates && typeof updates === 'object') {\n      const updateData = this._prepUpdate(updates);\n      if (typeof updateData === 'string') {\n        sql += updateData;\n      } else {\n        sql += updateData.join(',');\n      }\n\n      return sql;\n    } else {\n      const insertData = this._prepInsert(insert);\n      if (typeof insertData === 'string') {\n        throw new Error(\n          'If using merge with a raw insert query, then updates must be provided'\n        );\n      }\n\n      sql += insertData.columns\n        .map((column) =>\n          wrapString(column.split('.').pop(), this.builder, this.client)\n        )\n        .map((column) => `${column} = excluded.${column}`)\n        .join(', ');\n\n      return sql;\n    }\n  }\n\n  _returning(value) {\n    return value ? ` returning ${this.formatter.columnize(value)}` : '';\n  }\n\n  // Compile a truncate table statement into SQL.\n  truncate() {\n    const { table } = this.single;\n    return {\n      sql: `delete from ${this.tableName}`,\n      output() {\n        return this.query({\n          sql: `delete from sqlite_sequence where name = '${table}'`,\n        }).catch(noop);\n      },\n    };\n  }\n\n  // Compiles a `columnInfo` query\n  columnInfo() {\n    const column = this.single.columnInfo;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    return {\n      sql: `PRAGMA table_info(\\`${table}\\`)`,\n      output(resp) {\n        const maxLengthRegex = /.*\\((\\d+)\\)/;\n        const out = reduce(\n          resp,\n          function (columns, val) {\n            let { type } = val;\n            let maxLength = type.match(maxLengthRegex);\n            if (maxLength) {\n              maxLength = maxLength[1];\n            }\n            type = maxLength ? type.split('(')[0] : type;\n            columns[val.name] = {\n              type: type.toLowerCase(),\n              maxLength,\n              nullable: !val.notnull,\n              defaultValue: val.dflt_value,\n            };\n            return columns;\n          },\n          {}\n        );\n        return (column && out[column]) || out;\n      },\n    };\n  }\n\n  limit() {\n    const noLimit = !this.single.limit && this.single.limit !== 0;\n    if (noLimit && !this.single.offset) return '';\n\n    // Workaround for offset only,\n    // see http://stackoverflow.com/questions/10491492/sqllite-with-skip-offset-only-not-limit\n    this.single.limit = noLimit ? -1 : this.single.limit;\n    return `limit ${this._getValueOrParameterFromAttribute('limit')}`;\n  }\n\n  // Json functions\n  jsonExtract(params) {\n    return this._jsonExtract('json_extract', params);\n  }\n\n  jsonSet(params) {\n    return this._jsonSet('json_set', params);\n  }\n\n  jsonInsert(params) {\n    return this._jsonSet('json_insert', params);\n  }\n\n  jsonRemove(params) {\n    const jsonCol = `json_remove(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )},${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n    return params.alias\n      ? this.client.alias(jsonCol, this.formatter.wrap(params.alias))\n      : jsonCol;\n  }\n\n  whereJsonPath(statement) {\n    return this._whereJsonPath('json_extract', statement);\n  }\n\n  whereJsonSupersetOf(statement) {\n    throw new Error(\n      'Json superset where clause not actually supported by SQLite'\n    );\n  }\n\n  whereJsonSubsetOf(statement) {\n    throw new Error(\n      'Json subset where clause not actually supported by SQLite'\n    );\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('json_extract', clause);\n  }\n}\n\nmodule.exports = QueryCompiler_SQLite3;\n","// SQLite3: Column Builder & Compiler\n// -------\nconst SchemaCompiler = require('../../../schema/compiler');\n\nconst some = require('lodash/some');\n\n// Schema Compiler\n// -------\n\nclass SchemaCompiler_SQLite3 extends SchemaCompiler {\n  constructor(client, builder) {\n    super(client, builder);\n  }\n\n  // Compile the query to determine if a table exists.\n  hasTable(tableName) {\n    const sql =\n      `select * from sqlite_master ` +\n      `where type = 'table' and name = ${this.client.parameter(\n        this.formatter.wrap(tableName).replace(/`/g, ''),\n        this.builder,\n        this.bindingsHolder\n      )}`;\n    this.pushQuery({ sql, output: (resp) => resp.length > 0 });\n  }\n\n  // Compile the query to determine if a column exists.\n  hasColumn(tableName, column) {\n    this.pushQuery({\n      sql: `PRAGMA table_info(${this.formatter.wrap(tableName)})`,\n      output(resp) {\n        return some(resp, (col) => {\n          return (\n            this.client.wrapIdentifier(col.name.toLowerCase()) ===\n            this.client.wrapIdentifier(column.toLowerCase())\n          );\n        });\n      },\n    });\n  }\n\n  // Compile a rename table command.\n  renameTable(from, to) {\n    this.pushQuery(\n      `alter table ${this.formatter.wrap(from)} rename to ${this.formatter.wrap(\n        to\n      )}`\n    );\n  }\n\n  async generateDdlCommands() {\n    const sequence = this.builder._sequence;\n    for (let i = 0, l = sequence.length; i < l; i++) {\n      const query = sequence[i];\n      this[query.method].apply(this, query.args);\n    }\n\n    const commandSources = this.sequence;\n\n    if (commandSources.length === 1 && commandSources[0].statementsProducer) {\n      return commandSources[0].statementsProducer();\n    } else {\n      const result = [];\n\n      for (const commandSource of commandSources) {\n        const command = commandSource.sql;\n\n        if (Array.isArray(command)) {\n          result.push(...command);\n        } else {\n          result.push(command);\n        }\n      }\n\n      return { pre: [], sql: result, check: null, post: [] };\n    }\n  }\n}\n\nmodule.exports = SchemaCompiler_SQLite3;\n","const ColumnCompiler = require('../../../schema/columncompiler');\n\n// Column Compiler\n// -------\n\nclass ColumnCompiler_SQLite3 extends ColumnCompiler {\n  constructor() {\n    super(...arguments);\n    this.modifiers = ['nullable', 'defaultTo'];\n    this._addCheckModifiers();\n  }\n\n  // Types\n  // -------\n\n  enu(allowed) {\n    return `text check (${this.formatter.wrap(\n      this.args[0]\n    )} in ('${allowed.join(\"', '\")}'))`;\n  }\n\n  _pushAlterCheckQuery(checkPredicate, constraintName) {\n    throw new Error(\n      `Alter table with to add constraints is not permitted in SQLite`\n    );\n  }\n\n  checkRegex(regexes, constraintName) {\n    return this._check(\n      `${this.formatter.wrap(\n        this.getColumnName()\n      )} REGEXP ${this.client._escapeBinding(regexes)}`,\n      constraintName\n    );\n  }\n}\n\nColumnCompiler_SQLite3.prototype.json = 'json';\nColumnCompiler_SQLite3.prototype.jsonb = 'json';\nColumnCompiler_SQLite3.prototype.double =\n  ColumnCompiler_SQLite3.prototype.decimal =\n  ColumnCompiler_SQLite3.prototype.floating =\n    'float';\nColumnCompiler_SQLite3.prototype.timestamp = 'datetime';\n// autoincrement without primary key is a syntax error in SQLite, so it's necessary\nColumnCompiler_SQLite3.prototype.increments =\n  ColumnCompiler_SQLite3.prototype.bigincrements =\n    'integer not null primary key autoincrement';\n\nmodule.exports = ColumnCompiler_SQLite3;\n","const filter = require('lodash/filter');\nconst values = require('lodash/values');\nconst identity = require('lodash/identity');\nconst { isObject } = require('../../../util/is');\n\nconst TableCompiler = require('../../../schema/tablecompiler');\nconst { formatDefault } = require('../../../formatter/formatterUtils');\n\nclass TableCompiler_SQLite3 extends TableCompiler {\n  constructor() {\n    super(...arguments);\n  }\n\n  // Create a new table.\n  createQuery(columns, ifNot, like) {\n    const createStatement = ifNot\n      ? 'create table if not exists '\n      : 'create table ';\n\n    let sql = createStatement + this.tableName();\n\n    if (like && this.tableNameLike()) {\n      sql += ' as select * from ' + this.tableNameLike() + ' where 0=1';\n    } else {\n      // so we will need to check for a primary key commands and add the columns\n      // to the table's declaration here so they can be created on the tables.\n      sql += ' (' + columns.sql.join(', ');\n      sql += this.foreignKeys() || '';\n      sql += this.primaryKeys() || '';\n      sql += this._addChecks();\n      sql += ')';\n    }\n    this.pushQuery(sql);\n\n    if (like) {\n      this.addColumns(columns, this.addColumnsPrefix);\n    }\n  }\n\n  addColumns(columns, prefix, colCompilers) {\n    if (prefix === this.alterColumnsPrefix) {\n      const compiler = this;\n\n      const columnsInfo = colCompilers.map((col) => {\n        const name = this.client.customWrapIdentifier(\n          col.getColumnName(),\n          identity,\n          col.columnBuilder.queryContext()\n        );\n\n        const type = col.getColumnType();\n\n        const defaultTo = col.modified['defaultTo']\n          ? formatDefault(col.modified['defaultTo'][0], type, this.client)\n          : null;\n\n        const notNull =\n          col.modified['nullable'] && col.modified['nullable'][0] === false;\n\n        return { name, type, defaultTo, notNull };\n      });\n\n      this.pushQuery({\n        sql: `PRAGMA table_info(${this.tableName()})`,\n        statementsProducer(pragma, connection) {\n          return compiler.client\n            .ddl(compiler, pragma, connection)\n            .alterColumn(columnsInfo);\n        },\n      });\n    } else {\n      for (let i = 0, l = columns.sql.length; i < l; i++) {\n        this.pushQuery({\n          sql: `alter table ${this.tableName()} add column ${columns.sql[i]}`,\n          bindings: columns.bindings[i],\n        });\n      }\n    }\n  }\n\n  // Compile a drop unique key command.\n  dropUnique(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    this.pushQuery(`drop index ${indexName}`);\n  }\n\n  // Compile a drop foreign key command.\n  dropForeign(columns, indexName) {\n    const compiler = this;\n\n    columns = Array.isArray(columns) ? columns : [columns];\n    columns = columns.map((column) =>\n      this.client.customWrapIdentifier(column, identity)\n    );\n    indexName = this.client.customWrapIdentifier(indexName, identity);\n\n    this.pushQuery({\n      sql: `PRAGMA table_info(${this.tableName()})`,\n      output(pragma) {\n        return compiler.client\n          .ddl(compiler, pragma, this.connection)\n          .dropForeign(columns, indexName);\n      },\n    });\n  }\n\n  // Compile a drop primary key command.\n  dropPrimary(constraintName) {\n    const compiler = this;\n\n    constraintName = this.client.customWrapIdentifier(constraintName, identity);\n\n    this.pushQuery({\n      sql: `PRAGMA table_info(${this.tableName()})`,\n      output(pragma) {\n        return compiler.client\n          .ddl(compiler, pragma, this.connection)\n          .dropPrimary(constraintName);\n      },\n    });\n  }\n\n  dropIndex(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    this.pushQuery(`drop index ${indexName}`);\n  }\n\n  // Compile a unique key command.\n  unique(columns, indexName) {\n    let deferrable;\n    if (isObject(indexName)) {\n      ({ indexName, deferrable } = indexName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `sqlite3: unique index \\`${indexName}\\` will not be deferrable ${deferrable} because sqlite3 does not support deferred constraints.`\n      );\n    }\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    columns = this.formatter.columnize(columns);\n    this.pushQuery(\n      `create unique index ${indexName} on ${this.tableName()} (${columns})`\n    );\n  }\n\n  // Compile a plain index key command.\n  index(columns, indexName, options) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    columns = this.formatter.columnize(columns);\n\n    let predicate;\n    if (isObject(options)) {\n      ({ predicate } = options);\n    }\n    const predicateQuery = predicate\n      ? ' ' + this.client.queryCompiler(predicate).where()\n      : '';\n    this.pushQuery(\n      `create index ${indexName} on ${this.tableName()} (${columns})${predicateQuery}`\n    );\n  }\n\n  /**\n   * Add a primary key to an existing table.\n   *\n   * @NOTE The `createQuery` method above handles table creation. Don't do anything regarding table\n   *       creation in this method\n   *\n   * @param {string | string[]} columns - Column name(s) to assign as primary keys\n   * @param {string} [constraintName] - Custom name for the PK constraint\n   */\n  primary(columns, constraintName) {\n    const compiler = this;\n\n    columns = Array.isArray(columns) ? columns : [columns];\n    columns = columns.map((column) =>\n      this.client.customWrapIdentifier(column, identity)\n    );\n\n    let deferrable;\n    if (isObject(constraintName)) {\n      ({ constraintName, deferrable } = constraintName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `sqlite3: primary key constraint \\`${constraintName}\\` will not be deferrable ${deferrable} because sqlite3 does not support deferred constraints.`\n      );\n    }\n    constraintName = this.client.customWrapIdentifier(constraintName, identity);\n\n    if (this.method !== 'create' && this.method !== 'createIfNot') {\n      this.pushQuery({\n        sql: `PRAGMA table_info(${this.tableName()})`,\n        output(pragma) {\n          return compiler.client\n            .ddl(compiler, pragma, this.connection)\n            .primary(columns, constraintName);\n        },\n      });\n    }\n  }\n\n  /**\n   * Add a foreign key constraint to an existing table\n   *\n   * @NOTE The `createQuery` method above handles foreign key constraints on table creation. Don't do\n   *       anything regarding table creation in this method\n   *\n   * @param {object} foreignInfo - Information about the current column foreign setup\n   * @param {string | string[]} [foreignInfo.column] - Column in the current constraint\n   * @param {string | undefined} foreignInfo.keyName - Name of the foreign key constraint\n   * @param {string | string[]} foreignInfo.references - What column it references in the other table\n   * @param {string} foreignInfo.inTable - What table is referenced in this constraint\n   * @param {string} [foreignInfo.onUpdate] - What to do on updates\n   * @param {string} [foreignInfo.onDelete] - What to do on deletions\n   */\n  foreign(foreignInfo) {\n    const compiler = this;\n\n    if (this.method !== 'create' && this.method !== 'createIfNot') {\n      foreignInfo.column = Array.isArray(foreignInfo.column)\n        ? foreignInfo.column\n        : [foreignInfo.column];\n      foreignInfo.column = foreignInfo.column.map((column) =>\n        this.client.customWrapIdentifier(column, identity)\n      );\n      foreignInfo.inTable = this.client.customWrapIdentifier(\n        foreignInfo.inTable,\n        identity\n      );\n      foreignInfo.references = Array.isArray(foreignInfo.references)\n        ? foreignInfo.references\n        : [foreignInfo.references];\n      foreignInfo.references = foreignInfo.references.map((column) =>\n        this.client.customWrapIdentifier(column, identity)\n      );\n\n      this.pushQuery({\n        sql: `PRAGMA table_info(${this.tableName()})`,\n        statementsProducer(pragma, connection) {\n          return compiler.client\n            .ddl(compiler, pragma, connection)\n            .foreign(foreignInfo);\n        },\n      });\n    }\n  }\n\n  primaryKeys() {\n    const pks = filter(this.grouped.alterTable || [], { method: 'primary' });\n    if (pks.length > 0 && pks[0].args.length > 0) {\n      const columns = pks[0].args[0];\n      let constraintName = pks[0].args[1] || '';\n      if (constraintName) {\n        constraintName = ' constraint ' + this.formatter.wrap(constraintName);\n      }\n      const needUniqueCols =\n        this.grouped.columns.filter((t) => t.builder._type === 'increments')\n          .length > 0;\n      // SQLite dont support autoincrement columns and composite primary keys (autoincrement is always primary key).\n      // You need to add unique index instead when you have autoincrement columns (https://stackoverflow.com/a/6154876/1535159)\n      return `,${constraintName} ${\n        needUniqueCols ? 'unique' : 'primary key'\n      } (${this.formatter.columnize(columns)})`;\n    }\n  }\n\n  foreignKeys() {\n    let sql = '';\n    const foreignKeys = filter(this.grouped.alterTable || [], {\n      method: 'foreign',\n    });\n    for (let i = 0, l = foreignKeys.length; i < l; i++) {\n      const foreign = foreignKeys[i].args[0];\n      const column = this.formatter.columnize(foreign.column);\n      const references = this.formatter.columnize(foreign.references);\n      const foreignTable = this.formatter.wrap(foreign.inTable);\n      let constraintName = foreign.keyName || '';\n      if (constraintName) {\n        constraintName = ' constraint ' + this.formatter.wrap(constraintName);\n      }\n      sql += `,${constraintName} foreign key(${column}) references ${foreignTable}(${references})`;\n      if (foreign.onDelete) sql += ` on delete ${foreign.onDelete}`;\n      if (foreign.onUpdate) sql += ` on update ${foreign.onUpdate}`;\n    }\n    return sql;\n  }\n\n  createTableBlock() {\n    return this.getColumns().concat().join(',');\n  }\n\n  renameColumn(from, to) {\n    this.pushQuery({\n      sql: `alter table ${this.tableName()} rename ${this.formatter.wrap(\n        from\n      )} to ${this.formatter.wrap(to)}`,\n    });\n  }\n\n  _setNullableState(column, isNullable) {\n    const compiler = this;\n\n    this.pushQuery({\n      sql: `PRAGMA table_info(${this.tableName()})`,\n      statementsProducer(pragma, connection) {\n        return compiler.client\n          .ddl(compiler, pragma, connection)\n          .setNullable(column, isNullable);\n      },\n    });\n  }\n\n  dropColumn() {\n    const compiler = this;\n    const columns = values(arguments);\n\n    const columnsWrapped = columns.map((column) =>\n      this.client.customWrapIdentifier(column, identity)\n    );\n\n    this.pushQuery({\n      sql: `PRAGMA table_info(${this.tableName()})`,\n      output(pragma) {\n        return compiler.client\n          .ddl(compiler, pragma, this.connection)\n          .dropColumn(columnsWrapped);\n      },\n    });\n  }\n}\n\nmodule.exports = TableCompiler_SQLite3;\n","/* eslint max-len: 0 */\n\nconst ViewCompiler = require('../../../schema/viewcompiler.js');\nconst {\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nclass ViewCompiler_SQLite3 extends ViewCompiler {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n  createOrReplace() {\n    const columns = this.columns;\n    const selectQuery = this.selectQuery.toString();\n    const viewName = this.viewName();\n\n    const columnList = columns\n      ? ' (' +\n        columnize_(\n          columns,\n          this.viewBuilder,\n          this.client,\n          this.bindingsHolder\n        ) +\n        ')'\n      : '';\n\n    const dropSql = `drop view if exists ${viewName}`;\n    const createSql = `create view ${viewName}${columnList} as ${selectQuery}`;\n\n    this.pushQuery({\n      sql: dropSql,\n    });\n    this.pushQuery({\n      sql: createSql,\n    });\n  }\n}\n\nmodule.exports = ViewCompiler_SQLite3;\n","function tokenize(text, tokens) {\n  const compiledRegex = new RegExp(\n    Object.entries(tokens)\n      .map(([type, regex]) => `(?<${type}>${regex.source})`)\n      .join('|'),\n    'yi'\n  );\n\n  let index = 0;\n  const ast = [];\n\n  while (index < text.length) {\n    compiledRegex.lastIndex = index;\n    const result = text.match(compiledRegex);\n\n    if (result !== null) {\n      const [type, text] = Object.entries(result.groups).find(\n        ([name, group]) => group !== undefined\n      );\n\n      index += text.length;\n\n      if (!type.startsWith('_')) {\n        ast.push({ type, text });\n      }\n    } else {\n      throw new Error(\n        `No matching tokenizer rule found at: [${text.substring(index)}]`\n      );\n    }\n  }\n\n  return ast;\n}\n\nmodule.exports = {\n  tokenize,\n};\n","const { tokenize } = require('./tokenizer');\nconst { s, a, m, o, l, n, t, e, f } = require('./parser-combinator');\n\nconst TOKENS = {\n  keyword:\n    /(?:ABORT|ACTION|ADD|AFTER|ALL|ALTER|ALWAYS|ANALYZE|AND|AS|ASC|ATTACH|AUTOINCREMENT|BEFORE|BEGIN|BETWEEN|BY|CASCADE|CASE|CAST|CHECK|COLLATE|COLUMN|COMMIT|CONFLICT|CONSTRAINT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|DATABASE|DEFAULT|DEFERRED|DEFERRABLE|DELETE|DESC|DETACH|DISTINCT|DO|DROP|END|EACH|ELSE|ESCAPE|EXCEPT|EXCLUSIVE|EXCLUDE|EXISTS|EXPLAIN|FAIL|FILTER|FIRST|FOLLOWING|FOR|FOREIGN|FROM|FULL|GENERATED|GLOB|GROUP|GROUPS|HAVING|IF|IGNORE|IMMEDIATE|IN|INDEX|INDEXED|INITIALLY|INNER|INSERT|INSTEAD|INTERSECT|INTO|IS|ISNULL|JOIN|KEY|LAST|LEFT|LIKE|LIMIT|MATCH|MATERIALIZED|NATURAL|NO|NOT|NOTHING|NOTNULL|NULL|NULLS|OF|OFFSET|ON|OR|ORDER|OTHERS|OUTER|OVER|PARTITION|PLAN|PRAGMA|PRECEDING|PRIMARY|QUERY|RAISE|RANGE|RECURSIVE|REFERENCES|REGEXP|REINDEX|RELEASE|RENAME|REPLACE|RESTRICT|RETURNING|RIGHT|ROLLBACK|ROW|ROWS|SAVEPOINT|SELECT|SET|TABLE|TEMP|TEMPORARY|THEN|TIES|TO|TRANSACTION|TRIGGER|UNBOUNDED|UNION|UNIQUE|UPDATE|USING|VACUUM|VALUES|VIEW|VIRTUAL|WHEN|WHERE|WINDOW|WITH|WITHOUT)(?=\\s+|-|\\(|\\)|;|\\+|\\*|\\/|%|==|=|<=|<>|<<|<|>=|>>|>|!=|,|&|~|\\|\\||\\||\\.)/,\n  id: /\"[^\"]*(?:\"\"[^\"]*)*\"|`[^`]*(?:``[^`]*)*`|\\[[^[\\]]*\\]|[a-z_][a-z0-9_$]*/,\n  string: /'[^']*(?:''[^']*)*'/,\n  blob: /x'(?:[0-9a-f][0-9a-f])+'/,\n  numeric: /(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e(?:\\+|-)?\\d+)?|0x[0-9a-f]+/,\n  variable: /\\?\\d*|[@$:][a-z0-9_$]+/,\n  operator: /-|\\(|\\)|;|\\+|\\*|\\/|%|==|=|<=|<>|<<|<|>=|>>|>|!=|,|&|~|\\|\\||\\||\\./,\n  _ws: /\\s+/,\n};\n\nfunction parseCreateTable(sql) {\n  const result = createTable({ input: tokenize(sql, TOKENS) });\n\n  if (!result.success) {\n    throw new Error(\n      `Parsing CREATE TABLE failed at [${result.input\n        .slice(result.index)\n        .map((t) => t.text)\n        .join(' ')}] of \"${sql}\"`\n    );\n  }\n\n  return result.ast;\n}\n\nfunction parseCreateIndex(sql) {\n  const result = createIndex({ input: tokenize(sql, TOKENS) });\n\n  if (!result.success) {\n    throw new Error(\n      `Parsing CREATE INDEX failed at [${result.input\n        .slice(result.index)\n        .map((t) => t.text)\n        .join(' ')}] of \"${sql}\"`\n    );\n  }\n\n  return result.ast;\n}\n\nfunction createTable(ctx) {\n  return s(\n    [\n      t({ text: 'CREATE' }, (v) => null),\n      temporary,\n      t({ text: 'TABLE' }, (v) => null),\n      exists,\n      schema,\n      table,\n      t({ text: '(' }, (v) => null),\n      columnDefinitionList,\n      tableConstraintList,\n      t({ text: ')' }, (v) => null),\n      rowid,\n      f,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction temporary(ctx) {\n  return a([t({ text: 'TEMP' }), t({ text: 'TEMPORARY' }), e], (v) => ({\n    temporary: v !== null,\n  }))(ctx);\n}\n\nfunction rowid(ctx) {\n  return o(s([t({ text: 'WITHOUT' }), t({ text: 'ROWID' })]), (v) => ({\n    rowid: v !== null,\n  }))(ctx);\n}\n\nfunction columnDefinitionList(ctx) {\n  return a([\n    s([columnDefinition, t({ text: ',' }), columnDefinitionList], (v) => ({\n      columns: [v[0]].concat(v[2].columns),\n    })),\n    s([columnDefinition], (v) => ({ columns: [v[0]] })),\n  ])(ctx);\n}\n\nfunction columnDefinition(ctx) {\n  return s(\n    [s([identifier], (v) => ({ name: v[0] })), typeName, columnConstraintList],\n    (v) => Object.assign({}, ...v)\n  )(ctx);\n}\n\nfunction typeName(ctx) {\n  return o(\n    s(\n      [\n        m(t({ type: 'id' })),\n        a([\n          s(\n            [\n              t({ text: '(' }),\n              signedNumber,\n              t({ text: ',' }),\n              signedNumber,\n              t({ text: ')' }),\n            ],\n            (v) => `(${v[1]}, ${v[3]})`\n          ),\n          s(\n            [t({ text: '(' }), signedNumber, t({ text: ')' })],\n            (v) => `(${v[1]})`\n          ),\n          e,\n        ]),\n      ],\n      (v) => `${v[0].join(' ')}${v[1] || ''}`\n    ),\n    (v) => ({ type: v })\n  )(ctx);\n}\n\nfunction columnConstraintList(ctx) {\n  return o(m(columnConstraint), (v) => ({\n    constraints: Object.assign(\n      {\n        primary: null,\n        notnull: null,\n        null: null,\n        unique: null,\n        check: null,\n        default: null,\n        collate: null,\n        references: null,\n        as: null,\n      },\n      ...(v || [])\n    ),\n  }))(ctx);\n}\n\nfunction columnConstraint(ctx) {\n  return a([\n    primaryColumnConstraint,\n    notnullColumnConstraint,\n    nullColumnConstraint,\n    uniqueColumnConstraint,\n    checkColumnConstraint,\n    defaultColumnConstraint,\n    collateColumnConstraint,\n    referencesColumnConstraint,\n    asColumnConstraint,\n  ])(ctx);\n}\n\nfunction primaryColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'PRIMARY' }, (v) => null),\n      t({ text: 'KEY' }, (v) => null),\n      order,\n      conflictClause,\n      autoincrement,\n    ],\n    (v) => ({ primary: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction autoincrement(ctx) {\n  return o(t({ text: 'AUTOINCREMENT' }), (v) => ({\n    autoincrement: v !== null,\n  }))(ctx);\n}\n\nfunction notnullColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'NOT' }, (v) => null),\n      t({ text: 'NULL' }, (v) => null),\n      conflictClause,\n    ],\n    (v) => ({ notnull: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction nullColumnConstraint(ctx) {\n  return s(\n    [constraintName, t({ text: 'NULL' }, (v) => null), conflictClause],\n    (v) => ({ null: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction uniqueColumnConstraint(ctx) {\n  return s(\n    [constraintName, t({ text: 'UNIQUE' }, (v) => null), conflictClause],\n    (v) => ({ unique: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction checkColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'CHECK' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      s([expression], (v) => ({ expression: v[0] })),\n      t({ text: ')' }, (v) => null),\n    ],\n    (v) => ({ check: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction defaultColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'DEFAULT' }, (v) => null),\n      a([\n        s([t({ text: '(' }), expression, t({ text: ')' })], (v) => ({\n          value: v[1],\n          expression: true,\n        })),\n        s([literalValue], (v) => ({ value: v[0], expression: false })),\n        s([signedNumber], (v) => ({ value: v[0], expression: false })),\n      ]),\n    ],\n    (v) => ({ default: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction collateColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'COLLATE' }, (v) => null),\n      t({ type: 'id' }, (v) => ({ collation: v.text })),\n    ],\n    (v) => ({ collate: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction referencesColumnConstraint(ctx) {\n  return s(\n    [constraintName, s([foreignKeyClause], (v) => v[0].references)],\n    (v) => ({\n      references: Object.assign({}, ...v.filter((x) => x !== null)),\n    })\n  )(ctx);\n}\n\nfunction asColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      o(s([t({ text: 'GENERATED' }), t({ text: 'ALWAYS' })]), (v) => ({\n        generated: v !== null,\n      })),\n      t({ text: 'AS' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      s([expression], (v) => ({ expression: v[0] })),\n      t({ text: ')' }, (v) => null),\n      a([t({ text: 'STORED' }), t({ text: 'VIRTUAL' }), e], (v) => ({\n        mode: v ? v.toUpperCase() : null,\n      })),\n    ],\n    (v) => ({ as: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction tableConstraintList(ctx) {\n  return o(m(s([t({ text: ',' }), tableConstraint], (v) => v[1])), (v) => ({\n    constraints: v || [],\n  }))(ctx);\n}\n\nfunction tableConstraint(ctx) {\n  return a([\n    primaryTableConstraint,\n    uniqueTableConstraint,\n    checkTableConstraint,\n    foreignTableConstraint,\n  ])(ctx);\n}\n\nfunction primaryTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'PRIMARY' }, (v) => null),\n      t({ text: 'KEY' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      indexedColumnList,\n      t({ text: ')' }, (v) => null),\n      conflictClause,\n    ],\n    (v) =>\n      Object.assign({ type: 'PRIMARY KEY' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction uniqueTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'UNIQUE' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      indexedColumnList,\n      t({ text: ')' }, (v) => null),\n      conflictClause,\n    ],\n    (v) => Object.assign({ type: 'UNIQUE' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction conflictClause(ctx) {\n  return o(\n    s(\n      [\n        t({ text: 'ON' }),\n        t({ text: 'CONFLICT' }),\n        a([\n          t({ text: 'ROLLBACK' }),\n          t({ text: 'ABORT' }),\n          t({ text: 'FAIL' }),\n          t({ text: 'IGNORE' }),\n          t({ text: 'REPLACE' }),\n        ]),\n      ],\n      (v) => v[2]\n    ),\n    (v) => ({ conflict: v ? v.toUpperCase() : null })\n  )(ctx);\n}\n\nfunction checkTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'CHECK' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      s([expression], (v) => ({ expression: v[0] })),\n      t({ text: ')' }, (v) => null),\n    ],\n    (v) => Object.assign({ type: 'CHECK' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction foreignTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'FOREIGN' }, (v) => null),\n      t({ text: 'KEY' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      columnNameList,\n      t({ text: ')' }, (v) => null),\n      foreignKeyClause,\n    ],\n    (v) =>\n      Object.assign({ type: 'FOREIGN KEY' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction foreignKeyClause(ctx) {\n  return s(\n    [\n      t({ text: 'REFERENCES' }, (v) => null),\n      table,\n      columnNameListOptional,\n      o(m(a([deleteReference, updateReference, matchReference])), (v) =>\n        Object.assign({ delete: null, update: null, match: null }, ...(v || []))\n      ),\n      deferrable,\n    ],\n    (v) => ({ references: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction columnNameListOptional(ctx) {\n  return o(\n    s([t({ text: '(' }), columnNameList, t({ text: ')' })], (v) => v[1]),\n    (v) => ({ columns: v ? v.columns : [] })\n  )(ctx);\n}\n\nfunction columnNameList(ctx) {\n  return s(\n    [\n      o(m(s([identifier, t({ text: ',' })], (v) => v[0])), (v) =>\n        v !== null ? v : []\n      ),\n      identifier,\n    ],\n    (v) => ({ columns: v[0].concat([v[1]]) })\n  )(ctx);\n}\n\nfunction deleteReference(ctx) {\n  return s([t({ text: 'ON' }), t({ text: 'DELETE' }), onAction], (v) => ({\n    delete: v[2],\n  }))(ctx);\n}\n\nfunction updateReference(ctx) {\n  return s([t({ text: 'ON' }), t({ text: 'UPDATE' }), onAction], (v) => ({\n    update: v[2],\n  }))(ctx);\n}\n\nfunction matchReference(ctx) {\n  return s(\n    [t({ text: 'MATCH' }), a([t({ type: 'keyword' }), t({ type: 'id' })])],\n    (v) => ({ match: v[1] })\n  )(ctx);\n}\n\nfunction deferrable(ctx) {\n  return o(\n    s([\n      o(t({ text: 'NOT' })),\n      t({ text: 'DEFERRABLE' }),\n      o(\n        s(\n          [\n            t({ text: 'INITIALLY' }),\n            a([t({ text: 'DEFERRED' }), t({ text: 'IMMEDIATE' })]),\n          ],\n          (v) => v[1].toUpperCase()\n        )\n      ),\n    ]),\n    (v) => ({ deferrable: v ? { not: v[0] !== null, initially: v[2] } : null })\n  )(ctx);\n}\n\nfunction constraintName(ctx) {\n  return o(\n    s([t({ text: 'CONSTRAINT' }), identifier], (v) => v[1]),\n    (v) => ({ name: v })\n  )(ctx);\n}\n\nfunction createIndex(ctx) {\n  return s(\n    [\n      t({ text: 'CREATE' }, (v) => null),\n      unique,\n      t({ text: 'INDEX' }, (v) => null),\n      exists,\n      schema,\n      index,\n      t({ text: 'ON' }, (v) => null),\n      table,\n      t({ text: '(' }, (v) => null),\n      indexedColumnList,\n      t({ text: ')' }, (v) => null),\n      where,\n      f,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction unique(ctx) {\n  return o(t({ text: 'UNIQUE' }), (v) => ({ unique: v !== null }))(ctx);\n}\n\nfunction exists(ctx) {\n  return o(\n    s([t({ text: 'IF' }), t({ text: 'NOT' }), t({ text: 'EXISTS' })]),\n    (v) => ({ exists: v !== null })\n  )(ctx);\n}\n\nfunction schema(ctx) {\n  return o(\n    s([identifier, t({ text: '.' })], (v) => v[0]),\n    (v) => ({ schema: v })\n  )(ctx);\n}\n\nfunction index(ctx) {\n  return s([identifier], (v) => ({ index: v[0] }))(ctx);\n}\n\nfunction table(ctx) {\n  return s([identifier], (v) => ({ table: v[0] }))(ctx);\n}\n\nfunction where(ctx) {\n  return o(\n    s([t({ text: 'WHERE' }), expression], (v) => v[1]),\n    (v) => ({ where: v })\n  )(ctx);\n}\n\nfunction indexedColumnList(ctx) {\n  return a([\n    s([indexedColumn, t({ text: ',' }), indexedColumnList], (v) => ({\n      columns: [v[0]].concat(v[2].columns),\n    })),\n    s([indexedColumnExpression, t({ text: ',' }), indexedColumnList], (v) => ({\n      columns: [v[0]].concat(v[2].columns),\n    })),\n    l({ do: indexedColumn, next: t({ text: ')' }) }, (v) => ({\n      columns: [v],\n    })),\n    l({ do: indexedColumnExpression, next: t({ text: ')' }) }, (v) => ({\n      columns: [v],\n    })),\n  ])(ctx);\n}\n\nfunction indexedColumn(ctx) {\n  return s(\n    [\n      s([identifier], (v) => ({ name: v[0], expression: false })),\n      collation,\n      order,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction indexedColumnExpression(ctx) {\n  return s(\n    [\n      s([indexedExpression], (v) => ({ name: v[0], expression: true })),\n      collation,\n      order,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction collation(ctx) {\n  return o(\n    s([t({ text: 'COLLATE' }), t({ type: 'id' })], (v) => v[1]),\n    (v) => ({ collation: v })\n  )(ctx);\n}\n\nfunction order(ctx) {\n  return a([t({ text: 'ASC' }), t({ text: 'DESC' }), e], (v) => ({\n    order: v ? v.toUpperCase() : null,\n  }))(ctx);\n}\n\nfunction indexedExpression(ctx) {\n  return m(\n    a([\n      n({\n        do: t({ type: 'keyword' }),\n        not: a([\n          t({ text: 'COLLATE' }),\n          t({ text: 'ASC' }),\n          t({ text: 'DESC' }),\n        ]),\n      }),\n      t({ type: 'id' }),\n      t({ type: 'string' }),\n      t({ type: 'blob' }),\n      t({ type: 'numeric' }),\n      t({ type: 'variable' }),\n      n({\n        do: t({ type: 'operator' }),\n        not: a([t({ text: '(' }), t({ text: ')' }), t({ text: ',' })]),\n      }),\n      s([t({ text: '(' }), o(expression), t({ text: ')' })], (v) => v[1] || []),\n    ])\n  )(ctx);\n}\n\nfunction expression(ctx) {\n  return m(\n    a([\n      t({ type: 'keyword' }),\n      t({ type: 'id' }),\n      t({ type: 'string' }),\n      t({ type: 'blob' }),\n      t({ type: 'numeric' }),\n      t({ type: 'variable' }),\n      n({\n        do: t({ type: 'operator' }),\n        not: a([t({ text: '(' }), t({ text: ')' })]),\n      }),\n      s([t({ text: '(' }), o(expression), t({ text: ')' })], (v) => v[1] || []),\n    ])\n  )(ctx);\n}\n\nfunction identifier(ctx) {\n  return a([t({ type: 'id' }), t({ type: 'string' })], (v) =>\n    /^[\"`['][^]*[\"`\\]']$/.test(v) ? v.substring(1, v.length - 1) : v\n  )(ctx);\n}\n\nfunction onAction(ctx) {\n  return a(\n    [\n      s([t({ text: 'SET' }), t({ text: 'NULL' })], (v) => `${v[0]} ${v[1]}`),\n      s([t({ text: 'SET' }), t({ text: 'DEFAULT' })], (v) => `${v[0]} ${v[1]}`),\n      t({ text: 'CASCADE' }),\n      t({ text: 'RESTRICT' }),\n      s([t({ text: 'NO' }), t({ text: 'ACTION' })], (v) => `${v[0]} ${v[1]}`),\n    ],\n    (v) => v.toUpperCase()\n  )(ctx);\n}\n\nfunction literalValue(ctx) {\n  return a([\n    t({ type: 'numeric' }),\n    t({ type: 'string' }),\n    t({ type: 'id' }),\n    t({ type: 'blob' }),\n    t({ text: 'NULL' }),\n    t({ text: 'TRUE' }),\n    t({ text: 'FALSE' }),\n    t({ text: 'CURRENT_TIME' }),\n    t({ text: 'CURRENT_DATE' }),\n    t({ text: 'CURRENT_TIMESTAMP' }),\n  ])(ctx);\n}\n\nfunction signedNumber(ctx) {\n  return s(\n    [a([t({ text: '+' }), t({ text: '-' }), e]), t({ type: 'numeric' })],\n    (v) => `${v[0] || ''}${v[1]}`\n  )(ctx);\n}\n\nmodule.exports = {\n  parseCreateTable,\n  parseCreateIndex,\n};\n","// Sequence parser combinator\nfunction s(sequence, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    let position = index;\n    const ast = [];\n\n    for (const parser of sequence) {\n      const result = parser({ index: position, input });\n\n      if (result.success) {\n        position = result.index;\n        ast.push(result.ast);\n      } else {\n        return result;\n      }\n    }\n\n    return { success: true, ast: post(ast), index: position, input };\n  };\n}\n\n// Alternative parser combinator\nfunction a(alternative, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    for (const parser of alternative) {\n      const result = parser({ index, input });\n\n      if (result.success) {\n        return {\n          success: true,\n          ast: post(result.ast),\n          index: result.index,\n          input,\n        };\n      }\n    }\n\n    return { success: false, ast: null, index, input };\n  };\n}\n\n// Many parser combinator\nfunction m(many, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    let result = {};\n    let position = index;\n    const ast = [];\n\n    do {\n      result = many({ index: position, input });\n\n      if (result.success) {\n        position = result.index;\n        ast.push(result.ast);\n      }\n    } while (result.success);\n\n    if (ast.length > 0) {\n      return { success: true, ast: post(ast), index: position, input };\n    } else {\n      return { success: false, ast: null, index: position, input };\n    }\n  };\n}\n\n// Optional parser combinator\nfunction o(optional, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    const result = optional({ index, input });\n\n    if (result.success) {\n      return {\n        success: true,\n        ast: post(result.ast),\n        index: result.index,\n        input,\n      };\n    } else {\n      return { success: true, ast: post(null), index, input };\n    }\n  };\n}\n\n// Lookahead parser combinator\nfunction l(lookahead, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    const result = lookahead.do({ index, input });\n\n    if (result.success) {\n      const resultNext = lookahead.next({ index: result.index, input });\n\n      if (resultNext.success) {\n        return {\n          success: true,\n          ast: post(result.ast),\n          index: result.index,\n          input,\n        };\n      }\n    }\n\n    return { success: false, ast: null, index, input };\n  };\n}\n\n// Negative parser combinator\nfunction n(negative, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    const result = negative.do({ index, input });\n\n    if (result.success) {\n      const resultNot = negative.not({ index, input });\n\n      if (!resultNot.success) {\n        return {\n          success: true,\n          ast: post(result.ast),\n          index: result.index,\n          input,\n        };\n      }\n    }\n\n    return { success: false, ast: null, index, input };\n  };\n}\n\n// Token parser combinator\nfunction t(token, post = (v) => v.text) {\n  return function ({ index = 0, input }) {\n    const result = input[index];\n\n    if (\n      result !== undefined &&\n      (token.type === undefined || token.type === result.type) &&\n      (token.text === undefined ||\n        token.text.toUpperCase() === result.text.toUpperCase())\n    ) {\n      return {\n        success: true,\n        ast: post(result),\n        index: index + 1,\n        input,\n      };\n    } else {\n      return { success: false, ast: null, index, input };\n    }\n  };\n}\n\n// Empty parser constant\nconst e = function ({ index = 0, input }) {\n  return { success: true, ast: null, index, input };\n};\n\n// Finish parser constant\nconst f = function ({ index = 0, input }) {\n  return { success: index === input.length, ast: null, index, input };\n};\n\nmodule.exports = { s, a, m, o, l, n, t, e, f };\n","function compileCreateTable(ast, wrap = (v) => v) {\n  return createTable(ast, wrap);\n}\n\nfunction compileCreateIndex(ast, wrap = (v) => v) {\n  return createIndex(ast, wrap);\n}\n\nfunction createTable(ast, wrap) {\n  return `CREATE${temporary(ast, wrap)} TABLE${exists(ast, wrap)} ${schema(\n    ast,\n    wrap\n  )}${table(ast, wrap)} (${columnDefinitionList(\n    ast,\n    wrap\n  )}${tableConstraintList(ast, wrap)})${rowid(ast, wrap)}`;\n}\n\nfunction temporary(ast, wrap) {\n  return ast.temporary ? ' TEMP' : '';\n}\n\nfunction rowid(ast, wrap) {\n  return ast.rowid ? ' WITHOUT ROWID' : '';\n}\n\nfunction columnDefinitionList(ast, wrap) {\n  return ast.columns.map((column) => columnDefinition(column, wrap)).join(', ');\n}\n\nfunction columnDefinition(ast, wrap) {\n  return `${identifier(ast.name, wrap)}${typeName(\n    ast,\n    wrap\n  )}${columnConstraintList(ast.constraints, wrap)}`;\n}\n\nfunction typeName(ast, wrap) {\n  return ast.type !== null ? ` ${ast.type}` : '';\n}\n\nfunction columnConstraintList(ast, wrap) {\n  return `${primaryColumnConstraint(ast, wrap)}${notnullColumnConstraint(\n    ast,\n    wrap\n  )}${nullColumnConstraint(ast, wrap)}${uniqueColumnConstraint(\n    ast,\n    wrap\n  )}${checkColumnConstraint(ast, wrap)}${defaultColumnConstraint(\n    ast,\n    wrap\n  )}${collateColumnConstraint(ast, wrap)}${referencesColumnConstraint(\n    ast,\n    wrap\n  )}${asColumnConstraint(ast, wrap)}`;\n}\n\nfunction primaryColumnConstraint(ast, wrap) {\n  return ast.primary !== null\n    ? ` ${constraintName(ast.primary, wrap)}PRIMARY KEY${order(\n        ast.primary,\n        wrap\n      )}${conflictClause(ast.primary, wrap)}${autoincrement(ast.primary, wrap)}`\n    : '';\n}\n\nfunction autoincrement(ast, wrap) {\n  return ast.autoincrement ? ' AUTOINCREMENT' : '';\n}\n\nfunction notnullColumnConstraint(ast, wrap) {\n  return ast.notnull !== null\n    ? ` ${constraintName(ast.notnull, wrap)}NOT NULL${conflictClause(\n        ast.notnull,\n        wrap\n      )}`\n    : '';\n}\n\nfunction nullColumnConstraint(ast, wrap) {\n  return ast.null !== null\n    ? ` ${constraintName(ast.null, wrap)}NULL${conflictClause(ast.null, wrap)}`\n    : '';\n}\n\nfunction uniqueColumnConstraint(ast, wrap) {\n  return ast.unique !== null\n    ? ` ${constraintName(ast.unique, wrap)}UNIQUE${conflictClause(\n        ast.unique,\n        wrap\n      )}`\n    : '';\n}\n\nfunction checkColumnConstraint(ast, wrap) {\n  return ast.check !== null\n    ? ` ${constraintName(ast.check, wrap)}CHECK (${expression(\n        ast.check.expression,\n        wrap\n      )})`\n    : '';\n}\n\nfunction defaultColumnConstraint(ast, wrap) {\n  return ast.default !== null\n    ? ` ${constraintName(ast.default, wrap)}DEFAULT ${\n        !ast.default.expression\n          ? ast.default.value\n          : `(${expression(ast.default.value, wrap)})`\n      }`\n    : '';\n}\n\nfunction collateColumnConstraint(ast, wrap) {\n  return ast.collate !== null\n    ? ` ${constraintName(ast.collate, wrap)}COLLATE ${ast.collate.collation}`\n    : '';\n}\n\nfunction referencesColumnConstraint(ast, wrap) {\n  return ast.references !== null\n    ? ` ${constraintName(ast.references, wrap)}${foreignKeyClause(\n        ast.references,\n        wrap\n      )}`\n    : '';\n}\n\nfunction asColumnConstraint(ast, wrap) {\n  return ast.as !== null\n    ? ` ${constraintName(ast.as, wrap)}${\n        ast.as.generated ? 'GENERATED ALWAYS ' : ''\n      }AS (${expression(ast.as.expression, wrap)})${\n        ast.as.mode !== null ? ` ${ast.as.mode}` : ''\n      }`\n    : '';\n}\n\nfunction tableConstraintList(ast, wrap) {\n  return ast.constraints.reduce(\n    (constraintList, constraint) =>\n      `${constraintList}, ${tableConstraint(constraint, wrap)}`,\n    ''\n  );\n}\n\nfunction tableConstraint(ast, wrap) {\n  switch (ast.type) {\n    case 'PRIMARY KEY':\n      return primaryTableConstraint(ast, wrap);\n    case 'UNIQUE':\n      return uniqueTableConstraint(ast, wrap);\n    case 'CHECK':\n      return checkTableConstraint(ast, wrap);\n    case 'FOREIGN KEY':\n      return foreignTableConstraint(ast, wrap);\n  }\n}\n\nfunction primaryTableConstraint(ast, wrap) {\n  return `${constraintName(ast, wrap)}PRIMARY KEY (${indexedColumnList(\n    ast,\n    wrap\n  )})${conflictClause(ast, wrap)}`;\n}\n\nfunction uniqueTableConstraint(ast, wrap) {\n  return `${constraintName(ast, wrap)}UNIQUE (${indexedColumnList(\n    ast,\n    wrap\n  )})${conflictClause(ast, wrap)}`;\n}\n\nfunction conflictClause(ast, wrap) {\n  return ast.conflict !== null ? ` ON CONFLICT ${ast.conflict}` : '';\n}\n\nfunction checkTableConstraint(ast, wrap) {\n  return `${constraintName(ast, wrap)}CHECK (${expression(\n    ast.expression,\n    wrap\n  )})`;\n}\n\nfunction foreignTableConstraint(ast, wrap) {\n  return `${constraintName(ast, wrap)}FOREIGN KEY (${columnNameList(\n    ast,\n    wrap\n  )}) ${foreignKeyClause(ast.references, wrap)}`;\n}\n\nfunction foreignKeyClause(ast, wrap) {\n  return `REFERENCES ${table(ast, wrap)}${columnNameListOptional(\n    ast,\n    wrap\n  )}${deleteUpdateMatchList(ast, wrap)}${deferrable(ast.deferrable, wrap)}`;\n}\n\nfunction columnNameListOptional(ast, wrap) {\n  return ast.columns.length > 0 ? ` (${columnNameList(ast, wrap)})` : '';\n}\n\nfunction columnNameList(ast, wrap) {\n  return ast.columns.map((column) => identifier(column, wrap)).join(', ');\n}\n\nfunction deleteUpdateMatchList(ast, wrap) {\n  return `${deleteReference(ast, wrap)}${updateReference(\n    ast,\n    wrap\n  )}${matchReference(ast, wrap)}`;\n}\n\nfunction deleteReference(ast, wrap) {\n  return ast.delete !== null ? ` ON DELETE ${ast.delete}` : '';\n}\n\nfunction updateReference(ast, wrap) {\n  return ast.update !== null ? ` ON UPDATE ${ast.update}` : '';\n}\n\nfunction matchReference(ast, wrap) {\n  return ast.match !== null ? ` MATCH ${ast.match}` : '';\n}\n\nfunction deferrable(ast, wrap) {\n  return ast !== null\n    ? ` ${ast.not ? 'NOT ' : ''}DEFERRABLE${\n        ast.initially !== null ? ` INITIALLY ${ast.initially}` : ''\n      }`\n    : '';\n}\n\nfunction constraintName(ast, wrap) {\n  return ast.name !== null ? `CONSTRAINT ${identifier(ast.name, wrap)} ` : '';\n}\n\nfunction createIndex(ast, wrap) {\n  return `CREATE${unique(ast, wrap)} INDEX${exists(ast, wrap)} ${schema(\n    ast,\n    wrap\n  )}${index(ast, wrap)} on ${table(ast, wrap)} (${indexedColumnList(\n    ast,\n    wrap\n  )})${where(ast, wrap)}`;\n}\n\nfunction unique(ast, wrap) {\n  return ast.unique ? ' UNIQUE' : '';\n}\n\nfunction exists(ast, wrap) {\n  return ast.exists ? ' IF NOT EXISTS' : '';\n}\n\nfunction schema(ast, wrap) {\n  return ast.schema !== null ? `${identifier(ast.schema, wrap)}.` : '';\n}\n\nfunction index(ast, wrap) {\n  return identifier(ast.index, wrap);\n}\n\nfunction table(ast, wrap) {\n  return identifier(ast.table, wrap);\n}\n\nfunction where(ast, wrap) {\n  return ast.where !== null ? ` where ${expression(ast.where)}` : '';\n}\n\nfunction indexedColumnList(ast, wrap) {\n  return ast.columns\n    .map((column) =>\n      !column.expression\n        ? indexedColumn(column, wrap)\n        : indexedColumnExpression(column, wrap)\n    )\n    .join(', ');\n}\n\nfunction indexedColumn(ast, wrap) {\n  return `${identifier(ast.name, wrap)}${collation(ast, wrap)}${order(\n    ast,\n    wrap\n  )}`;\n}\n\nfunction indexedColumnExpression(ast, wrap) {\n  return `${indexedExpression(ast.name, wrap)}${collation(ast, wrap)}${order(\n    ast,\n    wrap\n  )}`;\n}\n\nfunction collation(ast, wrap) {\n  return ast.collation !== null ? ` COLLATE ${ast.collation}` : '';\n}\n\nfunction order(ast, wrap) {\n  return ast.order !== null ? ` ${ast.order}` : '';\n}\n\nfunction indexedExpression(ast, wrap) {\n  return expression(ast, wrap);\n}\n\nfunction expression(ast, wrap) {\n  return ast.reduce(\n    (expr, e) =>\n      Array.isArray(e)\n        ? `${expr}(${expression(e)})`\n        : !expr\n        ? e\n        : `${expr} ${e}`,\n    ''\n  );\n}\n\nfunction identifier(ast, wrap) {\n  return wrap(ast);\n}\n\nmodule.exports = {\n  compileCreateTable,\n  compileCreateIndex,\n};\n","function isEqualId(first, second) {\n  return first.toLowerCase() === second.toLowerCase();\n}\n\nfunction includesId(list, id) {\n  return list.some((item) => isEqualId(item, id));\n}\n\nmodule.exports = {\n  isEqualId,\n  includesId,\n};\n","// SQLite3_DDL\n//\n// All of the SQLite3 specific DDL helpers for renaming/dropping\n// columns and changing datatypes.\n// -------\n\nconst identity = require('lodash/identity');\nconst { nanonum } = require('../../../util/nanoid');\nconst {\n  copyData,\n  dropOriginal,\n  renameTable,\n  getTableSql,\n  isForeignCheckEnabled,\n  setForeignCheck,\n  executeForeignCheck,\n} = require('./internal/sqlite-ddl-operations');\nconst { parseCreateTable, parseCreateIndex } = require('./internal/parser');\nconst {\n  compileCreateTable,\n  compileCreateIndex,\n} = require('./internal/compiler');\nconst { isEqualId, includesId } = require('./internal/utils');\n\n// So altering the schema in SQLite3 is a major pain.\n// We have our own object to deal with the renaming and altering the types\n// for sqlite3 things.\nclass SQLite3_DDL {\n  constructor(client, tableCompiler, pragma, connection) {\n    this.client = client;\n    this.tableCompiler = tableCompiler;\n    this.pragma = pragma;\n    this.tableNameRaw = this.tableCompiler.tableNameRaw;\n    this.alteredName = `_knex_temp_alter${nanonum(3)}`;\n    this.connection = connection;\n    this.formatter = (value) =>\n      this.client.customWrapIdentifier(value, identity);\n    this.wrap = (value) => this.client.wrapIdentifierImpl(value);\n  }\n\n  tableName() {\n    return this.formatter(this.tableNameRaw);\n  }\n\n  getTableSql() {\n    const tableName = this.tableName();\n\n    return this.client.transaction(\n      async (trx) => {\n        trx.disableProcessing();\n        const result = await trx.raw(getTableSql(tableName));\n        trx.enableProcessing();\n\n        return {\n          createTable: result.filter((create) => create.type === 'table')[0]\n            .sql,\n          createIndices: result\n            .filter((create) => create.type === 'index')\n            .map((create) => create.sql),\n        };\n      },\n      { connection: this.connection }\n    );\n  }\n\n  async isForeignCheckEnabled() {\n    const result = await this.client\n      .raw(isForeignCheckEnabled())\n      .connection(this.connection);\n\n    return result[0].foreign_keys === 1;\n  }\n\n  async setForeignCheck(enable) {\n    await this.client.raw(setForeignCheck(enable)).connection(this.connection);\n  }\n\n  renameTable(trx) {\n    return trx.raw(renameTable(this.alteredName, this.tableName()));\n  }\n\n  dropOriginal(trx) {\n    return trx.raw(dropOriginal(this.tableName()));\n  }\n\n  copyData(trx, columns) {\n    return trx.raw(copyData(this.tableName(), this.alteredName, columns));\n  }\n\n  async alterColumn(columns) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    parsedTable.columns = parsedTable.columns.map((column) => {\n      const newColumnInfo = columns.find((c) => isEqualId(c.name, column.name));\n\n      if (newColumnInfo) {\n        column.type = newColumnInfo.type;\n\n        column.constraints.default =\n          newColumnInfo.defaultTo !== null\n            ? {\n                name: null,\n                value: newColumnInfo.defaultTo,\n                expression: false,\n              }\n            : null;\n\n        column.constraints.notnull = newColumnInfo.notNull\n          ? { name: null, conflict: null }\n          : null;\n\n        column.constraints.null = newColumnInfo.notNull\n          ? null\n          : column.constraints.null;\n      }\n\n      return column;\n    });\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.generateAlterCommands(newTable, createIndices);\n  }\n\n  async dropColumn(columns) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    parsedTable.columns = parsedTable.columns.filter(\n      (parsedColumn) =>\n        parsedColumn.expression || !includesId(columns, parsedColumn.name)\n    );\n\n    if (parsedTable.columns.length === 0) {\n      throw new Error('Unable to drop last column from table');\n    }\n\n    parsedTable.constraints = parsedTable.constraints.filter((constraint) => {\n      if (constraint.type === 'PRIMARY KEY' || constraint.type === 'UNIQUE') {\n        return constraint.columns.every(\n          (constraintColumn) =>\n            constraintColumn.expression ||\n            !includesId(columns, constraintColumn.name)\n        );\n      } else if (constraint.type === 'FOREIGN KEY') {\n        return (\n          constraint.columns.every(\n            (constraintColumnName) => !includesId(columns, constraintColumnName)\n          ) &&\n          (constraint.references.table !== parsedTable.table ||\n            constraint.references.columns.every(\n              (referenceColumnName) => !includesId(columns, referenceColumnName)\n            ))\n        );\n      } else {\n        return true;\n      }\n    });\n\n    const newColumns = parsedTable.columns.map((column) => column.name);\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    const newIndices = [];\n    for (const createIndex of createIndices) {\n      const parsedIndex = parseCreateIndex(createIndex);\n\n      parsedIndex.columns = parsedIndex.columns.filter(\n        (parsedColumn) =>\n          parsedColumn.expression || !includesId(columns, parsedColumn.name)\n      );\n\n      if (parsedIndex.columns.length > 0) {\n        newIndices.push(compileCreateIndex(parsedIndex, this.wrap));\n      }\n    }\n\n    return this.alter(newTable, newIndices, newColumns);\n  }\n\n  async dropForeign(columns, foreignKeyName) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    if (!foreignKeyName) {\n      parsedTable.columns = parsedTable.columns.map((column) => ({\n        ...column,\n        references: includesId(columns, column.name) ? null : column.references,\n      }));\n    }\n\n    parsedTable.constraints = parsedTable.constraints.filter((constraint) => {\n      if (constraint.type === 'FOREIGN KEY') {\n        if (foreignKeyName) {\n          return (\n            !constraint.name || !isEqualId(constraint.name, foreignKeyName)\n          );\n        }\n\n        return constraint.columns.every(\n          (constraintColumnName) => !includesId(columns, constraintColumnName)\n        );\n      } else {\n        return true;\n      }\n    });\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.alter(newTable, createIndices);\n  }\n\n  async dropPrimary(constraintName) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    parsedTable.columns = parsedTable.columns.map((column) => ({\n      ...column,\n      primary: null,\n    }));\n\n    parsedTable.constraints = parsedTable.constraints.filter((constraint) => {\n      if (constraint.type === 'PRIMARY KEY') {\n        if (constraintName) {\n          return (\n            !constraint.name || !isEqualId(constraint.name, constraintName)\n          );\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    });\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.alter(newTable, createIndices);\n  }\n\n  async primary(columns, constraintName) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    parsedTable.columns = parsedTable.columns.map((column) => ({\n      ...column,\n      primary: null,\n    }));\n\n    parsedTable.constraints = parsedTable.constraints.filter(\n      (constraint) => constraint.type !== 'PRIMARY KEY'\n    );\n\n    parsedTable.constraints.push({\n      type: 'PRIMARY KEY',\n      name: constraintName || null,\n      columns: columns.map((column) => ({\n        name: column,\n        expression: false,\n        collation: null,\n        order: null,\n      })),\n      conflict: null,\n    });\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.alter(newTable, createIndices);\n  }\n\n  async foreign(foreignInfo) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    parsedTable.constraints.push({\n      type: 'FOREIGN KEY',\n      name: foreignInfo.keyName || null,\n      columns: foreignInfo.column,\n      references: {\n        table: foreignInfo.inTable,\n        columns: foreignInfo.references,\n        delete: foreignInfo.onDelete || null,\n        update: foreignInfo.onUpdate || null,\n        match: null,\n        deferrable: null,\n      },\n    });\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.generateAlterCommands(newTable, createIndices);\n  }\n\n  async setNullable(column, isNullable) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    const parsedColumn = parsedTable.columns.find((c) =>\n      isEqualId(column, c.name)\n    );\n\n    if (!parsedColumn) {\n      throw new Error(\n        `.setNullable: Column ${column} does not exist in table ${this.tableName()}.`\n      );\n    }\n\n    parsedColumn.constraints.notnull = isNullable\n      ? null\n      : { name: null, conflict: null };\n\n    parsedColumn.constraints.null = isNullable\n      ? parsedColumn.constraints.null\n      : null;\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.generateAlterCommands(newTable, createIndices);\n  }\n\n  async alter(newSql, createIndices, columns) {\n    const wasForeignCheckEnabled = await this.isForeignCheckEnabled();\n\n    if (wasForeignCheckEnabled) {\n      await this.setForeignCheck(false);\n    }\n\n    try {\n      await this.client.transaction(\n        async (trx) => {\n          await trx.raw(newSql);\n          await this.copyData(trx, columns);\n          await this.dropOriginal(trx);\n          await this.renameTable(trx);\n\n          for (const createIndex of createIndices) {\n            await trx.raw(createIndex);\n          }\n\n          if (wasForeignCheckEnabled) {\n            const foreignViolations = await trx.raw(executeForeignCheck());\n\n            if (foreignViolations.length > 0) {\n              throw new Error('FOREIGN KEY constraint failed');\n            }\n          }\n        },\n        { connection: this.connection }\n      );\n    } finally {\n      if (wasForeignCheckEnabled) {\n        await this.setForeignCheck(true);\n      }\n    }\n  }\n\n  async generateAlterCommands(newSql, createIndices, columns) {\n    const sql = [];\n    const pre = [];\n    const post = [];\n    let check = null;\n\n    sql.push(newSql);\n    sql.push(copyData(this.tableName(), this.alteredName, columns));\n    sql.push(dropOriginal(this.tableName()));\n    sql.push(renameTable(this.alteredName, this.tableName()));\n\n    for (const createIndex of createIndices) {\n      sql.push(createIndex);\n    }\n\n    const isForeignCheckEnabled = await this.isForeignCheckEnabled();\n\n    if (isForeignCheckEnabled) {\n      pre.push(setForeignCheck(false));\n      post.push(setForeignCheck(true));\n\n      check = executeForeignCheck();\n    }\n\n    return { pre, sql, check, post };\n  }\n}\n\nmodule.exports = SQLite3_DDL;\n","function copyData(sourceTable, targetTable, columns) {\n  return `INSERT INTO \"${targetTable}\" SELECT ${\n    columns === undefined\n      ? '*'\n      : columns.map((column) => `\"${column}\"`).join(', ')\n  } FROM \"${sourceTable}\";`;\n}\n\nfunction dropOriginal(tableName) {\n  return `DROP TABLE \"${tableName}\"`;\n}\n\nfunction renameTable(tableName, alteredName) {\n  return `ALTER TABLE \"${tableName}\" RENAME TO \"${alteredName}\"`;\n}\n\nfunction getTableSql(tableName) {\n  return `SELECT type, sql FROM sqlite_master WHERE (type='table' OR (type='index' AND sql IS NOT NULL)) AND tbl_name='${tableName}'`;\n}\n\nfunction isForeignCheckEnabled() {\n  return `PRAGMA foreign_keys`;\n}\n\nfunction setForeignCheck(enable) {\n  return `PRAGMA foreign_keys = ${enable ? 'ON' : 'OFF'}`;\n}\n\nfunction executeForeignCheck() {\n  return `PRAGMA foreign_key_check`;\n}\n\nmodule.exports = {\n  copyData,\n  dropOriginal,\n  renameTable,\n  getTableSql,\n  isForeignCheckEnabled,\n  setForeignCheck,\n  executeForeignCheck,\n};\n","const QueryBuilder = require('../../../query/querybuilder.js');\n\nmodule.exports = class QueryBuilder_SQLite3 extends QueryBuilder {\n  withMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'with'\n    );\n    return this.withWrapped(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      true\n    );\n  }\n\n  withNotMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'with'\n    );\n    return this.withWrapped(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      false\n    );\n  }\n};\n","// SQLite3\n// -------\nconst defaults = require('lodash/defaults');\nconst map = require('lodash/map');\nconst { promisify } = require('util');\n\nconst Client = require('../../client');\n\nconst Raw = require('../../raw');\nconst Transaction = require('./execution/sqlite-transaction');\nconst SqliteQueryCompiler = require('./query/sqlite-querycompiler');\nconst SchemaCompiler = require('./schema/sqlite-compiler');\nconst ColumnCompiler = require('./schema/sqlite-columncompiler');\nconst TableCompiler = require('./schema/sqlite-tablecompiler');\nconst ViewCompiler = require('./schema/sqlite-viewcompiler');\nconst SQLite3_DDL = require('./schema/ddl');\nconst Formatter = require('../../formatter');\nconst QueryBuilder = require('./query/sqlite-querybuilder');\n\nclass Client_SQLite3 extends Client {\n  constructor(config) {\n    super(config);\n\n    if (config.connection && config.connection.filename === undefined) {\n      this.logger.warn(\n        'Could not find `connection.filename` in config. Please specify ' +\n          'the database path and name to avoid errors. ' +\n          '(see docs https://knexjs.org/guide/#configuration-options)'\n      );\n    }\n\n    if (config.useNullAsDefault === undefined) {\n      this.logger.warn(\n        'sqlite does not support inserting default values. Set the ' +\n          '`useNullAsDefault` flag to hide this warning. ' +\n          '(see docs https://knexjs.org/guide/query-builder.html#insert).'\n      );\n    }\n  }\n\n  _driver() {\n    return require('sqlite3');\n  }\n\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new SqliteQueryCompiler(this, builder, formatter);\n  }\n\n  queryBuilder() {\n    return new QueryBuilder(this);\n  }\n\n  viewCompiler(builder, formatter) {\n    return new ViewCompiler(this, builder, formatter);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  ddl(compiler, pragma, connection) {\n    return new SQLite3_DDL(this, compiler, pragma, connection);\n  }\n\n  wrapIdentifierImpl(value) {\n    return value !== '*' ? `\\`${value.replace(/`/g, '``')}\\`` : '*';\n  }\n\n  // Get a raw connection from the database, returning a promise with the connection object.\n  acquireRawConnection() {\n    return new Promise((resolve, reject) => {\n      // the default mode for sqlite3\n      let flags = this.driver.OPEN_READWRITE | this.driver.OPEN_CREATE;\n\n      if (this.connectionSettings.flags) {\n        if (!Array.isArray(this.connectionSettings.flags)) {\n          throw new Error(`flags must be an array of strings`);\n        }\n        this.connectionSettings.flags.forEach((_flag) => {\n          if (!_flag.startsWith('OPEN_') || !this.driver[_flag]) {\n            throw new Error(`flag ${_flag} not supported by node-sqlite3`);\n          }\n          flags = flags | this.driver[_flag];\n        });\n      }\n\n      const db = new this.driver.Database(\n        this.connectionSettings.filename,\n        flags,\n        (err) => {\n          if (err) {\n            return reject(err);\n          }\n          resolve(db);\n        }\n      );\n    });\n  }\n\n  // Used to explicitly close a connection, called internally by the pool when\n  // a connection times out or the pool is shutdown.\n  async destroyRawConnection(connection) {\n    const close = promisify((cb) => connection.close(cb));\n    return close();\n  }\n\n  // Runs the query on the specified connection, providing the bindings and any\n  // other necessary prep work.\n  _query(connection, obj) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    const { method } = obj;\n    let callMethod;\n    switch (method) {\n      case 'insert':\n      case 'update':\n        callMethod = obj.returning ? 'all' : 'run';\n        break;\n      case 'counter':\n      case 'del':\n        callMethod = 'run';\n        break;\n      default:\n        callMethod = 'all';\n    }\n    return new Promise(function (resolver, rejecter) {\n      if (!connection || !connection[callMethod]) {\n        return rejecter(\n          new Error(`Error calling ${callMethod} on connection.`)\n        );\n      }\n      connection[callMethod](obj.sql, obj.bindings, function (err, response) {\n        if (err) return rejecter(err);\n        obj.response = response;\n\n        // We need the context here, as it contains\n        // the \"this.lastID\" or \"this.changes\"\n        obj.context = this;\n\n        return resolver(obj);\n      });\n    });\n  }\n\n  _stream(connection, obj, stream) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    const client = this;\n    return new Promise(function (resolver, rejecter) {\n      stream.on('error', rejecter);\n      stream.on('end', resolver);\n\n      return client\n        ._query(connection, obj)\n        .then((obj) => obj.response)\n        .then((rows) => rows.forEach((row) => stream.write(row)))\n        .catch(function (err) {\n          stream.emit('error', err);\n        })\n        .then(function () {\n          stream.end();\n        });\n    });\n  }\n\n  // Ensures the response is returned in the same format as other clients.\n  processResponse(obj, runner) {\n    const ctx = obj.context;\n    const { response, returning } = obj;\n    if (obj.output) return obj.output.call(runner, response);\n    switch (obj.method) {\n      case 'select':\n        return response;\n      case 'first':\n        return response[0];\n      case 'pluck':\n        return map(response, obj.pluck);\n      case 'insert': {\n        if (returning) {\n          if (response) {\n            return response;\n          }\n        }\n        return [ctx.lastID];\n      }\n      case 'update': {\n        if (returning) {\n          if (response) {\n            return response;\n          }\n        }\n        return ctx.changes;\n      }\n      case 'del':\n      case 'counter':\n        return ctx.changes;\n      default: {\n        return response;\n      }\n    }\n  }\n\n  poolDefaults() {\n    return defaults({ min: 1, max: 1 }, super.poolDefaults());\n  }\n\n  formatter(builder) {\n    return new Formatter(this, builder);\n  }\n\n  values(values, builder, formatter) {\n    if (Array.isArray(values)) {\n      if (Array.isArray(values[0])) {\n        return `( values ${values\n          .map(\n            (value) =>\n              `(${this.parameterize(value, undefined, builder, formatter)})`\n          )\n          .join(', ')})`;\n      }\n      return `(${this.parameterize(values, undefined, builder, formatter)})`;\n    }\n\n    if (values instanceof Raw) {\n      return `(${this.parameter(values, builder, formatter)})`;\n    }\n\n    return this.parameter(values, builder, formatter);\n  }\n}\n\nObject.assign(Client_SQLite3.prototype, {\n  dialect: 'sqlite3',\n\n  driverName: 'sqlite3',\n});\n\nmodule.exports = Client_SQLite3;\n","// better-sqlite3 Client\n// -------\nconst Client_SQLite3 = require('../sqlite3');\n\nclass Client_BetterSQLite3 extends Client_SQLite3 {\n  _driver() {\n    return require('better-sqlite3');\n  }\n\n  // Get a raw connection from the database, returning a promise with the connection object.\n  async acquireRawConnection() {\n    return new this.driver(this.connectionSettings.filename);\n  }\n\n  // Used to explicitly close a connection, called internally by the pool when\n  // a connection times out or the pool is shutdown.\n  async destroyRawConnection(connection) {\n    return connection.close();\n  }\n\n  // Runs the query on the specified connection, providing the bindings and any\n  // other necessary prep work.\n  async _query(connection, obj) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    if (!connection) {\n      throw new Error('No connection provided');\n    }\n\n    const statement = connection.prepare(obj.sql);\n    const bindings = this._formatBindings(obj.bindings);\n\n    if (statement.reader) {\n      const response = await statement.all(bindings);\n      obj.response = response;\n      return obj;\n    }\n\n    const response = await statement.run(bindings);\n    obj.response = response;\n    obj.context = {\n      lastID: response.lastInsertRowid,\n      changes: response.changes,\n    };\n\n    return obj;\n  }\n\n  _formatBindings(bindings) {\n    if (!bindings) {\n      return [];\n    }\n    return bindings.map((binding) => {\n      if (binding instanceof Date) {\n        return binding.valueOf();\n      }\n\n      if (typeof binding === 'boolean') {\n        return Number(binding);\n      }\n\n      return binding;\n    });\n  }\n}\n\nObject.assign(Client_BetterSQLite3.prototype, {\n  // The \"dialect\", for reference .\n  driverName: 'better-sqlite3',\n});\n\nmodule.exports = Client_BetterSQLite3;\n","const Transaction = require('../../../execution/transaction');\n\nclass Transaction_PG extends Transaction {\n  begin(conn) {\n    if (this.isolationLevel) {\n      return this.query(conn, `BEGIN ISOLATION LEVEL ${this.isolationLevel};`);\n    }\n    return this.query(conn, 'BEGIN;');\n  }\n}\n\nmodule.exports = Transaction_PG;\n","// PostgreSQL Query Builder & Compiler\n// ------\nconst identity = require('lodash/identity');\nconst reduce = require('lodash/reduce');\n\nconst QueryCompiler = require('../../../query/querycompiler');\nconst {\n  wrapString,\n  columnize: columnize_,\n  operator: operator_,\n  wrap: wrap_,\n} = require('../../../formatter/wrappingFormatter');\n\nclass QueryCompiler_PG extends QueryCompiler {\n  constructor(client, builder, formatter) {\n    super(client, builder, formatter);\n    this._defaultInsertValue = 'default';\n  }\n\n  // Compiles a truncate query.\n  truncate() {\n    return `truncate ${this.tableName} restart identity`;\n  }\n\n  // is used if the an array with multiple empty values supplied\n\n  // Compiles an `insert` query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    let sql = super.insert();\n    if (sql === '') return sql;\n\n    const { returning, onConflict, ignore, merge, insert } = this.single;\n    if (onConflict && ignore) sql += this._ignore(onConflict);\n    if (onConflict && merge) {\n      sql += this._merge(merge.updates, onConflict, insert);\n      const wheres = this.where();\n      if (wheres) sql += ` ${wheres}`;\n    }\n    if (returning) sql += this._returning(returning);\n\n    return {\n      sql,\n      returning,\n    };\n  }\n\n  // Compiles an `update` query, allowing for a return value.\n  update() {\n    const withSQL = this.with();\n    const updateData = this._prepUpdate(this.single.update);\n    const wheres = this.where();\n    const { returning } = this.single;\n    return {\n      sql:\n        withSQL +\n        `update ${this.single.only ? 'only ' : ''}${this.tableName} ` +\n        `set ${updateData.join(', ')}` +\n        (wheres ? ` ${wheres}` : '') +\n        this._returning(returning),\n      returning,\n    };\n  }\n\n  using() {\n    const usingTables = this.single.using;\n    if (!usingTables) return;\n    let sql = 'using ';\n    if (Array.isArray(usingTables)) {\n      sql += usingTables\n        .map((table) => {\n          return this.formatter.wrap(table);\n        })\n        .join(',');\n    } else {\n      sql += this.formatter.wrap(usingTables);\n    }\n    return sql;\n  }\n\n  // Compiles an `delete` query, allowing for a return value.\n  del() {\n    // Make sure tableName is processed by the formatter first.\n    const { tableName } = this;\n    const withSQL = this.with();\n    let wheres = this.where() || '';\n    let using = this.using() || '';\n    const joins = this.grouped.join;\n\n    const tableJoins = [];\n    if (Array.isArray(joins)) {\n      for (const join of joins) {\n        tableJoins.push(\n          wrap_(\n            this._joinTable(join),\n            undefined,\n            this.builder,\n            this.client,\n            this.bindingsHolder\n          )\n        );\n\n        const joinWheres = [];\n        for (const clause of join.clauses) {\n          joinWheres.push(\n            this.whereBasic({\n              column: clause.column,\n              operator: '=',\n              value: clause.value,\n              asColumn: true,\n            })\n          );\n        }\n        if (joinWheres.length > 0) {\n          wheres += (wheres ? ' and ' : 'where ') + joinWheres.join(' and ');\n        }\n      }\n      if (tableJoins.length > 0) {\n        using += (using ? ',' : 'using ') + tableJoins.join(',');\n      }\n    }\n\n    // With 'using' syntax, no tablename between DELETE and FROM.\n    const sql =\n      withSQL +\n      `delete from ${this.single.only ? 'only ' : ''}${tableName}` +\n      (using ? ` ${using}` : '') +\n      (wheres ? ` ${wheres}` : '');\n    const { returning } = this.single;\n    return {\n      sql: sql + this._returning(returning),\n      returning,\n    };\n  }\n\n  aggregate(stmt) {\n    return this._aggregate(stmt, { distinctParentheses: true });\n  }\n\n  _returning(value) {\n    return value ? ` returning ${this.formatter.columnize(value)}` : '';\n  }\n\n  _ignore(columns) {\n    if (columns === true) {\n      return ' on conflict do nothing';\n    }\n    return ` on conflict ${this._onConflictClause(columns)} do nothing`;\n  }\n\n  _merge(updates, columns, insert) {\n    let sql = ` on conflict ${this._onConflictClause(columns)} do update set `;\n    if (updates && Array.isArray(updates)) {\n      sql += updates\n        .map((column) =>\n          wrapString(\n            column.split('.').pop(),\n            this.formatter.builder,\n            this.client,\n            this.formatter\n          )\n        )\n        .map((column) => `${column} = excluded.${column}`)\n        .join(', ');\n\n      return sql;\n    } else if (updates && typeof updates === 'object') {\n      const updateData = this._prepUpdate(updates);\n      if (typeof updateData === 'string') {\n        sql += updateData;\n      } else {\n        sql += updateData.join(',');\n      }\n\n      return sql;\n    } else {\n      const insertData = this._prepInsert(insert);\n      if (typeof insertData === 'string') {\n        throw new Error(\n          'If using merge with a raw insert query, then updates must be provided'\n        );\n      }\n\n      sql += insertData.columns\n        .map((column) =>\n          wrapString(column.split('.').pop(), this.builder, this.client)\n        )\n        .map((column) => `${column} = excluded.${column}`)\n        .join(', ');\n\n      return sql;\n    }\n  }\n\n  // Join array of table names and apply default schema.\n  _tableNames(tables) {\n    const schemaName = this.single.schema;\n    const sql = [];\n\n    for (let i = 0; i < tables.length; i++) {\n      let tableName = tables[i];\n\n      if (tableName) {\n        if (schemaName) {\n          tableName = `${schemaName}.${tableName}`;\n        }\n        sql.push(this.formatter.wrap(tableName));\n      }\n    }\n\n    return sql.join(', ');\n  }\n\n  _lockingClause(lockMode) {\n    const tables = this.single.lockTables || [];\n\n    return lockMode + (tables.length ? ' of ' + this._tableNames(tables) : '');\n  }\n\n  _groupOrder(item, type) {\n    return super._groupOrderNulls(item, type);\n  }\n\n  forUpdate() {\n    return this._lockingClause('for update');\n  }\n\n  forShare() {\n    return this._lockingClause('for share');\n  }\n\n  forNoKeyUpdate() {\n    return this._lockingClause('for no key update');\n  }\n\n  forKeyShare() {\n    return this._lockingClause('for key share');\n  }\n\n  skipLocked() {\n    return 'skip locked';\n  }\n\n  noWait() {\n    return 'nowait';\n  }\n\n  // Compiles a columnInfo query\n  columnInfo() {\n    const column = this.single.columnInfo;\n    let schema = this.single.schema;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    if (schema) {\n      schema = this.client.customWrapIdentifier(schema, identity);\n    }\n\n    const sql =\n      'select * from information_schema.columns where table_name = ? and table_catalog = current_database()';\n    const bindings = [table];\n\n    return this._buildColumnInfoQuery(schema, sql, bindings, column);\n  }\n\n  _buildColumnInfoQuery(schema, sql, bindings, column) {\n    if (schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(schema);\n    } else {\n      sql += ' and table_schema = current_schema()';\n    }\n\n    return {\n      sql,\n      bindings,\n      output(resp) {\n        const out = reduce(\n          resp.rows,\n          function (columns, val) {\n            columns[val.column_name] = {\n              type: val.data_type,\n              maxLength: val.character_maximum_length,\n              nullable: val.is_nullable === 'YES',\n              defaultValue: val.column_default,\n            };\n            return columns;\n          },\n          {}\n        );\n        return (column && out[column]) || out;\n      },\n    };\n  }\n\n  distinctOn(value) {\n    return 'distinct on (' + this.formatter.columnize(value) + ') ';\n  }\n\n  // Json functions\n  jsonExtract(params) {\n    return this._jsonExtract('jsonb_path_query', params);\n  }\n\n  jsonSet(params) {\n    return this._jsonSet(\n      'jsonb_set',\n      Object.assign({}, params, {\n        path: this.client.toPathForJson(params.path),\n      })\n    );\n  }\n\n  jsonInsert(params) {\n    return this._jsonSet(\n      'jsonb_insert',\n      Object.assign({}, params, {\n        path: this.client.toPathForJson(params.path),\n      })\n    );\n  }\n\n  jsonRemove(params) {\n    const jsonCol = `${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )} #- ${this.client.parameter(\n      this.client.toPathForJson(params.path),\n      this.builder,\n      this.bindingsHolder\n    )}`;\n    return params.alias\n      ? this.client.alias(jsonCol, this.formatter.wrap(params.alias))\n      : jsonCol;\n  }\n\n  whereJsonPath(statement) {\n    let castValue = '';\n    if (!isNaN(statement.value) && parseInt(statement.value)) {\n      castValue = '::int';\n    } else if (!isNaN(statement.value) && parseFloat(statement.value)) {\n      castValue = '::float';\n    } else {\n      castValue = \" #>> '{}'\";\n    }\n    return `jsonb_path_query_first(${this._columnClause(\n      statement\n    )}, ${this.client.parameter(\n      statement.jsonPath,\n      this.builder,\n      this.bindingsHolder\n    )})${castValue} ${operator_(\n      statement.operator,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )} ${this._jsonValueClause(statement)}`;\n  }\n\n  whereJsonSupersetOf(statement) {\n    return this._not(\n      statement,\n      `${wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )} @> ${this._jsonValueClause(statement)}`\n    );\n  }\n\n  whereJsonSubsetOf(statement) {\n    return this._not(\n      statement,\n      `${columnize_(\n        statement.column,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )} <@ ${this._jsonValueClause(statement)}`\n    );\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('jsonb_path_query_first', clause);\n  }\n}\n\nmodule.exports = QueryCompiler_PG;\n","const QueryBuilder = require('../../../query/querybuilder.js');\n\nmodule.exports = class QueryBuilder_PostgreSQL extends QueryBuilder {\n  using(tables) {\n    this._single.using = tables;\n    return this;\n  }\n\n  withMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'with'\n    );\n    return this.withWrapped(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      true\n    );\n  }\n\n  withNotMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'with'\n    );\n    return this.withWrapped(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      false\n    );\n  }\n};\n","// PostgreSQL Column Compiler\n// -------\n\nconst ColumnCompiler = require('../../../schema/columncompiler');\nconst { isObject } = require('../../../util/is');\nconst { toNumber } = require('../../../util/helpers');\nconst commentEscapeRegex = /(?<!')'(?!')/g;\n\nclass ColumnCompiler_PG extends ColumnCompiler {\n  constructor(client, tableCompiler, columnBuilder) {\n    super(client, tableCompiler, columnBuilder);\n    this.modifiers = ['nullable', 'defaultTo', 'comment'];\n    this._addCheckModifiers();\n  }\n\n  // Types\n  // ------\n\n  bit(column) {\n    return column.length !== false ? `bit(${column.length})` : 'bit';\n  }\n\n  // Create the column definition for an enum type.\n  // Using method \"2\" here: http://stackoverflow.com/a/10984951/525714\n  enu(allowed, options) {\n    options = options || {};\n\n    const values =\n      options.useNative && options.existingType\n        ? undefined\n        : allowed.join(\"', '\");\n\n    if (options.useNative) {\n      let enumName = '';\n      const schemaName = options.schemaName || this.tableCompiler.schemaNameRaw;\n\n      if (schemaName) {\n        enumName += `\"${schemaName}\".`;\n      }\n\n      enumName += `\"${options.enumName}\"`;\n\n      if (!options.existingType) {\n        this.tableCompiler.unshiftQuery(\n          `create type ${enumName} as enum ('${values}')`\n        );\n      }\n\n      return enumName;\n    }\n    return `text check (${this.formatter.wrap(this.args[0])} in ('${values}'))`;\n  }\n\n  decimal(precision, scale) {\n    if (precision === null) return 'decimal';\n    return `decimal(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  json(jsonb) {\n    if (jsonb) this.client.logger.deprecate('json(true)', 'jsonb()');\n    return jsonColumn(this.client, jsonb);\n  }\n\n  jsonb() {\n    return jsonColumn(this.client, true);\n  }\n\n  checkRegex(regex, constraintName) {\n    return this._check(\n      `${this.formatter.wrap(\n        this.getColumnName()\n      )} ~ ${this.client._escapeBinding(regex)}`,\n      constraintName\n    );\n  }\n\n  datetime(withoutTz = false, precision) {\n    let useTz;\n    if (isObject(withoutTz)) {\n      ({ useTz, precision } = withoutTz);\n    } else {\n      useTz = !withoutTz;\n    }\n    useTz = typeof useTz === 'boolean' ? useTz : true;\n    precision =\n      precision !== undefined && precision !== null\n        ? '(' + precision + ')'\n        : '';\n\n    return `${useTz ? 'timestamptz' : 'timestamp'}${precision}`;\n  }\n\n  timestamp(withoutTz = false, precision) {\n    return this.datetime(withoutTz, precision);\n  }\n\n  // Modifiers:\n  // ------\n  comment(comment) {\n    const columnName = this.args[0] || this.defaults('columnName');\n    const escapedComment = comment\n      ? `'${comment.replace(commentEscapeRegex, \"''\")}'`\n      : 'NULL';\n\n    this.pushAdditional(function () {\n      this.pushQuery(\n        `comment on column ${this.tableCompiler.tableName()}.` +\n          this.formatter.wrap(columnName) +\n          ` is ${escapedComment}`\n      );\n    }, comment);\n  }\n\n  increments(options = { primaryKey: true }) {\n    return (\n      'serial' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n\n  bigincrements(options = { primaryKey: true }) {\n    return (\n      'bigserial' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n\n  uuid(options = { primaryKey: false }) {\n    return (\n      'uuid' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n}\n\nColumnCompiler_PG.prototype.bigint = 'bigint';\nColumnCompiler_PG.prototype.binary = 'bytea';\nColumnCompiler_PG.prototype.bool = 'boolean';\nColumnCompiler_PG.prototype.double = 'double precision';\nColumnCompiler_PG.prototype.floating = 'real';\nColumnCompiler_PG.prototype.smallint = 'smallint';\nColumnCompiler_PG.prototype.tinyint = 'smallint';\n\nfunction jsonColumn(client, jsonb) {\n  if (\n    !client.version ||\n    client.config.client === 'cockroachdb' ||\n    client.config.jsonbSupport === true ||\n    parseFloat(client.version) >= 9.2\n  ) {\n    return jsonb ? 'jsonb' : 'json';\n  }\n  return 'text';\n}\n\nmodule.exports = ColumnCompiler_PG;\n","/* eslint max-len: 0 */\n\n// PostgreSQL Table Builder & Compiler\n// -------\n\nconst has = require('lodash/has');\nconst TableCompiler = require('../../../schema/tablecompiler');\nconst { isObject, isString } = require('../../../util/is');\n\nclass TableCompiler_PG extends TableCompiler {\n  constructor(client, tableBuilder) {\n    super(client, tableBuilder);\n  }\n\n  // Compile a rename column command.\n  renameColumn(from, to) {\n    return this.pushQuery({\n      sql: `alter table ${this.tableName()} rename ${this.formatter.wrap(\n        from\n      )} to ${this.formatter.wrap(to)}`,\n    });\n  }\n\n  _setNullableState(column, isNullable) {\n    const constraintAction = isNullable ? 'drop not null' : 'set not null';\n    const sql = `alter table ${this.tableName()} alter column ${this.formatter.wrap(\n      column\n    )} ${constraintAction}`;\n    return this.pushQuery({\n      sql: sql,\n    });\n  }\n\n  compileAdd(builder) {\n    const table = this.formatter.wrap(builder);\n    const columns = this.prefixArray('add column', this.getColumns(builder));\n    return this.pushQuery({\n      sql: `alter table ${table} ${columns.join(', ')}`,\n    });\n  }\n\n  // Adds the \"create\" query to the query sequence.\n  createQuery(columns, ifNot, like) {\n    const createStatement = ifNot\n      ? 'create table if not exists '\n      : 'create table ';\n    const columnsSql = ` (${columns.sql.join(', ')}${\n      this.primaryKeys() || ''\n    }${this._addChecks()})`;\n\n    let sql =\n      createStatement +\n      this.tableName() +\n      (like && this.tableNameLike()\n        ? ' (like ' +\n          this.tableNameLike() +\n          ' including all' +\n          (columns.sql.length ? ', ' + columns.sql.join(', ') : '') +\n          ')'\n        : columnsSql);\n    if (this.single.inherits)\n      sql += ` inherits (${this.formatter.wrap(this.single.inherits)})`;\n    this.pushQuery({\n      sql,\n      bindings: columns.bindings,\n    });\n    const hasComment = has(this.single, 'comment');\n    if (hasComment) this.comment(this.single.comment);\n  }\n\n  primaryKeys() {\n    const pks = (this.grouped.alterTable || []).filter(\n      (k) => k.method === 'primary'\n    );\n    if (pks.length > 0 && pks[0].args.length > 0) {\n      const columns = pks[0].args[0];\n      let constraintName = pks[0].args[1] || '';\n      let deferrable;\n      if (isObject(constraintName)) {\n        ({ constraintName, deferrable } = constraintName);\n      }\n      deferrable = deferrable ? ` deferrable initially ${deferrable}` : '';\n      constraintName = constraintName\n        ? this.formatter.wrap(constraintName)\n        : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n\n      return `, constraint ${constraintName} primary key (${this.formatter.columnize(\n        columns\n      )})${deferrable}`;\n    }\n  }\n\n  addColumns(columns, prefix, colCompilers) {\n    if (prefix === this.alterColumnsPrefix) {\n      // alter columns\n      for (const col of colCompilers) {\n        this._addColumn(col);\n      }\n    } else {\n      // base class implementation for normal add\n      super.addColumns(columns, prefix);\n    }\n  }\n\n  _addColumn(col) {\n    const quotedTableName = this.tableName();\n    const type = col.getColumnType();\n    // We'd prefer to call this.formatter.wrapAsIdentifier here instead, however the context passed to\n    // `this` instance is not that of the column, but of the table. Thus, we unfortunately have to call\n    // `wrapIdentifier` here as well (it is already called once on the initial column operation) to give\n    // our `alter` operation the correct `queryContext`. Refer to issue #2606 and PR #2612.\n    const colName = this.client.wrapIdentifier(\n      col.getColumnName(),\n      col.columnBuilder.queryContext()\n    );\n\n    // To alter enum columns they must be cast to text first\n    const isEnum = col.type === 'enu';\n    this.pushQuery({\n      sql: `alter table ${quotedTableName} alter column ${colName} drop default`,\n      bindings: [],\n    });\n\n    const alterNullable = col.columnBuilder.alterNullable;\n    if (alterNullable) {\n      this.pushQuery({\n        sql: `alter table ${quotedTableName} alter column ${colName} drop not null`,\n        bindings: [],\n      });\n    }\n\n    const alterType = col.columnBuilder.alterType;\n    if (alterType) {\n      this.pushQuery({\n        sql: `alter table ${quotedTableName} alter column ${colName} type ${type} using (${colName}${\n          isEnum ? '::text::' : '::'\n        }${type})`,\n        bindings: [],\n      });\n    }\n\n    const defaultTo = col.modified['defaultTo'];\n    if (defaultTo) {\n      const modifier = col.defaultTo.apply(col, defaultTo);\n      this.pushQuery({\n        sql: `alter table ${quotedTableName} alter column ${colName} set ${modifier}`,\n        bindings: [],\n      });\n    }\n\n    if (alterNullable) {\n      const nullable = col.modified['nullable'];\n      if (nullable && nullable[0] === false) {\n        this.pushQuery({\n          sql: `alter table ${quotedTableName} alter column ${colName} set not null`,\n          bindings: [],\n        });\n      }\n    }\n  }\n\n  // Compiles the comment on the table.\n  comment(comment) {\n    this.pushQuery(\n      `comment on table ${this.tableName()} is '${this.single.comment}'`\n    );\n  }\n\n  // Indexes:\n  // -------\n\n  primary(columns, constraintName) {\n    let deferrable;\n    if (isObject(constraintName)) {\n      ({ constraintName, deferrable } = constraintName);\n    }\n    deferrable = deferrable ? ` deferrable initially ${deferrable}` : '';\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n    if (this.method !== 'create' && this.method !== 'createIfNot') {\n      this.pushQuery(\n        `alter table ${this.tableName()} add constraint ${constraintName} primary key (${this.formatter.columnize(\n          columns\n        )})${deferrable}`\n      );\n    }\n  }\n\n  unique(columns, indexName) {\n    let deferrable;\n    if (isObject(indexName)) {\n      ({ indexName, deferrable } = indexName);\n    }\n    deferrable = deferrable ? ` deferrable initially ${deferrable}` : '';\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} add constraint ${indexName}` +\n        ' unique (' +\n        this.formatter.columnize(columns) +\n        ')' +\n        deferrable\n    );\n  }\n\n  index(columns, indexName, options) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n\n    let predicate;\n    let indexType;\n\n    if (isString(options)) {\n      indexType = options;\n    } else if (isObject(options)) {\n      ({ indexType, predicate } = options);\n    }\n\n    const predicateQuery = predicate\n      ? ' ' + this.client.queryCompiler(predicate).where()\n      : '';\n\n    this.pushQuery(\n      `create index ${indexName} on ${this.tableName()}${\n        (indexType && ` using ${indexType}`) || ''\n      }` +\n        ' (' +\n        this.formatter.columnize(columns) +\n        ')' +\n        `${predicateQuery}`\n    );\n  }\n\n  dropPrimary(constraintName) {\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(this.tableNameRaw + '_pkey');\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${constraintName}`\n    );\n  }\n\n  dropIndex(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    indexName = this.schemaNameRaw\n      ? `${this.formatter.wrap(this.schemaNameRaw)}.${indexName}`\n      : indexName;\n    this.pushQuery(`drop index ${indexName}`);\n  }\n\n  dropUnique(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${indexName}`\n    );\n  }\n\n  dropForeign(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('foreign', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${indexName}`\n    );\n  }\n}\n\nmodule.exports = TableCompiler_PG;\n","/* eslint max-len: 0 */\n\nconst ViewCompiler = require('../../../schema/viewcompiler.js');\n\nclass ViewCompiler_PG extends ViewCompiler {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n\n  renameColumn(from, to) {\n    return this.pushQuery({\n      sql: `alter view ${this.viewName()} rename ${this.formatter.wrap(\n        from\n      )} to ${this.formatter.wrap(to)}`,\n    });\n  }\n\n  defaultTo(column, defaultValue) {\n    return this.pushQuery({\n      sql: `alter view ${this.viewName()} alter ${this.formatter.wrap(\n        column\n      )} set default ${defaultValue}`,\n    });\n  }\n\n  createOrReplace() {\n    this.createQuery(this.columns, this.selectQuery, false, true);\n  }\n\n  createMaterializedView() {\n    this.createQuery(this.columns, this.selectQuery, true);\n  }\n}\n\nmodule.exports = ViewCompiler_PG;\n","const ViewBuilder = require('../../../schema/viewbuilder.js');\n\nclass ViewBuilder_PG extends ViewBuilder {\n  constructor() {\n    super(...arguments);\n  }\n\n  checkOption() {\n    this._single.checkOption = 'default_option';\n  }\n\n  localCheckOption() {\n    this._single.checkOption = 'local';\n  }\n\n  cascadedCheckOption() {\n    this._single.checkOption = 'cascaded';\n  }\n}\n\nmodule.exports = ViewBuilder_PG;\n","// PostgreSQL Schema Compiler\n// -------\n\nconst SchemaCompiler = require('../../../schema/compiler');\n\nclass SchemaCompiler_PG extends SchemaCompiler {\n  constructor(client, builder) {\n    super(client, builder);\n  }\n\n  // Check whether the current table\n  hasTable(tableName) {\n    let sql = 'select * from information_schema.tables where table_name = ?';\n    const bindings = [tableName];\n\n    if (this.schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(this.schema);\n    } else {\n      sql += ' and table_schema = current_schema()';\n    }\n\n    this.pushQuery({\n      sql,\n      bindings,\n      output(resp) {\n        return resp.rows.length > 0;\n      },\n    });\n  }\n\n  // Compile the query to determine if a column exists in a table.\n  hasColumn(tableName, columnName) {\n    let sql =\n      'select * from information_schema.columns where table_name = ? and column_name = ?';\n    const bindings = [tableName, columnName];\n\n    if (this.schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(this.schema);\n    } else {\n      sql += ' and table_schema = current_schema()';\n    }\n\n    this.pushQuery({\n      sql,\n      bindings,\n      output(resp) {\n        return resp.rows.length > 0;\n      },\n    });\n  }\n\n  qualifiedTableName(tableName) {\n    const name = this.schema ? `${this.schema}.${tableName}` : tableName;\n    return this.formatter.wrap(name);\n  }\n\n  // Compile a rename table command.\n  renameTable(from, to) {\n    this.pushQuery(\n      `alter table ${this.qualifiedTableName(\n        from\n      )} rename to ${this.formatter.wrap(to)}`\n    );\n  }\n\n  createSchema(schemaName) {\n    this.pushQuery(`create schema ${this.formatter.wrap(schemaName)}`);\n  }\n\n  createSchemaIfNotExists(schemaName) {\n    this.pushQuery(\n      `create schema if not exists ${this.formatter.wrap(schemaName)}`\n    );\n  }\n\n  dropSchema(schemaName, cascade = false) {\n    this.pushQuery(\n      `drop schema ${this.formatter.wrap(schemaName)}${\n        cascade ? ' cascade' : ''\n      }`\n    );\n  }\n\n  dropSchemaIfExists(schemaName, cascade = false) {\n    this.pushQuery(\n      `drop schema if exists ${this.formatter.wrap(schemaName)}${\n        cascade ? ' cascade' : ''\n      }`\n    );\n  }\n\n  dropExtension(extensionName) {\n    this.pushQuery(`drop extension ${this.formatter.wrap(extensionName)}`);\n  }\n\n  dropExtensionIfExists(extensionName) {\n    this.pushQuery(\n      `drop extension if exists ${this.formatter.wrap(extensionName)}`\n    );\n  }\n\n  createExtension(extensionName) {\n    this.pushQuery(`create extension ${this.formatter.wrap(extensionName)}`);\n  }\n\n  createExtensionIfNotExists(extensionName) {\n    this.pushQuery(\n      `create extension if not exists ${this.formatter.wrap(extensionName)}`\n    );\n  }\n\n  renameView(from, to) {\n    this.pushQuery(\n      this.alterViewPrefix +\n        `${this.formatter.wrap(from)} rename to ${this.formatter.wrap(to)}`\n    );\n  }\n\n  refreshMaterializedView(viewName, concurrently = false) {\n    this.pushQuery({\n      sql: `refresh materialized view${concurrently ? \" concurrently\" : \"\"} ${this.formatter.wrap(viewName)}`,\n    });\n  }\n\n  dropMaterializedView(viewName) {\n    this._dropView(viewName, false, true);\n  }\n\n  dropMaterializedViewIfExists(viewName) {\n    this._dropView(viewName, true, true);\n  }\n}\n\nmodule.exports = SchemaCompiler_PG;\n","// PostgreSQL\n// -------\nconst extend = require('lodash/extend');\nconst map = require('lodash/map');\nconst { promisify } = require('util');\nconst Client = require('../../client');\n\nconst Transaction = require('./execution/pg-transaction');\nconst QueryCompiler = require('./query/pg-querycompiler');\nconst QueryBuilder = require('./query/pg-querybuilder');\nconst ColumnCompiler = require('./schema/pg-columncompiler');\nconst TableCompiler = require('./schema/pg-tablecompiler');\nconst ViewCompiler = require('./schema/pg-viewcompiler');\nconst ViewBuilder = require('./schema/pg-viewbuilder');\nconst SchemaCompiler = require('./schema/pg-compiler');\nconst { makeEscape } = require('../../util/string');\nconst { isString } = require('../../util/is');\n\nclass Client_PG extends Client {\n  constructor(config) {\n    super(config);\n    if (config.returning) {\n      this.defaultReturning = config.returning;\n    }\n\n    if (config.searchPath) {\n      this.searchPath = config.searchPath;\n    }\n  }\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  queryBuilder() {\n    return new QueryBuilder(this);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n\n  viewBuilder() {\n    return new ViewBuilder(this, ...arguments);\n  }\n\n  _driver() {\n    return require('pg');\n  }\n\n  wrapIdentifierImpl(value) {\n    if (value === '*') return value;\n\n    let arrayAccessor = '';\n    const arrayAccessorMatch = value.match(/(.*?)(\\[[0-9]+\\])/);\n\n    if (arrayAccessorMatch) {\n      value = arrayAccessorMatch[1];\n      arrayAccessor = arrayAccessorMatch[2];\n    }\n\n    return `\"${value.replace(/\"/g, '\"\"')}\"${arrayAccessor}`;\n  }\n\n  _acquireOnlyConnection() {\n    const connection = new this.driver.Client(this.connectionSettings);\n\n    return connection.connect().then(() => connection);\n  }\n\n  // Get a raw connection, called by the `pool` whenever a new\n  // connection needs to be added to the pool.\n  acquireRawConnection() {\n    const client = this;\n\n    return this._acquireOnlyConnection()\n      .then(function (connection) {\n        connection.on('error', (err) => {\n          connection.__knex__disposed = err;\n        });\n\n        connection.on('end', (err) => {\n          connection.__knex__disposed = err || 'Connection ended unexpectedly';\n        });\n\n        if (!client.version) {\n          return client.checkVersion(connection).then(function (version) {\n            client.version = version;\n            return connection;\n          });\n        }\n\n        return connection;\n      })\n      .then(async function setSearchPath(connection) {\n        await client.setSchemaSearchPath(connection);\n        return connection;\n      });\n  }\n\n  // Used to explicitly close a connection, called internally by the pool\n  // when a connection times out or the pool is shutdown.\n  async destroyRawConnection(connection) {\n    const end = promisify((cb) => connection.end(cb));\n    return end();\n  }\n\n  // In PostgreSQL, we need to do a version check to do some feature\n  // checking on the database.\n  checkVersion(connection) {\n    return new Promise((resolve, reject) => {\n      connection.query('select version();', (err, resp) => {\n        if (err) return reject(err);\n        resolve(this._parseVersion(resp.rows[0].version));\n      });\n    });\n  }\n\n  _parseVersion(versionString) {\n    return /^PostgreSQL (.*?)( |$)/.exec(versionString)[1];\n  }\n\n  // Position the bindings for the query. The escape sequence for question mark\n  // is \\? (e.g. knex.raw(\"\\\\?\") since javascript requires '\\' to be escaped too...)\n  positionBindings(sql) {\n    let questionCount = 0;\n    return sql.replace(/(\\\\*)(\\?)/g, function (match, escapes) {\n      if (escapes.length % 2) {\n        return '?';\n      } else {\n        questionCount++;\n        return `$${questionCount}`;\n      }\n    });\n  }\n\n  setSchemaSearchPath(connection, searchPath) {\n    let path = searchPath || this.searchPath;\n\n    if (!path) return Promise.resolve(true);\n\n    if (!Array.isArray(path) && !isString(path)) {\n      throw new TypeError(\n        `knex: Expected searchPath to be Array/String, got: ${typeof path}`\n      );\n    }\n\n    if (isString(path)) {\n      if (path.includes(',')) {\n        const parts = path.split(',');\n        const arraySyntax = `[${parts\n          .map((searchPath) => `'${searchPath}'`)\n          .join(', ')}]`;\n        this.logger.warn(\n          `Detected comma in searchPath \"${path}\".` +\n            `If you are trying to specify multiple schemas, use Array syntax: ${arraySyntax}`\n        );\n      }\n      path = [path];\n    }\n\n    path = path.map((schemaName) => `\"${schemaName}\"`).join(',');\n\n    return new Promise(function (resolver, rejecter) {\n      connection.query(`set search_path to ${path}`, function (err) {\n        if (err) return rejecter(err);\n        resolver(true);\n      });\n    });\n  }\n\n  _stream(connection, obj, stream, options) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    const PGQueryStream = process.browser\n      ? undefined\n      : require('pg-query-stream');\n    const sql = obj.sql;\n\n    return new Promise(function (resolver, rejecter) {\n      const queryStream = connection.query(\n        new PGQueryStream(sql, obj.bindings, options)\n      );\n\n      queryStream.on('error', function (error) {\n        rejecter(error);\n        stream.emit('error', error);\n      });\n\n      // 'end' IS propagated by .pipe, by default\n      stream.on('end', resolver);\n      queryStream.pipe(stream);\n    });\n  }\n\n  // Runs the query on the specified connection, providing the bindings\n  // and any other necessary prep work.\n  _query(connection, obj) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    let queryConfig = {\n      text: obj.sql,\n      values: obj.bindings || [],\n    };\n\n    if (obj.options) {\n      queryConfig = extend(queryConfig, obj.options);\n    }\n\n    return new Promise(function (resolver, rejecter) {\n      connection.query(queryConfig, function (err, response) {\n        if (err) return rejecter(err);\n        obj.response = response;\n        resolver(obj);\n      });\n    });\n  }\n\n  // Ensures the response is returned in the same format as other clients.\n  processResponse(obj, runner) {\n    const resp = obj.response;\n    if (obj.output) return obj.output.call(runner, resp);\n    if (obj.method === 'raw') return resp;\n    const { returning } = obj;\n    if (resp.command === 'SELECT') {\n      if (obj.method === 'first') return resp.rows[0];\n      if (obj.method === 'pluck') return map(resp.rows, obj.pluck);\n      return resp.rows;\n    }\n    if (returning) {\n      const returns = [];\n      for (let i = 0, l = resp.rows.length; i < l; i++) {\n        const row = resp.rows[i];\n        returns[i] = row;\n      }\n      return returns;\n    }\n    if (resp.command === 'UPDATE' || resp.command === 'DELETE') {\n      return resp.rowCount;\n    }\n    return resp;\n  }\n\n  async cancelQuery(connectionToKill) {\n    const conn = await this.acquireRawConnection();\n\n    try {\n      return await this._wrappedCancelQueryCall(conn, connectionToKill);\n    } finally {\n      await this.destroyRawConnection(conn).catch((err) => {\n        this.logger.warn(`Connection Error: ${err}`);\n      });\n    }\n  }\n  _wrappedCancelQueryCall(conn, connectionToKill) {\n    return this._query(conn, {\n      sql: 'SELECT pg_cancel_backend($1);',\n      bindings: [connectionToKill.processID],\n      options: {},\n    });\n  }\n\n  toPathForJson(jsonPath) {\n    const PG_PATH_REGEX = /^{.*}$/;\n    if (jsonPath.match(PG_PATH_REGEX)) {\n      return jsonPath;\n    }\n    return (\n      '{' +\n      jsonPath\n        .replace(/^(\\$\\.)/, '') // remove the first dollar\n        .replace('.', ',')\n        .replace(/\\[([0-9]+)]/, ',$1') + // transform [number] to ,number\n      '}'\n    );\n  }\n}\n\nObject.assign(Client_PG.prototype, {\n  dialect: 'postgresql',\n\n  driverName: 'pg',\n  canCancelQuery: true,\n\n  _escapeBinding: makeEscape({\n    escapeArray(val, esc) {\n      return esc(arrayString(val, esc));\n    },\n    escapeString(str) {\n      let hasBackslash = false;\n      let escaped = \"'\";\n      for (let i = 0; i < str.length; i++) {\n        const c = str[i];\n        if (c === \"'\") {\n          escaped += c + c;\n        } else if (c === '\\\\') {\n          escaped += c + c;\n          hasBackslash = true;\n        } else {\n          escaped += c;\n        }\n      }\n      escaped += \"'\";\n      if (hasBackslash === true) {\n        escaped = 'E' + escaped;\n      }\n      return escaped;\n    },\n    escapeObject(val, prepareValue, timezone, seen = []) {\n      if (val && typeof val.toPostgres === 'function') {\n        seen = seen || [];\n        if (seen.indexOf(val) !== -1) {\n          throw new Error(\n            `circular reference detected while preparing \"${val}\" for query`\n          );\n        }\n        seen.push(val);\n        return prepareValue(val.toPostgres(prepareValue), seen);\n      }\n      return JSON.stringify(val);\n    },\n  }),\n});\n\nfunction arrayString(arr, esc) {\n  let result = '{';\n  for (let i = 0; i < arr.length; i++) {\n    if (i > 0) result += ',';\n    const val = arr[i];\n    if (val === null || typeof val === 'undefined') {\n      result += 'NULL';\n    } else if (Array.isArray(val)) {\n      result += arrayString(val, esc);\n    } else if (typeof val === 'number') {\n      result += val;\n    } else {\n      result += JSON.stringify(typeof val === 'string' ? val : esc(val));\n    }\n  }\n  return result + '}';\n}\n\nmodule.exports = Client_PG;\n","const QueryCompiler_PG = require('../postgres/query/pg-querycompiler');\nconst {\n  columnize: columnize_,\n  wrap: wrap_,\n  operator: operator_,\n} = require('../../formatter/wrappingFormatter');\n\nclass QueryCompiler_CRDB extends QueryCompiler_PG {\n  truncate() {\n    return `truncate ${this.tableName}`;\n  }\n\n  upsert() {\n    let sql = this._upsert();\n    if (sql === '') return sql;\n    const { returning } = this.single;\n    if (returning) sql += this._returning(returning);\n    return {\n      sql: sql,\n      returning,\n    };\n  }\n\n  _upsert() {\n    const upsertValues = this.single.upsert || [];\n    const sql = this.with() + `upsert into ${this.tableName} `;\n    const body = this._insertBody(upsertValues);\n    return body === '' ? '' : sql + body;\n  }\n\n  _groupOrder(item, type) {\n    // CockroachDB don't support PostgreSQL order nulls first/last syntax, we take the generic one.\n    return this._basicGroupOrder(item, type);\n  }\n\n  whereJsonPath(statement) {\n    let castValue = '';\n    if (!isNaN(statement.value) && parseInt(statement.value)) {\n      castValue = '::int';\n    } else if (!isNaN(statement.value) && parseFloat(statement.value)) {\n      castValue = '::float';\n    } else {\n      castValue = \" #>> '{}'\";\n    }\n    return `json_extract_path(${this._columnClause(\n      statement\n    )}, ${this.client.toArrayPathFromJsonPath(\n      statement.jsonPath,\n      this.builder,\n      this.bindingsHolder\n    )})${castValue} ${operator_(\n      statement.operator,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )} ${this._jsonValueClause(statement)}`;\n  }\n\n  // Json common functions\n  _jsonExtract(nameFunction, params) {\n    let extractions;\n    if (Array.isArray(params.column)) {\n      extractions = params.column;\n    } else {\n      extractions = [params];\n    }\n    return extractions\n      .map((extraction) => {\n        const jsonCol = `json_extract_path(${columnize_(\n          extraction.column || extraction[0],\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        )}, ${this.client.toArrayPathFromJsonPath(\n          extraction.path || extraction[1],\n          this.builder,\n          this.bindingsHolder\n        )})`;\n        const alias = extraction.alias || extraction[2];\n        return alias\n          ? this.client.alias(jsonCol, this.formatter.wrap(alias))\n          : jsonCol;\n      })\n      .join(', ');\n  }\n\n  _onJsonPathEquals(nameJoinFunction, clause) {\n    return (\n      'json_extract_path(' +\n      wrap_(\n        clause.columnFirst,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ', ' +\n      this.client.toArrayPathFromJsonPath(\n        clause.jsonPathFirst,\n        this.builder,\n        this.bindingsHolder\n      ) +\n      ') = json_extract_path(' +\n      wrap_(\n        clause.columnSecond,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ', ' +\n      this.client.toArrayPathFromJsonPath(\n        clause.jsonPathSecond,\n        this.builder,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n}\n\nmodule.exports = QueryCompiler_CRDB;\n","const ColumnCompiler_PG = require('../postgres/schema/pg-columncompiler.js');\n\nclass ColumnCompiler_CRDB extends ColumnCompiler_PG {\n  uuid(options = { primaryKey: false }) {\n    return (\n      'uuid' +\n      (this.tableCompiler._canBeAddPrimaryKey(options)\n        ? ' primary key default gen_random_uuid()'\n        : '')\n    );\n  }\n}\n\nmodule.exports = ColumnCompiler_CRDB;\n","/* eslint max-len: 0 */\n\nconst TableCompiler = require('../postgres/schema/pg-tablecompiler');\n\nclass TableCompiler_CRDB extends TableCompiler {\n  constructor(client, tableBuilder) {\n    super(client, tableBuilder);\n  }\n\n  addColumns(columns, prefix, colCompilers) {\n    if (prefix === this.alterColumnsPrefix) {\n      // alter columns\n      for (const col of colCompilers) {\n        this.client.logger.warn(\n          'Experimental alter column in use, see issue: https://github.com/cockroachdb/cockroach/issues/49329'\n        );\n        this.pushQuery({\n          sql: 'SET enable_experimental_alter_column_type_general = true',\n          bindings: [],\n        });\n        super._addColumn(col);\n      }\n    } else {\n      // base class implementation for normal add\n      super.addColumns(columns, prefix);\n    }\n  }\n\n  dropUnique(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    this.pushQuery(`drop index ${this.tableName()}@${indexName} cascade `);\n  }\n}\n\nmodule.exports = TableCompiler_CRDB;\n","const ViewCompiler_PG = require('../postgres/schema/pg-viewcompiler.js');\n\nclass ViewCompiler_CRDB extends ViewCompiler_PG {\n  renameColumn(from, to) {\n    throw new Error('rename column of views is not supported by this dialect.');\n  }\n\n  defaultTo(column, defaultValue) {\n    throw new Error(\n      'change default values of views is not supported by this dialect.'\n    );\n  }\n}\n\nmodule.exports = ViewCompiler_CRDB;\n","const QueryBuilder = require('../../query/querybuilder');\nconst isEmpty = require('lodash/isEmpty');\n\nmodule.exports = class QueryBuilder_CockroachDB extends QueryBuilder {\n  upsert(values, returning, options) {\n    this._method = 'upsert';\n    if (!isEmpty(returning)) this.returning(returning, options);\n    this._single.upsert = values;\n    return this;\n  }\n};\n","// CockroachDB Client\n// -------\nconst Client_PostgreSQL = require('../postgres');\nconst Transaction = require('../postgres/execution/pg-transaction');\nconst QueryCompiler = require('./crdb-querycompiler');\nconst ColumnCompiler = require('./crdb-columncompiler');\nconst TableCompiler = require('./crdb-tablecompiler');\nconst ViewCompiler = require('./crdb-viewcompiler');\nconst QueryBuilder = require('./crdb-querybuilder');\n\n// Always initialize with the \"QueryBuilder\" and \"QueryCompiler\"\n// objects, which extend the base 'lib/query/builder' and\n// 'lib/query/compiler', respectively.\nclass Client_CockroachDB extends Client_PostgreSQL {\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n\n  queryBuilder() {\n    return new QueryBuilder(this);\n  }\n\n  _parseVersion(versionString) {\n    return versionString.split(' ')[2];\n  }\n\n  async cancelQuery(connectionToKill) {\n    try {\n      return await this._wrappedCancelQueryCall(null, connectionToKill);\n    } catch (err) {\n      this.logger.warn(`Connection Error: ${err}`);\n      throw err;\n    }\n  }\n\n  _wrappedCancelQueryCall(emptyConnection, connectionToKill) {\n    // FixMe https://github.com/cockroachdb/cockroach/issues/41335\n    if (\n      connectionToKill.activeQuery.processID === 0 &&\n      connectionToKill.activeQuery.secretKey === 0\n    ) {\n      return;\n    }\n\n    return connectionToKill.cancel(\n      connectionToKill,\n      connectionToKill.activeQuery\n    );\n  }\n\n  toArrayPathFromJsonPath(jsonPath, builder, bindingsHolder) {\n    return jsonPath\n      .replace(/^(\\$\\.)/, '') // remove the first dollar\n      .replace(/\\[([0-9]+)]/, '.$1')\n      .split('.')\n      .map(\n        function (v) {\n          return this.parameter(v, builder, bindingsHolder);\n        }.bind(this)\n      )\n      .join(', ');\n  }\n}\n\nObject.assign(Client_CockroachDB.prototype, {\n  // The \"dialect\", for reference elsewhere.\n  driverName: 'cockroachdb',\n});\n\nmodule.exports = Client_CockroachDB;\n","const Formatter = require('../../formatter');\n\nclass MSSQL_Formatter extends Formatter {\n  // Accepts a string or array of columns to wrap as appropriate.\n  columnizeWithPrefix(prefix, target) {\n    const columns = typeof target === 'string' ? [target] : target;\n    let str = '',\n      i = -1;\n    while (++i < columns.length) {\n      if (i > 0) str += ', ';\n      str += prefix + this.wrap(columns[i]);\n    }\n    return str;\n  }\n\n  /**\n   * Returns its argument with single quotes escaped, so it can be included into a single-quoted string.\n   *\n   * For example, it converts \"has'quote\" to \"has''quote\".\n   *\n   * This assumes QUOTED_IDENTIFIER ON so it is only ' that need escaping,\n   * never \", because \" cannot be used to quote a string when that's on;\n   * otherwise we'd need to be aware of whether the string is quoted with \" or '.\n   *\n   * This assumption is consistent with the SQL Knex generates.\n   * @param {string} string\n   * @returns {string}\n   */\n  escapingStringDelimiters(string) {\n    return (string || '').replace(/'/g, \"''\");\n  }\n}\n\nmodule.exports = MSSQL_Formatter;\n","const Transaction = require('../../execution/transaction');\nconst debug = require('debug')('knex:tx');\n\nclass Transaction_MSSQL extends Transaction {\n  begin(/** @type {import('tedious').Connection} */ conn) {\n    debug('transaction::begin id=%s', this.txid);\n\n    return new Promise((resolve, reject) => {\n      conn.beginTransaction(\n        (err) => {\n          if (err) {\n            debug(\n              'transaction::begin error id=%s message=%s',\n              this.txid,\n              err.message\n            );\n            return reject(err);\n          }\n          resolve();\n        },\n        this.outerTx ? this.txid : undefined,\n        nameToIsolationLevelEnum(this.isolationLevel)\n      );\n    }).then(this._resolver, this._rejecter);\n  }\n\n  savepoint(conn) {\n    debug('transaction::savepoint id=%s', this.txid);\n\n    return new Promise((resolve, reject) => {\n      conn.saveTransaction(\n        (err) => {\n          if (err) {\n            debug(\n              'transaction::savepoint id=%s message=%s',\n              this.txid,\n              err.message\n            );\n            return reject(err);\n          }\n\n          this.trxClient.emit('query', {\n            __knexUid: this.trxClient.__knexUid,\n            __knexTxId: this.trxClient.__knexTxId,\n            autogenerated: true,\n            sql: this.outerTx\n              ? `SAVE TRANSACTION [${this.txid}]`\n              : `SAVE TRANSACTION`,\n          });\n          resolve();\n        },\n        this.outerTx ? this.txid : undefined\n      );\n    });\n  }\n\n  commit(conn, value) {\n    debug('transaction::commit id=%s', this.txid);\n\n    return new Promise((resolve, reject) => {\n      conn.commitTransaction(\n        (err) => {\n          if (err) {\n            debug(\n              'transaction::commit error id=%s message=%s',\n              this.txid,\n              err.message\n            );\n            return reject(err);\n          }\n\n          this._completed = true;\n          resolve(value);\n        },\n        this.outerTx ? this.txid : undefined\n      );\n    }).then(() => this._resolver(value), this._rejecter);\n  }\n\n  release(conn, value) {\n    return this._resolver(value);\n  }\n\n  rollback(conn, error) {\n    this._completed = true;\n    debug('transaction::rollback id=%s', this.txid);\n\n    return new Promise((_resolve, reject) => {\n      if (!conn.inTransaction) {\n        return reject(\n          error || new Error('Transaction rejected with non-error: undefined')\n        );\n      }\n\n      if (conn.state.name !== 'LoggedIn') {\n        return reject(\n          new Error(\n            \"Can't rollback transaction. There is a request in progress\"\n          )\n        );\n      }\n\n      conn.rollbackTransaction(\n        (err) => {\n          if (err) {\n            debug(\n              'transaction::rollback error id=%s message=%s',\n              this.txid,\n              err.message\n            );\n          }\n\n          reject(\n            err ||\n              error ||\n              new Error('Transaction rejected with non-error: undefined')\n          );\n        },\n        this.outerTx ? this.txid : undefined\n      );\n    }).catch((err) => {\n      if (!error && this.doNotRejectOnRollback) {\n        this._resolver();\n        return;\n      }\n      if (error) {\n        try {\n          err.originalError = error;\n        } catch (_err) {\n          // This is to handle https://github.com/knex/knex/issues/4128\n        }\n      }\n      this._rejecter(err);\n    });\n  }\n\n  rollbackTo(conn, error) {\n    return this.rollback(conn, error).then(\n      () =>\n        void this.trxClient.emit('query', {\n          __knexUid: this.trxClient.__knexUid,\n          __knexTxId: this.trxClient.__knexTxId,\n          autogenerated: true,\n          sql: `ROLLBACK TRANSACTION`,\n        })\n    );\n  }\n}\n\nmodule.exports = Transaction_MSSQL;\n\nfunction nameToIsolationLevelEnum(level) {\n  if (!level) return;\n  level = level.toUpperCase().replace(' ', '_');\n  const knownEnum = isolationEnum[level];\n  if (!knownEnum) {\n    throw new Error(\n      `Unknown Isolation level, was expecting one of: ${JSON.stringify(\n        humanReadableKeys\n      )}`\n    );\n  }\n  return knownEnum;\n}\n\n// Based on: https://github.com/tediousjs/node-mssql/blob/master/lib/isolationlevel.js\nconst isolationEnum = {\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05,\n};\nconst humanReadableKeys = Object.keys(isolationEnum).map((key) =>\n  key.toLowerCase().replace('_', ' ')\n);\n","// MSSQL Query Compiler\n// ------\nconst QueryCompiler = require('../../../query/querycompiler');\n\nconst compact = require('lodash/compact');\nconst identity = require('lodash/identity');\nconst isEmpty = require('lodash/isEmpty');\nconst Raw = require('../../../raw.js');\nconst {\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nconst components = [\n  'columns',\n  'join',\n  'lock',\n  'where',\n  'union',\n  'group',\n  'having',\n  'order',\n  'limit',\n  'offset',\n];\n\nclass QueryCompiler_MSSQL extends QueryCompiler {\n  constructor(client, builder, formatter) {\n    super(client, builder, formatter);\n\n    const { onConflict } = this.single;\n    if (onConflict) {\n      throw new Error('.onConflict() is not supported for mssql.');\n    }\n\n    this._emptyInsertValue = 'default values';\n  }\n\n  with() {\n    // WITH RECURSIVE is a syntax error:\n    // SQL Server does not syntactically distinguish recursive and non-recursive CTEs.\n    // So mark all statements as non-recursive, generate the SQL, then restore.\n    // This approach ensures any changes in base class with() get propagated here.\n    const undoList = [];\n    if (this.grouped.with) {\n      for (const stmt of this.grouped.with) {\n        if (stmt.recursive) {\n          undoList.push(stmt);\n          stmt.recursive = false;\n        }\n      }\n    }\n\n    const result = super.with();\n\n    // Restore the recursive markings, in case this same query gets cloned and passed to other drivers.\n    for (const stmt of undoList) {\n      stmt.recursive = true;\n    }\n    return result;\n  }\n\n  select() {\n    const sql = this.with();\n    const statements = components.map((component) => this[component](this));\n    return sql + compact(statements).join(' ');\n  }\n\n  //#region Insert\n  // Compiles an \"insert\" query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    if (\n      this.single.options &&\n      this.single.options.includeTriggerModifications\n    ) {\n      return this.insertWithTriggers();\n    } else {\n      return this.standardInsert();\n    }\n  }\n\n  insertWithTriggers() {\n    const insertValues = this.single.insert || [];\n    const { returning } = this.single;\n    let sql =\n      this.with() +\n      `${this._buildTempTable(returning)}insert into ${this.tableName} `;\n    const returningSql = returning\n      ? this._returning('insert', returning, true) + ' '\n      : '';\n\n    if (Array.isArray(insertValues)) {\n      if (insertValues.length === 0) {\n        return '';\n      }\n    } else if (typeof insertValues === 'object' && isEmpty(insertValues)) {\n      return {\n        sql:\n          sql +\n          returningSql +\n          this._emptyInsertValue +\n          this._buildReturningSelect(returning),\n        returning,\n      };\n    }\n    sql += this._buildInsertData(insertValues, returningSql);\n\n    if (returning) {\n      sql += this._buildReturningSelect(returning);\n    }\n\n    return {\n      sql,\n      returning,\n    };\n  }\n\n  _buildInsertData(insertValues, returningSql) {\n    let sql = '';\n    const insertData = this._prepInsert(insertValues);\n    if (typeof insertData === 'string') {\n      sql += insertData;\n    } else {\n      if (insertData.columns.length) {\n        sql += `(${this.formatter.columnize(insertData.columns)}`;\n        sql +=\n          `) ${returningSql}values (` +\n          this._buildInsertValues(insertData) +\n          ')';\n      } else if (insertValues.length === 1 && insertValues[0]) {\n        sql += returningSql + this._emptyInsertValue;\n      } else {\n        return '';\n      }\n    }\n    return sql;\n  }\n\n  standardInsert() {\n    const insertValues = this.single.insert || [];\n    let sql = this.with() + `insert into ${this.tableName} `;\n    const { returning } = this.single;\n    const returningSql = returning\n      ? this._returning('insert', returning) + ' '\n      : '';\n\n    if (Array.isArray(insertValues)) {\n      if (insertValues.length === 0) {\n        return '';\n      }\n    } else if (typeof insertValues === 'object' && isEmpty(insertValues)) {\n      return {\n        sql: sql + returningSql + this._emptyInsertValue,\n        returning,\n      };\n    }\n\n    sql += this._buildInsertData(insertValues, returningSql);\n\n    return {\n      sql,\n      returning,\n    };\n  }\n  //#endregion\n\n  //#region Update\n  // Compiles an `update` query, allowing for a return value.\n  update() {\n    if (\n      this.single.options &&\n      this.single.options.includeTriggerModifications\n    ) {\n      return this.updateWithTriggers();\n    } else {\n      return this.standardUpdate();\n    }\n  }\n\n  updateWithTriggers() {\n    const top = this.top();\n    const withSQL = this.with();\n    const updates = this._prepUpdate(this.single.update);\n    const join = this.join();\n    const where = this.where();\n    const order = this.order();\n    const { returning } = this.single;\n    const declaredTemp = this._buildTempTable(returning);\n    return {\n      sql:\n        withSQL +\n        declaredTemp +\n        `update ${top ? top + ' ' : ''}${this.tableName}` +\n        ' set ' +\n        updates.join(', ') +\n        (returning ? ` ${this._returning('update', returning, true)}` : '') +\n        (join ? ` from ${this.tableName} ${join}` : '') +\n        (where ? ` ${where}` : '') +\n        (order ? ` ${order}` : '') +\n        (!returning\n          ? this._returning('rowcount', '@@rowcount')\n          : this._buildReturningSelect(returning)),\n      returning: returning || '@@rowcount',\n    };\n  }\n\n  _formatGroupsItemValue(value, nulls) {\n    const column = super._formatGroupsItemValue(value);\n    // MSSQL dont support 'is null' syntax in order by,\n    // so we override this function and add MSSQL specific syntax.\n    if (nulls && !(value instanceof Raw)) {\n      const collNulls = `IIF(${column} is null,`;\n      if (nulls === 'first') {\n        return `${collNulls}0,1)`;\n      } else if (nulls === 'last') {\n        return `${collNulls}1,0)`;\n      }\n    }\n    return column;\n  }\n\n  standardUpdate() {\n    const top = this.top();\n    const withSQL = this.with();\n    const updates = this._prepUpdate(this.single.update);\n    const join = this.join();\n    const where = this.where();\n    const order = this.order();\n    const { returning } = this.single;\n    return {\n      sql:\n        withSQL +\n        `update ${top ? top + ' ' : ''}${this.tableName}` +\n        ' set ' +\n        updates.join(', ') +\n        (returning ? ` ${this._returning('update', returning)}` : '') +\n        (join ? ` from ${this.tableName} ${join}` : '') +\n        (where ? ` ${where}` : '') +\n        (order ? ` ${order}` : '') +\n        (!returning ? this._returning('rowcount', '@@rowcount') : ''),\n      returning: returning || '@@rowcount',\n    };\n  }\n  //#endregion\n\n  //#region Delete\n  // Compiles a `delete` query.\n  del() {\n    if (\n      this.single.options &&\n      this.single.options.includeTriggerModifications\n    ) {\n      return this.deleteWithTriggers();\n    } else {\n      return this.standardDelete();\n    }\n  }\n\n  deleteWithTriggers() {\n    // Make sure tableName is processed by the formatter first.\n    const withSQL = this.with();\n    const { tableName } = this;\n    const wheres = this.where();\n    const joins = this.join();\n    const { returning } = this.single;\n    const returningStr = returning\n      ? ` ${this._returning('del', returning, true)}`\n      : '';\n    const deleteSelector = joins ? `${tableName}${returningStr} ` : '';\n    return {\n      sql:\n        withSQL +\n        `${this._buildTempTable(\n          returning\n        )}delete ${deleteSelector}from ${tableName}` +\n        (!joins ? returningStr : '') +\n        (joins ? ` ${joins}` : '') +\n        (wheres ? ` ${wheres}` : '') +\n        (!returning\n          ? this._returning('rowcount', '@@rowcount')\n          : this._buildReturningSelect(returning)),\n      returning: returning || '@@rowcount',\n    };\n  }\n\n  standardDelete() {\n    // Make sure tableName is processed by the formatter first.\n    const withSQL = this.with();\n    const { tableName } = this;\n    const wheres = this.where();\n    const joins = this.join();\n    const { returning } = this.single;\n    const returningStr = returning\n      ? ` ${this._returning('del', returning)}`\n      : '';\n    // returning needs to be before \"from\" when using join\n    const deleteSelector = joins ? `${tableName}${returningStr} ` : '';\n    return {\n      sql:\n        withSQL +\n        `delete ${deleteSelector}from ${tableName}` +\n        (!joins ? returningStr : '') +\n        (joins ? ` ${joins}` : '') +\n        (wheres ? ` ${wheres}` : '') +\n        (!returning ? this._returning('rowcount', '@@rowcount') : ''),\n      returning: returning || '@@rowcount',\n    };\n  }\n  //#endregion\n\n  // Compiles the columns in the query, specifying if an item was distinct.\n  columns() {\n    let distinctClause = '';\n    if (this.onlyUnions()) return '';\n    const top = this.top();\n    const hints = this._hintComments();\n    const columns = this.grouped.columns || [];\n    let i = -1,\n      sql = [];\n    if (columns) {\n      while (++i < columns.length) {\n        const stmt = columns[i];\n        if (stmt.distinct) distinctClause = 'distinct ';\n        if (stmt.distinctOn) {\n          distinctClause = this.distinctOn(stmt.value);\n          continue;\n        }\n        if (stmt.type === 'aggregate') {\n          sql.push(...this.aggregate(stmt));\n        } else if (stmt.type === 'aggregateRaw') {\n          sql.push(this.aggregateRaw(stmt));\n        } else if (stmt.type === 'analytic') {\n          sql.push(this.analytic(stmt));\n        } else if (stmt.type === 'json') {\n          sql.push(this.json(stmt));\n        } else if (stmt.value && stmt.value.length > 0) {\n          sql.push(this.formatter.columnize(stmt.value));\n        }\n      }\n    }\n    if (sql.length === 0) sql = ['*'];\n    const select = this.onlyJson() ? '' : 'select ';\n    return (\n      `${select}${hints}${distinctClause}` +\n      (top ? top + ' ' : '') +\n      sql.join(', ') +\n      (this.tableName ? ` from ${this.tableName}` : '')\n    );\n  }\n\n  _returning(method, value, withTrigger) {\n    switch (method) {\n      case 'update':\n      case 'insert':\n        return value\n          ? `output ${this.formatter.columnizeWithPrefix('inserted.', value)}${\n              withTrigger ? ' into #out' : ''\n            }`\n          : '';\n      case 'del':\n        return value\n          ? `output ${this.formatter.columnizeWithPrefix('deleted.', value)}${\n              withTrigger ? ' into #out' : ''\n            }`\n          : '';\n      case 'rowcount':\n        return value ? ';select @@rowcount' : '';\n    }\n  }\n\n  _buildTempTable(values) {\n    // If value is nothing then return an empty string\n    if (values && values.length > 0) {\n      let selections = '';\n\n      // Build values that will be returned from this procedure\n      if (Array.isArray(values)) {\n        selections = values\n          .map((value) => `[t].${this.formatter.columnize(value)}`)\n          .join(',');\n      } else {\n        selections = `[t].${this.formatter.columnize(values)}`;\n      }\n\n      // Force #out to be correctly populated with the correct column structure.\n      let sql = `select top(0) ${selections} into #out `;\n      sql += `from ${this.tableName} as t `;\n      sql += `left join ${this.tableName} on 0=1;`;\n\n      return sql;\n    }\n\n    return '';\n  }\n\n  _buildReturningSelect(values) {\n    // If value is nothing then return an empty string\n    if (values && values.length > 0) {\n      let selections = '';\n\n      // Build columns to return\n      if (Array.isArray(values)) {\n        selections = values\n          .map((value) => `${this.formatter.columnize(value)}`)\n          .join(',');\n      } else {\n        selections = this.formatter.columnize(values);\n      }\n\n      // Get the returned values\n      let sql = `; select ${selections} from #out; `;\n      // Drop the temp table to prevent memory leaks\n      sql += `drop table #out;`;\n\n      return sql;\n    }\n\n    return '';\n  }\n\n  // Compiles a `truncate` query.\n  truncate() {\n    return `truncate table ${this.tableName}`;\n  }\n\n  forUpdate() {\n    // this doesn't work exacltly as it should, one should also mention index while locking\n    // https://stackoverflow.com/a/9818448/360060\n    return 'with (UPDLOCK)';\n  }\n\n  forShare() {\n    // http://www.sqlteam.com/article/introduction-to-locking-in-sql-server\n    return 'with (HOLDLOCK)';\n  }\n\n  // Compiles a `columnInfo` query.\n  columnInfo() {\n    const column = this.single.columnInfo;\n    let schema = this.single.schema;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    if (schema) {\n      schema = this.client.customWrapIdentifier(schema, identity);\n    }\n\n    // GOTCHA: INFORMATION_SCHEMA.COLUMNS must be capitalized to work when the database has a case-sensitive collation. [#4573]\n    let sql = `select [COLUMN_NAME], [COLUMN_DEFAULT], [DATA_TYPE], [CHARACTER_MAXIMUM_LENGTH], [IS_NULLABLE] from INFORMATION_SCHEMA.COLUMNS where table_name = ? and table_catalog = ?`;\n    const bindings = [table, this.client.database()];\n\n    if (schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(schema);\n    } else {\n      sql += ` and table_schema = 'dbo'`;\n    }\n\n    return {\n      sql,\n      bindings: bindings,\n      output(resp) {\n        const out = resp.reduce((columns, val) => {\n          columns[val[0].value] = {\n            defaultValue: val[1].value,\n            type: val[2].value,\n            maxLength: val[3].value,\n            nullable: val[4].value === 'YES',\n          };\n          return columns;\n        }, {});\n        return (column && out[column]) || out;\n      },\n    };\n  }\n\n  top() {\n    const noLimit = !this.single.limit && this.single.limit !== 0;\n    const noOffset = !this.single.offset;\n    if (noLimit || !noOffset) return '';\n    return `top (${this._getValueOrParameterFromAttribute('limit')})`;\n  }\n\n  limit() {\n    return '';\n  }\n\n  offset() {\n    const noLimit = !this.single.limit && this.single.limit !== 0;\n    const noOffset = !this.single.offset;\n    if (noOffset) return '';\n    let offset = `offset ${\n      noOffset ? '0' : this._getValueOrParameterFromAttribute('offset')\n    } rows`;\n    if (!noLimit) {\n      offset += ` fetch next ${this._getValueOrParameterFromAttribute(\n        'limit'\n      )} rows only`;\n    }\n    return offset;\n  }\n\n  whereLike(statement) {\n    return `${this._columnClause(\n      statement\n    )} collate SQL_Latin1_General_CP1_CS_AS ${this._not(\n      statement,\n      'like '\n    )}${this._valueClause(statement)}`;\n  }\n\n  whereILike(statement) {\n    return `${this._columnClause(\n      statement\n    )} collate SQL_Latin1_General_CP1_CI_AS ${this._not(\n      statement,\n      'like '\n    )}${this._valueClause(statement)}`;\n  }\n\n  jsonExtract(params) {\n    // JSON_VALUE return NULL if we query object or array\n    // JSON_QUERY return NULL if we query literal/single value\n    return this._jsonExtract(\n      params.singleValue ? 'JSON_VALUE' : 'JSON_QUERY',\n      params\n    );\n  }\n\n  jsonSet(params) {\n    return this._jsonSet('JSON_MODIFY', params);\n  }\n\n  jsonInsert(params) {\n    return this._jsonSet('JSON_MODIFY', params);\n  }\n\n  jsonRemove(params) {\n    const jsonCol = `JSON_MODIFY(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )},${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )}, NULL)`;\n    return params.alias\n      ? this.client.alias(jsonCol, this.formatter.wrap(params.alias))\n      : jsonCol;\n  }\n\n  whereJsonPath(statement) {\n    return this._whereJsonPath('JSON_VALUE', statement);\n  }\n\n  whereJsonSupersetOf(statement) {\n    throw new Error(\n      'Json superset where clause not actually supported by MSSQL'\n    );\n  }\n\n  whereJsonSubsetOf(statement) {\n    throw new Error('Json subset where clause not actually supported by MSSQL');\n  }\n\n  _getExtracts(statement, operator) {\n    const column = columnize_(\n      statement.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n    return (\n      Array.isArray(statement.values) ? statement.values : [statement.values]\n    )\n      .map(function (value) {\n        return (\n          'JSON_VALUE(' +\n          column +\n          ',' +\n          this.client.parameter(value, this.builder, this.bindingsHolder) +\n          ')'\n        );\n      }, this)\n      .join(operator);\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('JSON_VALUE', clause);\n  }\n}\n\n// Set the QueryBuilder & QueryCompiler on the client object,\n// in case anyone wants to modify things to suit their own purposes.\nmodule.exports = QueryCompiler_MSSQL;\n","// MySQL Schema Compiler\n// -------\nconst SchemaCompiler = require('../../../schema/compiler');\n\nclass SchemaCompiler_MSSQL extends SchemaCompiler {\n  constructor(client, builder) {\n    super(client, builder);\n  }\n\n  dropTableIfExists(tableName) {\n    const name = this.formatter.wrap(prefixedTableName(this.schema, tableName));\n    this.pushQuery(\n      `if object_id('${name}', 'U') is not null DROP TABLE ${name}`\n    );\n  }\n\n  dropViewIfExists(viewName) {\n    const name = this.formatter.wrap(prefixedTableName(this.schema, viewName));\n    this.pushQuery(\n      `if object_id('${name}', 'V') is not null DROP VIEW ${name}`\n    );\n  }\n\n  // Rename a table on the schema.\n  renameTable(tableName, to) {\n    this.pushQuery(\n      `exec sp_rename ${this.client.parameter(\n        prefixedTableName(this.schema, tableName),\n        this.builder,\n        this.bindingsHolder\n      )}, ${this.client.parameter(to, this.builder, this.bindingsHolder)}`\n    );\n  }\n\n  renameView(viewTable, to) {\n    this.pushQuery(\n      `exec sp_rename ${this.client.parameter(\n        prefixedTableName(this.schema, viewTable),\n        this.builder,\n        this.bindingsHolder\n      )}, ${this.client.parameter(to, this.builder, this.bindingsHolder)}`\n    );\n  }\n\n  // Check whether a table exists on the query.\n  hasTable(tableName) {\n    const formattedTable = this.client.parameter(\n      prefixedTableName(this.schema, tableName),\n      this.builder,\n      this.bindingsHolder\n    );\n    const bindings = [tableName];\n    let sql =\n      `SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES ` +\n      `WHERE TABLE_NAME = ${formattedTable}`;\n\n    if (this.schema) {\n      sql += ' AND TABLE_SCHEMA = ?';\n      bindings.push(this.schema);\n    }\n\n    this.pushQuery({ sql, bindings, output: (resp) => resp.length > 0 });\n  }\n\n  // Check whether a column exists on the schema.\n  hasColumn(tableName, column) {\n    const formattedColumn = this.client.parameter(\n      column,\n      this.builder,\n      this.bindingsHolder\n    );\n    const formattedTable = this.client.parameter(\n      this.formatter.wrap(prefixedTableName(this.schema, tableName)),\n      this.builder,\n      this.bindingsHolder\n    );\n    const sql =\n      `select object_id from sys.columns ` +\n      `where name = ${formattedColumn} ` +\n      `and object_id = object_id(${formattedTable})`;\n    this.pushQuery({ sql, output: (resp) => resp.length > 0 });\n  }\n}\n\nSchemaCompiler_MSSQL.prototype.dropTablePrefix = 'DROP TABLE ';\n\nfunction prefixedTableName(prefix, table) {\n  return prefix ? `${prefix}.${table}` : table;\n}\n\nmodule.exports = SchemaCompiler_MSSQL;\n","/* eslint max-len:0 */\n\n// MSSQL Table Builder & Compiler\n// -------\nconst TableCompiler = require('../../../schema/tablecompiler');\nconst helpers = require('../../../util/helpers');\nconst { isObject } = require('../../../util/is');\n\n// Table Compiler\n// ------\n\nclass TableCompiler_MSSQL extends TableCompiler {\n  constructor(client, tableBuilder) {\n    super(client, tableBuilder);\n  }\n\n  createQuery(columns, ifNot, like) {\n    let createStatement = ifNot\n      ? `if object_id('${this.tableName()}', 'U') is null `\n      : '';\n\n    if (like) {\n      // This query copy only columns and not all indexes and keys like other databases.\n      createStatement += `SELECT * INTO ${this.tableName()} FROM ${this.tableNameLike()} WHERE 0=1`;\n    } else {\n      createStatement +=\n        'CREATE TABLE ' +\n        this.tableName() +\n        (this._formatting ? ' (\\n    ' : ' (') +\n        columns.sql.join(this._formatting ? ',\\n    ' : ', ') +\n        this._addChecks() +\n        ')';\n    }\n\n    this.pushQuery(createStatement);\n\n    if (this.single.comment) {\n      this.comment(this.single.comment);\n    }\n    if (like) {\n      this.addColumns(columns, this.addColumnsPrefix);\n    }\n  }\n\n  comment(/** @type {string} */ comment) {\n    if (!comment) {\n      return;\n    }\n\n    // XXX: This is a byte limit, not character, so we cannot definitively say they'll exceed the limit without server collation info.\n    // When I checked in SQL Server 2019, the ctext column in sys.syscomments is defined as a varbinary(8000), so it doesn't even have its own defined collation.\n    if (comment.length > 7500 / 2) {\n      this.client.logger.warn(\n        'Your comment might be longer than the max comment length for MSSQL of 7,500 bytes.'\n      );\n    }\n\n    // See: https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-addextendedproperty-transact-sql?view=sql-server-ver15#f-adding-an-extended-property-to-a-table\n    const value = this.formatter.escapingStringDelimiters(comment);\n    const level0name = this.formatter.escapingStringDelimiters(\n      this.schemaNameRaw || 'dbo'\n    );\n    const level1name = this.formatter.escapingStringDelimiters(\n      this.tableNameRaw\n    );\n    const args = `N'MS_Description', N'${value}', N'Schema', N'${level0name}', N'Table', N'${level1name}'`;\n    const isAlreadyDefined = `EXISTS(SELECT * FROM sys.fn_listextendedproperty(N'MS_Description', N'Schema', N'${level0name}', N'Table', N'${level1name}', NULL, NULL))`;\n    this.pushQuery(\n      `IF ${isAlreadyDefined}\\n  EXEC sys.sp_updateextendedproperty ${args}\\nELSE\\n  EXEC sys.sp_addextendedproperty ${args}`\n    );\n  }\n\n  // Compiles column add.  Multiple columns need only one ADD clause (not one ADD per column) so core addColumns doesn't work.  #1348\n  addColumns(columns, prefix) {\n    prefix = prefix || this.addColumnsPrefix;\n\n    if (columns.sql.length > 0) {\n      this.pushQuery({\n        sql:\n          (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +\n          this.tableName() +\n          ' ' +\n          prefix +\n          columns.sql.join(', '),\n        bindings: columns.bindings,\n      });\n    }\n  }\n\n  alterColumns(columns, colBuilder) {\n    for (let i = 0, l = colBuilder.length; i < l; i++) {\n      const builder = colBuilder[i];\n      if (builder.modified.defaultTo) {\n        const schema = this.schemaNameRaw || 'dbo';\n        const baseQuery = `\n              DECLARE @constraint varchar(100) = (SELECT default_constraints.name\n                                                  FROM sys.all_columns\n                                                  INNER JOIN sys.tables\n                                                    ON all_columns.object_id = tables.object_id\n                                                  INNER JOIN sys.schemas\n                                                    ON tables.schema_id = schemas.schema_id\n                                                  INNER JOIN sys.default_constraints\n                                                    ON all_columns.default_object_id = default_constraints.object_id\n                                                  WHERE schemas.name = '${schema}'\n                                                  AND tables.name = '${\n                                                    this.tableNameRaw\n                                                  }'\n                                                  AND all_columns.name = '${builder.getColumnName()}')\n\n              IF @constraint IS NOT NULL EXEC('ALTER TABLE ${\n                this.tableNameRaw\n              } DROP CONSTRAINT ' + @constraint)`;\n        this.pushQuery(baseQuery);\n      }\n    }\n    // in SQL server only one column can be altered at a time\n    columns.sql.forEach((sql) => {\n      this.pushQuery({\n        sql:\n          (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +\n          this.tableName() +\n          ' ' +\n          (this.lowerCase\n            ? this.alterColumnPrefix.toLowerCase()\n            : this.alterColumnPrefix) +\n          sql,\n        bindings: columns.bindings,\n      });\n    });\n  }\n\n  // Compiles column drop.  Multiple columns need only one DROP clause (not one DROP per column) so core dropColumn doesn't work.  #1348\n  dropColumn() {\n    const _this2 = this;\n    const columns = helpers.normalizeArr.apply(null, arguments);\n    const columnsArray = Array.isArray(columns) ? columns : [columns];\n    const drops = columnsArray.map((column) => _this2.formatter.wrap(column));\n    const schema = this.schemaNameRaw || 'dbo';\n\n    for (const column of columns) {\n      const baseQuery = `\n              DECLARE @constraint varchar(100) = (SELECT default_constraints.name\n                                                  FROM sys.all_columns\n                                                  INNER JOIN sys.tables\n                                                    ON all_columns.object_id = tables.object_id\n                                                  INNER JOIN sys.schemas\n                                                    ON tables.schema_id = schemas.schema_id\n                                                  INNER JOIN sys.default_constraints\n                                                    ON all_columns.default_object_id = default_constraints.object_id\n                                                  WHERE schemas.name = '${schema}'\n                                                  AND tables.name = '${this.tableNameRaw}'\n                                                  AND all_columns.name = '${column}')\n\n              IF @constraint IS NOT NULL EXEC('ALTER TABLE ${this.tableNameRaw} DROP CONSTRAINT ' + @constraint)`;\n      this.pushQuery(baseQuery);\n    }\n    this.pushQuery(\n      (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +\n        this.tableName() +\n        ' ' +\n        this.dropColumnPrefix +\n        drops.join(', ')\n    );\n  }\n\n  changeType() {}\n\n  // Renames a column on the table.\n  renameColumn(from, to) {\n    this.pushQuery(\n      `exec sp_rename ${this.client.parameter(\n        this.tableName() + '.' + from,\n        this.tableBuilder,\n        this.bindingsHolder\n      )}, ${this.client.parameter(\n        to,\n        this.tableBuilder,\n        this.bindingsHolder\n      )}, 'COLUMN'`\n    );\n  }\n\n  dropFKRefs(runner, refs) {\n    const formatter = this.client.formatter(this.tableBuilder);\n    return Promise.all(\n      refs.map(function (ref) {\n        const constraintName = formatter.wrap(ref.CONSTRAINT_NAME);\n        const tableName = formatter.wrap(ref.TABLE_NAME);\n        return runner.query({\n          sql: `ALTER TABLE ${tableName} DROP CONSTRAINT ${constraintName}`,\n        });\n      })\n    );\n  }\n\n  createFKRefs(runner, refs) {\n    const formatter = this.client.formatter(this.tableBuilder);\n\n    return Promise.all(\n      refs.map(function (ref) {\n        const tableName = formatter.wrap(ref.TABLE_NAME);\n        const keyName = formatter.wrap(ref.CONSTRAINT_NAME);\n        const column = formatter.columnize(ref.COLUMN_NAME);\n        const references = formatter.columnize(ref.REFERENCED_COLUMN_NAME);\n        const inTable = formatter.wrap(ref.REFERENCED_TABLE_NAME);\n        const onUpdate = ` ON UPDATE ${ref.UPDATE_RULE}`;\n        const onDelete = ` ON DELETE ${ref.DELETE_RULE}`;\n\n        return runner.query({\n          sql:\n            `ALTER TABLE ${tableName} ADD CONSTRAINT ${keyName}` +\n            ' FOREIGN KEY (' +\n            column +\n            ') REFERENCES ' +\n            inTable +\n            ' (' +\n            references +\n            ')' +\n            onUpdate +\n            onDelete,\n        });\n      })\n    );\n  }\n\n  index(columns, indexName, options) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n\n    let predicate;\n    if (isObject(options)) {\n      ({ predicate } = options);\n    }\n    const predicateQuery = predicate\n      ? ' ' + this.client.queryCompiler(predicate).where()\n      : '';\n    this.pushQuery(\n      `CREATE INDEX ${indexName} ON ${this.tableName()} (${this.formatter.columnize(\n        columns\n      )})${predicateQuery}`\n    );\n  }\n\n  /**\n   * Create a primary key.\n   *\n   * @param {undefined | string | string[]} columns\n   * @param {string | {constraintName: string, deferrable?: 'not deferrable'|'deferred'|'immediate' }} constraintName\n   */\n  primary(columns, constraintName) {\n    let deferrable;\n    if (isObject(constraintName)) {\n      ({ constraintName, deferrable } = constraintName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `mssql: primary key constraint [${constraintName}] will not be deferrable ${deferrable} because mssql does not support deferred constraints.`\n      );\n    }\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n    if (!this.forCreate) {\n      this.pushQuery(\n        `ALTER TABLE ${this.tableName()} ADD CONSTRAINT ${constraintName} PRIMARY KEY (${this.formatter.columnize(\n          columns\n        )})`\n      );\n    } else {\n      this.pushQuery(\n        `CONSTRAINT ${constraintName} PRIMARY KEY (${this.formatter.columnize(\n          columns\n        )})`\n      );\n    }\n  }\n\n  /**\n   * Create a unique index.\n   *\n   * @param {string | string[]} columns\n   * @param {string | {indexName: undefined | string, deferrable?: 'not deferrable'|'deferred'|'immediate', useConstraint?: true|false }} indexName\n   */\n  unique(columns, indexName) {\n    /** @type {string | undefined} */\n    let deferrable;\n    let useConstraint = false;\n    if (isObject(indexName)) {\n      ({ indexName, deferrable, useConstraint } = indexName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `mssql: unique index [${indexName}] will not be deferrable ${deferrable} because mssql does not support deferred constraints.`\n      );\n    }\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n\n    if (!Array.isArray(columns)) {\n      columns = [columns];\n    }\n\n    const whereAllTheColumnsAreNotNull = columns\n      .map((column) => this.formatter.columnize(column) + ' IS NOT NULL')\n      .join(' AND ');\n\n    if (useConstraint) {\n      // mssql supports unique indexes and unique constraints.\n      // unique indexes cannot be used with foreign key relationships hence unique constraints are used instead.\n      this.pushQuery(\n        `ALTER TABLE ${this.tableName()} ADD CONSTRAINT ${indexName} UNIQUE (${this.formatter.columnize(\n          columns\n        )})`\n      );\n    } else {\n      // make unique constraint that allows null https://stackoverflow.com/a/767702/360060\n      // to be more or less compatible with other DBs (if any of the columns is NULL then \"duplicates\" are allowed)\n      this.pushQuery(\n        `CREATE UNIQUE INDEX ${indexName} ON ${this.tableName()} (${this.formatter.columnize(\n          columns\n        )}) WHERE ${whereAllTheColumnsAreNotNull}`\n      );\n    }\n  }\n\n  // Compile a drop index command.\n  dropIndex(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    this.pushQuery(`DROP INDEX ${indexName} ON ${this.tableName()}`);\n  }\n\n  // Compile a drop foreign key command.\n  dropForeign(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('foreign', this.tableNameRaw, columns);\n    this.pushQuery(\n      `ALTER TABLE ${this.tableName()} DROP CONSTRAINT ${indexName}`\n    );\n  }\n\n  // Compile a drop primary key command.\n  dropPrimary(constraintName) {\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n    this.pushQuery(\n      `ALTER TABLE ${this.tableName()} DROP CONSTRAINT ${constraintName}`\n    );\n  }\n\n  // Compile a drop unique key command.\n  dropUnique(column, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, column);\n    this.pushQuery(`DROP INDEX ${indexName} ON ${this.tableName()}`);\n  }\n}\n\nTableCompiler_MSSQL.prototype.createAlterTableMethods = ['foreign', 'primary'];\nTableCompiler_MSSQL.prototype.lowerCase = false;\n\nTableCompiler_MSSQL.prototype.addColumnsPrefix = 'ADD ';\nTableCompiler_MSSQL.prototype.dropColumnPrefix = 'DROP COLUMN ';\nTableCompiler_MSSQL.prototype.alterColumnPrefix = 'ALTER COLUMN ';\n\nmodule.exports = TableCompiler_MSSQL;\n","/* eslint max-len: 0 */\n\nconst ViewCompiler = require('../../../schema/viewcompiler.js');\nconst {\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nclass ViewCompiler_MSSQL extends ViewCompiler {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n\n  createQuery(columns, selectQuery, materialized, replace) {\n    const createStatement = 'CREATE ' + (replace ? 'OR ALTER ' : '') + 'VIEW ';\n    let sql = createStatement + this.viewName();\n\n    const columnList = columns\n      ? ' (' +\n        columnize_(\n          columns,\n          this.viewBuilder,\n          this.client,\n          this.bindingsHolder\n        ) +\n        ')'\n      : '';\n\n    sql += columnList;\n    sql += ' AS ';\n    sql += selectQuery.toString();\n    this.pushQuery({\n      sql,\n    });\n  }\n\n  renameColumn(from, to) {\n    this.pushQuery(\n      `exec sp_rename ${this.client.parameter(\n        this.viewName() + '.' + from,\n        this.viewBuilder,\n        this.bindingsHolder\n      )}, ${this.client.parameter(\n        to,\n        this.viewBuilder,\n        this.bindingsHolder\n      )}, 'COLUMN'`\n    );\n  }\n\n  createOrReplace() {\n    this.createQuery(this.columns, this.selectQuery, false, true);\n  }\n}\n\nmodule.exports = ViewCompiler_MSSQL;\n","// MSSQL Column Compiler\n// -------\nconst ColumnCompiler = require('../../../schema/columncompiler');\nconst { toNumber } = require('../../../util/helpers');\nconst { formatDefault } = require('../../../formatter/formatterUtils');\nconst { operator: operator_ } = require('../../../formatter/wrappingFormatter');\n\nclass ColumnCompiler_MSSQL extends ColumnCompiler {\n  constructor(client, tableCompiler, columnBuilder) {\n    super(client, tableCompiler, columnBuilder);\n    this.modifiers = ['nullable', 'defaultTo', 'first', 'after', 'comment'];\n    this._addCheckModifiers();\n  }\n\n  // Types\n  // ------\n\n  double(precision, scale) {\n    return 'float';\n  }\n\n  floating(precision, scale) {\n    // ignore precicion / scale which is mysql specific stuff\n    return `float`;\n  }\n\n  integer() {\n    // mssql does not support length\n    return 'int';\n  }\n\n  tinyint() {\n    // mssql does not support length\n    return 'tinyint';\n  }\n\n  varchar(length) {\n    return `nvarchar(${toNumber(length, 255)})`;\n  }\n\n  timestamp({ useTz = false } = {}) {\n    return useTz ? 'datetimeoffset' : 'datetime2';\n  }\n\n  bit(length) {\n    if (length > 1) {\n      this.client.logger.warn('Bit field is exactly 1 bit length for MSSQL');\n    }\n    return 'bit';\n  }\n\n  binary(length) {\n    return length ? `varbinary(${toNumber(length)})` : 'varbinary(max)';\n  }\n\n  // Modifiers\n  // ------\n\n  first() {\n    this.client.logger.warn('Column first modifier not available for MSSQL');\n    return '';\n  }\n\n  after(column) {\n    this.client.logger.warn('Column after modifier not available for MSSQL');\n    return '';\n  }\n\n  defaultTo(value, { constraintName } = {}) {\n    const formattedValue = formatDefault(value, this.type, this.client);\n    constraintName =\n      typeof constraintName !== 'undefined'\n        ? constraintName\n        : `${\n            this.tableCompiler.tableNameRaw\n          }_${this.getColumnName()}_default`.toLowerCase();\n    if (this.columnBuilder._method === 'alter') {\n      this.pushAdditional(function () {\n        this.pushQuery(\n          `ALTER TABLE ${this.tableCompiler.tableName()} ADD CONSTRAINT ${this.formatter.wrap(\n            constraintName\n          )} DEFAULT ${formattedValue} FOR ${this.formatter.wrap(\n            this.getColumnName()\n          )}`\n        );\n      });\n      return '';\n    }\n    if (!constraintName) {\n      return `DEFAULT ${formattedValue}`;\n    }\n    return `CONSTRAINT ${this.formatter.wrap(\n      constraintName\n    )} DEFAULT ${formattedValue}`;\n  }\n\n  comment(/** @type {string} */ comment) {\n    if (!comment) {\n      return;\n    }\n\n    // XXX: This is a byte limit, not character, so we cannot definitively say they'll exceed the limit without database collation info.\n    // (Yes, even if the column has its own collation, the sqlvariant still uses the database collation.)\n    // I'm not sure we even need to raise a warning, as MSSQL will return an error when the limit is exceeded itself.\n    if (comment && comment.length > 7500 / 2) {\n      this.client.logger.warn(\n        'Your comment might be longer than the max comment length for MSSQL of 7,500 bytes.'\n      );\n    }\n\n    // See: https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-addextendedproperty-transact-sql?view=sql-server-ver15#b-adding-an-extended-property-to-a-column-in-a-table\n    const value = this.formatter.escapingStringDelimiters(comment);\n    const level0name = this.tableCompiler.schemaNameRaw || 'dbo';\n    const level1name = this.formatter.escapingStringDelimiters(\n      this.tableCompiler.tableNameRaw\n    );\n    const level2name = this.formatter.escapingStringDelimiters(\n      this.args[0] || this.defaults('columnName')\n    );\n\n    const args = `N'MS_Description', N'${value}', N'Schema', N'${level0name}', N'Table', N'${level1name}', N'Column', N'${level2name}'`;\n\n    this.pushAdditional(function () {\n      const isAlreadyDefined = `EXISTS(SELECT * FROM sys.fn_listextendedproperty(N'MS_Description', N'Schema', N'${level0name}', N'Table', N'${level1name}', N'Column', N'${level2name}'))`;\n      this.pushQuery(\n        `IF ${isAlreadyDefined}\\n  EXEC sys.sp_updateextendedproperty ${args}\\nELSE\\n  EXEC sys.sp_addextendedproperty ${args}`\n      );\n    });\n    return '';\n  }\n\n  checkLength(operator, length, constraintName) {\n    return this._check(\n      `LEN(${this.formatter.wrap(this.getColumnName())}) ${operator_(\n        operator,\n        this.columnBuilder,\n        this.bindingsHolder\n      )} ${toNumber(length)}`,\n      constraintName\n    );\n  }\n\n  checkRegex(regex, constraintName) {\n    return this._check(\n      `${this.formatter.wrap(\n        this.getColumnName()\n      )} LIKE ${this.client._escapeBinding('%' + regex + '%')}`,\n      constraintName\n    );\n  }\n\n  increments(options = { primaryKey: true }) {\n    return (\n      'int identity(1,1) not null' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n\n  bigincrements(options = { primaryKey: true }) {\n    return (\n      'bigint identity(1,1) not null' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n}\n\nColumnCompiler_MSSQL.prototype.bigint = 'bigint';\nColumnCompiler_MSSQL.prototype.mediumint = 'int';\nColumnCompiler_MSSQL.prototype.smallint = 'smallint';\nColumnCompiler_MSSQL.prototype.text = 'nvarchar(max)';\nColumnCompiler_MSSQL.prototype.mediumtext = 'nvarchar(max)';\nColumnCompiler_MSSQL.prototype.longtext = 'nvarchar(max)';\nColumnCompiler_MSSQL.prototype.json = ColumnCompiler_MSSQL.prototype.jsonb =\n  'nvarchar(max)';\n\n// TODO: mssql supports check constraints as of SQL Server 2008\n// so make enu here more like postgres\nColumnCompiler_MSSQL.prototype.enu = 'nvarchar(100)';\nColumnCompiler_MSSQL.prototype.uuid = ({ useBinaryUuid = false } = {}) =>\n  useBinaryUuid ? 'binary(16)' : 'uniqueidentifier';\n\nColumnCompiler_MSSQL.prototype.datetime = 'datetime2';\nColumnCompiler_MSSQL.prototype.bool = 'bit';\n\nmodule.exports = ColumnCompiler_MSSQL;\n","// MSSQL Client\n// -------\nconst map = require('lodash/map');\nconst isNil = require('lodash/isNil');\n\nconst Client = require('../../client');\nconst MSSQL_Formatter = require('./mssql-formatter');\nconst Transaction = require('./transaction');\nconst QueryCompiler = require('./query/mssql-querycompiler');\nconst SchemaCompiler = require('./schema/mssql-compiler');\nconst TableCompiler = require('./schema/mssql-tablecompiler');\nconst ViewCompiler = require('./schema/mssql-viewcompiler');\nconst ColumnCompiler = require('./schema/mssql-columncompiler');\nconst QueryBuilder = require('../../query/querybuilder');\n\nconst debug = require('debug')('knex:mssql');\n\nconst SQL_INT4 = { MIN: -2147483648, MAX: 2147483647 };\nconst SQL_BIGINT_SAFE = { MIN: -9007199254740991, MAX: 9007199254740991 };\n\n// Always initialize with the \"QueryBuilder\" and \"QueryCompiler\" objects, which\n// extend the base 'lib/query/builder' and 'lib/query/compiler', respectively.\nclass Client_MSSQL extends Client {\n  constructor(config = {}) {\n    super(config);\n  }\n\n  /**\n   * @param {import('knex').Config} options\n   */\n  _generateConnection() {\n    const settings = this.connectionSettings;\n    settings.options = settings.options || {};\n\n    /** @type {import('tedious').ConnectionConfig} */\n    const cfg = {\n      authentication: {\n        type: settings.type || 'default',\n        options: {\n          userName: settings.userName || settings.user,\n          password: settings.password,\n          domain: settings.domain,\n          token: settings.token,\n          clientId: settings.clientId,\n          clientSecret: settings.clientSecret,\n          tenantId: settings.tenantId,\n          msiEndpoint: settings.msiEndpoint,\n        },\n      },\n      server: settings.server || settings.host,\n      options: {\n        database: settings.database,\n        encrypt: settings.encrypt || false,\n        port: settings.port || 1433,\n        connectTimeout: settings.connectionTimeout || settings.timeout || 15000,\n        requestTimeout: !isNil(settings.requestTimeout)\n          ? settings.requestTimeout\n          : 15000,\n        rowCollectionOnDone: false,\n        rowCollectionOnRequestCompletion: false,\n        useColumnNames: false,\n        tdsVersion: settings.options.tdsVersion || '7_4',\n        appName: settings.options.appName || 'knex',\n        trustServerCertificate: false,\n        ...settings.options,\n      },\n    };\n\n    // tedious always connect via tcp when port is specified\n    if (cfg.options.instanceName) delete cfg.options.port;\n\n    if (isNaN(cfg.options.requestTimeout)) cfg.options.requestTimeout = 15000;\n    if (cfg.options.requestTimeout === Infinity) cfg.options.requestTimeout = 0;\n    if (cfg.options.requestTimeout < 0) cfg.options.requestTimeout = 0;\n\n    if (settings.debug) {\n      cfg.options.debug = {\n        packet: true,\n        token: true,\n        data: true,\n        payload: true,\n      };\n    }\n\n    return cfg;\n  }\n\n  _driver() {\n    const tds = require('tedious');\n\n    return tds;\n  }\n\n  formatter() {\n    return new MSSQL_Formatter(this, ...arguments);\n  }\n\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  queryCompiler() {\n    return new QueryCompiler(this, ...arguments);\n  }\n\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n  queryBuilder() {\n    const b = new QueryBuilder(this);\n    return b;\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  wrapIdentifierImpl(value) {\n    if (value === '*') {\n      return '*';\n    }\n\n    return `[${value.replace(/[[\\]]+/g, '')}]`;\n  }\n\n  // Get a raw connection, called by the `pool` whenever a new\n  // connection needs to be added to the pool.\n  acquireRawConnection() {\n    return new Promise((resolver, rejecter) => {\n      debug('connection::connection new connection requested');\n      const Driver = this._driver();\n      const settings = Object.assign({}, this._generateConnection());\n\n      const connection = new Driver.Connection(settings);\n\n      connection.connect((err) => {\n        if (err) {\n          debug('connection::connect error: %s', err.message);\n          return rejecter(err);\n        }\n\n        debug('connection::connect connected to server');\n\n        connection.connected = true;\n        connection.on('error', (e) => {\n          debug('connection::error message=%s', e.message);\n          connection.__knex__disposed = e;\n          connection.connected = false;\n        });\n\n        connection.once('end', () => {\n          connection.connected = false;\n          connection.__knex__disposed = 'Connection to server was terminated.';\n          debug('connection::end connection ended.');\n        });\n\n        return resolver(connection);\n      });\n    });\n  }\n\n  validateConnection(connection) {\n    return connection && connection.connected;\n  }\n\n  // Used to explicitly close a connection, called internally by the pool\n  // when a connection times out or the pool is shutdown.\n  destroyRawConnection(connection) {\n    debug('connection::destroy');\n\n    return new Promise((resolve) => {\n      connection.once('end', () => {\n        resolve();\n      });\n\n      connection.close();\n    });\n  }\n\n  // Position the bindings for the query.\n  positionBindings(sql) {\n    let questionCount = -1;\n    return sql.replace(/\\\\?\\?/g, (match) => {\n      if (match === '\\\\?') {\n        return '?';\n      }\n\n      questionCount += 1;\n      return `@p${questionCount}`;\n    });\n  }\n\n  _chomp(connection) {\n    if (connection.state.name === 'LoggedIn') {\n      const nextRequest = this.requestQueue.pop();\n      if (nextRequest) {\n        debug(\n          'connection::query executing query, %d more in queue',\n          this.requestQueue.length\n        );\n\n        connection.execSql(nextRequest);\n      }\n    }\n  }\n\n  _enqueueRequest(request, connection) {\n    this.requestQueue.push(request);\n    this._chomp(connection);\n  }\n\n  _makeRequest(query, callback) {\n    const Driver = this._driver();\n    const sql = typeof query === 'string' ? query : query.sql;\n    let rowCount = 0;\n\n    if (!sql) throw new Error('The query is empty');\n\n    debug('request::request sql=%s', sql);\n\n    const request = new Driver.Request(sql, (err, remoteRowCount) => {\n      if (err) {\n        debug('request::error message=%s', err.message);\n        return callback(err);\n      }\n\n      rowCount = remoteRowCount;\n      debug('request::callback rowCount=%d', rowCount);\n    });\n\n    request.on('prepared', () => {\n      debug('request %s::request prepared', this.id);\n    });\n\n    request.on('done', (rowCount, more) => {\n      debug('request::done rowCount=%d more=%s', rowCount, more);\n    });\n\n    request.on('doneProc', (rowCount, more) => {\n      debug(\n        'request::doneProc id=%s rowCount=%d more=%s',\n        request.id,\n        rowCount,\n        more\n      );\n    });\n\n    request.on('doneInProc', (rowCount, more) => {\n      debug(\n        'request::doneInProc id=%s rowCount=%d more=%s',\n        request.id,\n        rowCount,\n        more\n      );\n    });\n\n    request.once('requestCompleted', () => {\n      debug('request::completed id=%s', request.id);\n      return callback(null, rowCount);\n    });\n\n    request.on('error', (err) => {\n      debug('request::error id=%s message=%s', request.id, err.message);\n      return callback(err);\n    });\n\n    return request;\n  }\n\n  // Grab a connection, run the query via the MSSQL streaming interface,\n  // and pass that through to the stream we've sent back to the client.\n  _stream(connection, query, /** @type {NodeJS.ReadWriteStream} */ stream) {\n    return new Promise((resolve, reject) => {\n      const request = this._makeRequest(query, (err) => {\n        if (err) {\n          stream.emit('error', err);\n          return reject(err);\n        }\n\n        resolve();\n      });\n\n      request.on('row', (row) => {\n        stream.write(\n          row.reduce(\n            (prev, curr) => ({\n              ...prev,\n              [curr.metadata.colName]: curr.value,\n            }),\n            {}\n          )\n        );\n      });\n      request.on('error', (err) => {\n        stream.emit('error', err);\n        reject(err);\n      });\n      request.once('requestCompleted', () => {\n        stream.end();\n        resolve();\n      });\n\n      this._assignBindings(request, query.bindings);\n      this._enqueueRequest(request, connection);\n    });\n  }\n\n  _assignBindings(request, bindings) {\n    if (Array.isArray(bindings)) {\n      for (let i = 0; i < bindings.length; i++) {\n        const binding = bindings[i];\n        this._setReqInput(request, i, binding);\n      }\n    }\n  }\n\n  _scaleForBinding(binding) {\n    if (binding % 1 === 0) {\n      throw new Error(`The binding value ${binding} must be a decimal number.`);\n    }\n\n    return { scale: 10 };\n  }\n\n  _typeForBinding(binding) {\n    const Driver = this._driver();\n\n    if (\n      this.connectionSettings.options &&\n      this.connectionSettings.options.mapBinding\n    ) {\n      const result = this.connectionSettings.options.mapBinding(binding);\n      if (result) {\n        return [result.value, result.type];\n      }\n    }\n\n    switch (typeof binding) {\n      case 'string':\n        return [binding, Driver.TYPES.NVarChar];\n      case 'boolean':\n        return [binding, Driver.TYPES.Bit];\n      case 'number': {\n        if (binding % 1 !== 0) {\n          return [binding, Driver.TYPES.Float];\n        }\n\n        if (binding < SQL_INT4.MIN || binding > SQL_INT4.MAX) {\n          if (binding < SQL_BIGINT_SAFE.MIN || binding > SQL_BIGINT_SAFE.MAX) {\n            throw new Error(\n              `Bigint must be safe integer or must be passed as string, saw ${binding}`\n            );\n          }\n\n          return [binding, Driver.TYPES.BigInt];\n        }\n\n        return [binding, Driver.TYPES.Int];\n      }\n      default: {\n        if (binding instanceof Date) {\n          return [binding, Driver.TYPES.DateTime];\n        }\n\n        if (binding instanceof Buffer) {\n          return [binding, Driver.TYPES.VarBinary];\n        }\n\n        return [binding, Driver.TYPES.NVarChar];\n      }\n    }\n  }\n\n  // Runs the query on the specified connection, providing the bindings\n  // and any other necessary prep work.\n  _query(connection, query) {\n    return new Promise((resolve, reject) => {\n      const rows = [];\n      const request = this._makeRequest(query, (err, count) => {\n        if (err) {\n          return reject(err);\n        }\n\n        query.response = rows;\n\n        process.nextTick(() => this._chomp(connection));\n\n        resolve(query);\n      });\n\n      request.on('row', (row) => {\n        debug('request::row');\n        rows.push(row);\n      });\n\n      this._assignBindings(request, query.bindings);\n      this._enqueueRequest(request, connection);\n    });\n  }\n\n  // sets a request input parameter. Detects bigints and decimals and sets type appropriately.\n  _setReqInput(req, i, inputBinding) {\n    const [binding, tediousType] = this._typeForBinding(inputBinding);\n    const bindingName = 'p'.concat(i);\n    let options;\n\n    if (typeof binding === 'number' && binding % 1 !== 0) {\n      options = this._scaleForBinding(binding);\n    }\n\n    debug(\n      'request::binding pos=%d type=%s value=%s',\n      i,\n      tediousType.name,\n      binding\n    );\n\n    if (Buffer.isBuffer(binding)) {\n      options = {\n        length: 'max',\n      };\n    }\n\n    req.addParameter(bindingName, tediousType, binding, options);\n  }\n\n  // Process the response as returned from the query.\n  processResponse(query, runner) {\n    if (query == null) return;\n    let { response } = query;\n    const { method } = query;\n\n    if (query.output) {\n      return query.output.call(runner, response);\n    }\n\n    response = response.map((row) =>\n      row.reduce((columns, r) => {\n        const colName = r.metadata.colName;\n\n        if (columns[colName]) {\n          if (!Array.isArray(columns[colName])) {\n            columns[colName] = [columns[colName]];\n          }\n\n          columns[colName].push(r.value);\n        } else {\n          columns[colName] = r.value;\n        }\n\n        return columns;\n      }, {})\n    );\n\n    if (query.output) return query.output.call(runner, response);\n    switch (method) {\n      case 'select':\n        return response;\n      case 'first':\n        return response[0];\n      case 'pluck':\n        return map(response, query.pluck);\n      case 'insert':\n      case 'del':\n      case 'update':\n      case 'counter':\n        if (query.returning) {\n          if (query.returning === '@@rowcount') {\n            return response[0][''];\n          }\n        }\n        return response;\n      default:\n        return response;\n    }\n  }\n}\n\nObject.assign(Client_MSSQL.prototype, {\n  requestQueue: [],\n\n  dialect: 'mssql',\n\n  driverName: 'mssql',\n});\n\nmodule.exports = Client_MSSQL;\n","const Transaction = require('../../execution/transaction');\nconst Debug = require('debug');\n\nconst debug = Debug('knex:tx');\n\nclass Transaction_MySQL extends Transaction {\n  query(conn, sql, status, value) {\n    const t = this;\n    const q = this.trxClient\n      .query(conn, sql)\n      .catch((err) => {\n        if (err.errno === 1305) {\n          this.trxClient.logger.warn(\n            'Transaction was implicitly committed, do not mix transactions and ' +\n              'DDL with MySQL (#805)'\n          );\n          return;\n        }\n\n        status = 2;\n        value = err;\n        t._completed = true;\n        debug('%s error running transaction query', t.txid);\n      })\n      .then(function (res) {\n        if (status === 1) t._resolver(value);\n        if (status === 2) {\n          if (value === undefined) {\n            if (t.doNotRejectOnRollback && /^ROLLBACK\\b/i.test(sql)) {\n              t._resolver();\n              return;\n            }\n            value = new Error(`Transaction rejected with non-error: ${value}`);\n          }\n          t._rejecter(value);\n        }\n        return res;\n      });\n    if (status === 1 || status === 2) {\n      t._completed = true;\n    }\n    return q;\n  }\n}\n\nmodule.exports = Transaction_MySQL;\n","// MySQL Query Compiler\n// ------\nconst identity = require('lodash/identity');\nconst QueryCompiler = require('../../../query/querycompiler');\nconst { wrapAsIdentifier } = require('../../../formatter/formatterUtils');\nconst {\n  columnize: columnize_,\n  wrap: wrap_,\n} = require('../../../formatter/wrappingFormatter');\n\nclass QueryCompiler_MySQL extends QueryCompiler {\n  constructor(client, builder, formatter) {\n    super(client, builder, formatter);\n\n    const { returning } = this.single;\n    if (returning) {\n      this.client.logger.warn(\n        '.returning() is not supported by mysql and will not have any effect.'\n      );\n    }\n\n    this._emptyInsertValue = '() values ()';\n  }\n\n  // Compiles an `insert` query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    let sql = super.insert();\n    if (sql === '') return sql;\n\n    const { ignore, merge, insert } = this.single;\n    if (ignore) sql = sql.replace('insert into', 'insert ignore into');\n    if (merge) {\n      sql += this._merge(merge.updates, insert);\n      const wheres = this.where();\n      if (wheres) {\n        throw new Error(\n          '.onConflict().merge().where() is not supported for mysql'\n        );\n      }\n    }\n\n    return sql;\n  }\n\n  // Compiles merge for onConflict, allowing for different merge strategies\n  _merge(updates, insert) {\n    const sql = ' on duplicate key update ';\n    if (updates && Array.isArray(updates)) {\n      // update subset of columns\n      return (\n        sql +\n        updates\n          .map((column) =>\n            wrapAsIdentifier(column, this.formatter.builder, this.client)\n          )\n          .map((column) => `${column} = values(${column})`)\n          .join(', ')\n      );\n    } else if (updates && typeof updates === 'object') {\n      const updateData = this._prepUpdate(updates);\n      return sql + updateData.join(',');\n    } else {\n      const insertData = this._prepInsert(insert);\n      if (typeof insertData === 'string') {\n        throw new Error(\n          'If using merge with a raw insert query, then updates must be provided'\n        );\n      }\n\n      return (\n        sql +\n        insertData.columns\n          .map((column) => wrapAsIdentifier(column, this.builder, this.client))\n          .map((column) => `${column} = values(${column})`)\n          .join(', ')\n      );\n    }\n  }\n\n  // Update method, including joins, wheres, order & limits.\n  update() {\n    const withSQL = this.with();\n    const join = this.join();\n    const updates = this._prepUpdate(this.single.update);\n    const where = this.where();\n    const order = this.order();\n    const limit = this.limit();\n    return (\n      withSQL +\n      `update ${this.tableName}` +\n      (join ? ` ${join}` : '') +\n      ' set ' +\n      updates.join(', ') +\n      (where ? ` ${where}` : '') +\n      (order ? ` ${order}` : '') +\n      (limit ? ` ${limit}` : '')\n    );\n  }\n\n  forUpdate() {\n    return 'for update';\n  }\n\n  forShare() {\n    return 'lock in share mode';\n  }\n\n  // Only supported on MySQL 8.0+\n  skipLocked() {\n    return 'skip locked';\n  }\n\n  // Supported on MySQL 8.0+ and MariaDB 10.3.0+\n  noWait() {\n    return 'nowait';\n  }\n\n  // Compiles a `columnInfo` query.\n  columnInfo() {\n    const column = this.single.columnInfo;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    return {\n      sql: 'select * from information_schema.columns where table_name = ? and table_schema = ?',\n      bindings: [table, this.client.database()],\n      output(resp) {\n        const out = resp.reduce(function (columns, val) {\n          columns[val.COLUMN_NAME] = {\n            defaultValue: val.COLUMN_DEFAULT === 'NULL' ? null : val.COLUMN_DEFAULT,\n            type: val.DATA_TYPE,\n            maxLength: val.CHARACTER_MAXIMUM_LENGTH,\n            nullable: val.IS_NULLABLE === 'YES',\n          };\n          return columns;\n        }, {});\n        return (column && out[column]) || out;\n      },\n    };\n  }\n\n  limit() {\n    const noLimit = !this.single.limit && this.single.limit !== 0;\n    if (noLimit && !this.single.offset) return '';\n\n    // Workaround for offset only.\n    // see: http://stackoverflow.com/questions/255517/mysql-offset-infinite-rows\n    const limit =\n      this.single.offset && noLimit\n        ? '18446744073709551615'\n        : this._getValueOrParameterFromAttribute('limit');\n    return `limit ${limit}`;\n  }\n\n  whereLike(statement) {\n    return `${this._columnClause(statement)} ${this._not(\n      statement,\n      'like '\n    )}${this._valueClause(statement)} COLLATE utf8_bin`;\n  }\n\n  whereILike(statement) {\n    return `${this._columnClause(statement)} ${this._not(\n      statement,\n      'like '\n    )}${this._valueClause(statement)}`;\n  }\n\n  // Json functions\n  jsonExtract(params) {\n    return this._jsonExtract(['json_extract', 'json_unquote'], params);\n  }\n\n  jsonSet(params) {\n    return this._jsonSet('json_set', params);\n  }\n\n  jsonInsert(params) {\n    return this._jsonSet('json_insert', params);\n  }\n\n  jsonRemove(params) {\n    const jsonCol = `json_remove(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )},${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n    return params.alias\n      ? this.client.alias(jsonCol, this.formatter.wrap(params.alias))\n      : jsonCol;\n  }\n\n  whereJsonObject(statement) {\n    return this._not(\n      statement,\n      `json_contains(${this._columnClause(statement)}, ${this._jsonValueClause(\n        statement\n      )})`\n    );\n  }\n\n  whereJsonPath(statement) {\n    return this._whereJsonPath('json_extract', statement);\n  }\n\n  whereJsonSupersetOf(statement) {\n    return this._not(\n      statement,\n      `json_contains(${wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )},${this._jsonValueClause(statement)})`\n    );\n  }\n\n  whereJsonSubsetOf(statement) {\n    return this._not(\n      statement,\n      `json_contains(${this._jsonValueClause(statement)},${wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )})`\n    );\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('json_extract', clause);\n  }\n}\n\n// Set the QueryBuilder & QueryCompiler on the client object,\n// in case anyone wants to modify things to suit their own purposes.\nmodule.exports = QueryCompiler_MySQL;\n","// MySQL Schema Compiler\n// -------\nconst SchemaCompiler = require('../../../schema/compiler');\n\nclass SchemaCompiler_MySQL extends SchemaCompiler {\n  constructor(client, builder) {\n    super(client, builder);\n  }\n\n  // Rename a table on the schema.\n  renameTable(tableName, to) {\n    this.pushQuery(\n      `rename table ${this.formatter.wrap(tableName)} to ${this.formatter.wrap(\n        to\n      )}`\n    );\n  }\n\n  renameView(from, to) {\n    this.renameTable(from, to);\n  }\n\n  // Check whether a table exists on the query.\n  hasTable(tableName) {\n    let sql = 'select * from information_schema.tables where table_name = ?';\n    const bindings = [tableName];\n\n    if (this.schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(this.schema);\n    } else {\n      sql += ' and table_schema = database()';\n    }\n\n    this.pushQuery({\n      sql,\n      bindings,\n      output: function output(resp) {\n        return resp.length > 0;\n      },\n    });\n  }\n\n  // Check whether a column exists on the schema.\n  hasColumn(tableName, column) {\n    this.pushQuery({\n      sql: `show columns from ${this.formatter.wrap(tableName)}`,\n      output(resp) {\n        return resp.some((row) => {\n          return (\n            this.client.wrapIdentifier(row.Field.toLowerCase()) ===\n            this.client.wrapIdentifier(column.toLowerCase())\n          );\n        });\n      },\n    });\n  }\n}\n\nmodule.exports = SchemaCompiler_MySQL;\n","/* eslint max-len:0*/\n\n// MySQL Table Builder & Compiler\n// -------\nconst TableCompiler = require('../../../schema/tablecompiler');\nconst { isObject, isString } = require('../../../util/is');\n\n// Table Compiler\n// ------\n\nclass TableCompiler_MySQL extends TableCompiler {\n  constructor(client, tableBuilder) {\n    super(client, tableBuilder);\n  }\n\n  createQuery(columns, ifNot, like) {\n    const createStatement = ifNot\n      ? 'create table if not exists '\n      : 'create table ';\n    const { client } = this;\n    let conn = {};\n    let columnsSql = ' (' + columns.sql.join(', ');\n\n    columnsSql += this.primaryKeys() || '';\n    columnsSql += this._addChecks();\n    columnsSql += ')';\n\n    let sql =\n      createStatement +\n      this.tableName() +\n      (like && this.tableNameLike()\n        ? ' like ' + this.tableNameLike()\n        : columnsSql);\n\n    // Check if the connection settings are set.\n    if (client.connectionSettings) {\n      conn = client.connectionSettings;\n    }\n\n    const charset = this.single.charset || conn.charset || '';\n    const collation = this.single.collate || conn.collate || '';\n    const engine = this.single.engine || '';\n\n    if (charset && !like) sql += ` default character set ${charset}`;\n    if (collation) sql += ` collate ${collation}`;\n    if (engine) sql += ` engine = ${engine}`;\n\n    if (this.single.comment) {\n      const comment = this.single.comment || '';\n      const MAX_COMMENT_LENGTH = 1024;\n      if (comment.length > MAX_COMMENT_LENGTH)\n        this.client.logger.warn(\n          `The max length for a table comment is ${MAX_COMMENT_LENGTH} characters`\n        );\n      sql += ` comment = '${comment}'`;\n    }\n\n    this.pushQuery(sql);\n    if (like) {\n      this.addColumns(columns, this.addColumnsPrefix);\n    }\n  }\n\n  // Compiles the comment on the table.\n  comment(comment) {\n    this.pushQuery(`alter table ${this.tableName()} comment = '${comment}'`);\n  }\n\n  changeType() {\n    // alter table + table + ' modify ' + wrapped + '// type';\n  }\n\n  // Renames a column on the table.\n  renameColumn(from, to) {\n    const compiler = this;\n    const table = this.tableName();\n    const wrapped = this.formatter.wrap(from) + ' ' + this.formatter.wrap(to);\n\n    this.pushQuery({\n      sql:\n        `show full fields from ${table} where field = ` +\n        this.client.parameter(from, this.tableBuilder, this.bindingsHolder),\n      output(resp) {\n        const column = resp[0];\n        const runner = this;\n        return compiler.getFKRefs(runner).then(([refs]) =>\n          new Promise((resolve, reject) => {\n            try {\n              if (!refs.length) {\n                resolve();\n              }\n              resolve(compiler.dropFKRefs(runner, refs));\n            } catch (e) {\n              reject(e);\n            }\n          })\n            .then(function () {\n              let sql = `alter table ${table} change ${wrapped} ${column.Type}`;\n\n              if (String(column.Null).toUpperCase() !== 'YES') {\n                sql += ` NOT NULL`;\n              } else {\n                // This doesn't matter for most cases except Timestamp, where this is important\n                sql += ` NULL`;\n              }\n              if (column.Default !== void 0 && column.Default !== null) {\n                sql += ` DEFAULT '${column.Default}'`;\n              }\n              if (column.Collation !== void 0 && column.Collation !== null) {\n                sql += ` COLLATE '${column.Collation}'`;\n              }\n              // Add back the auto increment if the column  it, fix issue #2767\n              if (column.Extra == 'auto_increment') {\n                sql += ` AUTO_INCREMENT`;\n              }\n\n              return runner.query({\n                sql,\n              });\n            })\n            .then(function () {\n              if (!refs.length) {\n                return;\n              }\n              return compiler.createFKRefs(\n                runner,\n                refs.map(function (ref) {\n                  if (ref.REFERENCED_COLUMN_NAME === from) {\n                    ref.REFERENCED_COLUMN_NAME = to;\n                  }\n                  if (ref.COLUMN_NAME === from) {\n                    ref.COLUMN_NAME = to;\n                  }\n                  return ref;\n                })\n              );\n            })\n        );\n      },\n    });\n  }\n\n  primaryKeys() {\n    const pks = (this.grouped.alterTable || []).filter(\n      (k) => k.method === 'primary'\n    );\n    if (pks.length > 0 && pks[0].args.length > 0) {\n      const columns = pks[0].args[0];\n      let constraintName = pks[0].args[1] || '';\n      if (constraintName) {\n        constraintName = ' constraint ' + this.formatter.wrap(constraintName);\n      }\n\n      if (this.grouped.columns) {\n        const incrementsCols = this._getIncrementsColumnNames();\n        if (incrementsCols.length) {\n          incrementsCols.forEach((c) => {\n            if (!columns.includes(c)) {\n              columns.unshift(c);\n            }\n          });\n        }\n      }\n\n      return `,${constraintName} primary key (${this.formatter.columnize(\n        columns\n      )})`;\n    }\n  }\n\n  getFKRefs(runner) {\n    const bindingsHolder = {\n      bindings: [],\n    };\n\n    const sql =\n      'SELECT KCU.CONSTRAINT_NAME, KCU.TABLE_NAME, KCU.COLUMN_NAME, ' +\n      '       KCU.REFERENCED_TABLE_NAME, KCU.REFERENCED_COLUMN_NAME, ' +\n      '       RC.UPDATE_RULE, RC.DELETE_RULE ' +\n      'FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS KCU ' +\n      'JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS RC ' +\n      '       USING(CONSTRAINT_NAME)' +\n      'WHERE KCU.REFERENCED_TABLE_NAME = ' +\n      this.client.parameter(\n        this.tableNameRaw,\n        this.tableBuilder,\n        bindingsHolder\n      ) +\n      ' ' +\n      '  AND KCU.CONSTRAINT_SCHEMA = ' +\n      this.client.parameter(\n        this.client.database(),\n        this.tableBuilder,\n        bindingsHolder\n      ) +\n      ' ' +\n      '  AND RC.CONSTRAINT_SCHEMA = ' +\n      this.client.parameter(\n        this.client.database(),\n        this.tableBuilder,\n        bindingsHolder\n      );\n\n    return runner.query({\n      sql,\n      bindings: bindingsHolder.bindings,\n    });\n  }\n\n  dropFKRefs(runner, refs) {\n    const formatter = this.client.formatter(this.tableBuilder);\n\n    return Promise.all(\n      refs.map(function (ref) {\n        const constraintName = formatter.wrap(ref.CONSTRAINT_NAME);\n        const tableName = formatter.wrap(ref.TABLE_NAME);\n        return runner.query({\n          sql: `alter table ${tableName} drop foreign key ${constraintName}`,\n        });\n      })\n    );\n  }\n\n  createFKRefs(runner, refs) {\n    const formatter = this.client.formatter(this.tableBuilder);\n\n    return Promise.all(\n      refs.map(function (ref) {\n        const tableName = formatter.wrap(ref.TABLE_NAME);\n        const keyName = formatter.wrap(ref.CONSTRAINT_NAME);\n        const column = formatter.columnize(ref.COLUMN_NAME);\n        const references = formatter.columnize(ref.REFERENCED_COLUMN_NAME);\n        const inTable = formatter.wrap(ref.REFERENCED_TABLE_NAME);\n        const onUpdate = ` ON UPDATE ${ref.UPDATE_RULE}`;\n        const onDelete = ` ON DELETE ${ref.DELETE_RULE}`;\n\n        return runner.query({\n          sql:\n            `alter table ${tableName} add constraint ${keyName} ` +\n            'foreign key (' +\n            column +\n            ') references ' +\n            inTable +\n            ' (' +\n            references +\n            ')' +\n            onUpdate +\n            onDelete,\n        });\n      })\n    );\n  }\n\n  index(columns, indexName, options) {\n    let storageEngineIndexType;\n    let indexType;\n\n    if (isString(options)) {\n      indexType = options;\n    } else if (isObject(options)) {\n      ({ indexType, storageEngineIndexType } = options);\n    }\n\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    storageEngineIndexType = storageEngineIndexType\n      ? ` using ${storageEngineIndexType}`\n      : '';\n    this.pushQuery(\n      `alter table ${this.tableName()} add${\n        indexType ? ` ${indexType}` : ''\n      } index ${indexName}(${this.formatter.columnize(\n        columns\n      )})${storageEngineIndexType}`\n    );\n  }\n\n  primary(columns, constraintName) {\n    let deferrable;\n    if (isObject(constraintName)) {\n      ({ constraintName, deferrable } = constraintName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `mysql: primary key constraint \\`${constraintName}\\` will not be deferrable ${deferrable} because mysql does not support deferred constraints.`\n      );\n    }\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n\n    const primaryCols = columns;\n    let incrementsCols = [];\n    if (this.grouped.columns) {\n      incrementsCols = this._getIncrementsColumnNames();\n      if (incrementsCols) {\n        incrementsCols.forEach((c) => {\n          if (!primaryCols.includes(c)) {\n            primaryCols.unshift(c);\n          }\n        });\n      }\n    }\n    if (this.method !== 'create' && this.method !== 'createIfNot') {\n      this.pushQuery(\n        `alter table ${this.tableName()} add primary key ${constraintName}(${this.formatter.columnize(\n          primaryCols\n        )})`\n      );\n    }\n    if (incrementsCols.length) {\n      this.pushQuery(\n        `alter table ${this.tableName()} modify column ${this.formatter.columnize(\n          incrementsCols\n        )} int unsigned not null auto_increment`\n      );\n    }\n  }\n\n  unique(columns, indexName) {\n    let storageEngineIndexType;\n    let deferrable;\n    if (isObject(indexName)) {\n      ({ indexName, deferrable, storageEngineIndexType } = indexName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `mysql: unique index \\`${indexName}\\` will not be deferrable ${deferrable} because mysql does not support deferred constraints.`\n      );\n    }\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    storageEngineIndexType = storageEngineIndexType\n      ? ` using ${storageEngineIndexType}`\n      : '';\n    this.pushQuery(\n      `alter table ${this.tableName()} add unique ${indexName}(${this.formatter.columnize(\n        columns\n      )})${storageEngineIndexType}`\n    );\n  }\n\n  // Compile a drop index command.\n  dropIndex(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    this.pushQuery(`alter table ${this.tableName()} drop index ${indexName}`);\n  }\n\n  // Compile a drop foreign key command.\n  dropForeign(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('foreign', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop foreign key ${indexName}`\n    );\n  }\n\n  // Compile a drop primary key command.\n  dropPrimary() {\n    this.pushQuery(`alter table ${this.tableName()} drop primary key`);\n  }\n\n  // Compile a drop unique key command.\n  dropUnique(column, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, column);\n    this.pushQuery(`alter table ${this.tableName()} drop index ${indexName}`);\n  }\n}\n\nTableCompiler_MySQL.prototype.addColumnsPrefix = 'add ';\nTableCompiler_MySQL.prototype.alterColumnsPrefix = 'modify ';\nTableCompiler_MySQL.prototype.dropColumnPrefix = 'drop ';\n\nmodule.exports = TableCompiler_MySQL;\n","// MySQL Column Compiler\n// -------\nconst ColumnCompiler = require('../../../schema/columncompiler');\nconst { isObject } = require('../../../util/is');\nconst { toNumber } = require('../../../util/helpers');\n\nconst commentEscapeRegex = /(?<!\\\\)'/g;\n\nclass ColumnCompiler_MySQL extends ColumnCompiler {\n  constructor(client, tableCompiler, columnBuilder) {\n    super(client, tableCompiler, columnBuilder);\n    this.modifiers = [\n      'unsigned',\n      'nullable',\n      'defaultTo',\n      'comment',\n      'collate',\n      'first',\n      'after',\n    ];\n    this._addCheckModifiers();\n  }\n\n  // Types\n  // ------\n\n  double(precision, scale) {\n    if (!precision) return 'double';\n    return `double(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  integer(length) {\n    length = length ? `(${toNumber(length, 11)})` : '';\n    return `int${length}`;\n  }\n\n  tinyint(length) {\n    length = length ? `(${toNumber(length, 1)})` : '';\n    return `tinyint${length}`;\n  }\n\n  text(column) {\n    switch (column) {\n      case 'medium':\n      case 'mediumtext':\n        return 'mediumtext';\n      case 'long':\n      case 'longtext':\n        return 'longtext';\n      default:\n        return 'text';\n    }\n  }\n\n  mediumtext() {\n    return this.text('medium');\n  }\n\n  longtext() {\n    return this.text('long');\n  }\n\n  enu(allowed) {\n    return `enum('${allowed.join(\"', '\")}')`;\n  }\n\n  datetime(precision) {\n    if (isObject(precision)) {\n      ({ precision } = precision);\n    }\n\n    return typeof precision === 'number'\n      ? `datetime(${precision})`\n      : 'datetime';\n  }\n\n  timestamp(precision) {\n    if (isObject(precision)) {\n      ({ precision } = precision);\n    }\n\n    return typeof precision === 'number'\n      ? `timestamp(${precision})`\n      : 'timestamp';\n  }\n\n  time(precision) {\n    if (isObject(precision)) {\n      ({ precision } = precision);\n    }\n\n    return typeof precision === 'number' ? `time(${precision})` : 'time';\n  }\n\n  bit(length) {\n    return length ? `bit(${toNumber(length)})` : 'bit';\n  }\n\n  binary(length) {\n    return length ? `varbinary(${toNumber(length)})` : 'blob';\n  }\n\n  json() {\n    return 'json';\n  }\n\n  jsonb() {\n    return 'json';\n  }\n\n  // Modifiers\n  // ------\n\n  defaultTo(value) {\n    // MySQL defaults to null by default, but breaks down if you pass it explicitly\n    // Note that in MySQL versions up to 5.7, logic related to updating\n    // timestamps when no explicit value is passed is quite insane - https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_explicit_defaults_for_timestamp\n    if (value === null || value === undefined) {\n      return;\n    }\n    if ((this.type === 'json' || this.type === 'jsonb') && isObject(value)) {\n      // Default value for json will work only it is an expression\n      return `default ('${JSON.stringify(value)}')`;\n    }\n    const defaultVal = super.defaultTo.apply(this, arguments);\n    if (this.type !== 'blob' && this.type.indexOf('text') === -1) {\n      return defaultVal;\n    }\n    return '';\n  }\n\n  unsigned() {\n    return 'unsigned';\n  }\n\n  comment(comment) {\n    if (comment && comment.length > 255) {\n      this.client.logger.warn(\n        'Your comment is longer than the max comment length for MySQL'\n      );\n    }\n    return comment && `comment '${comment.replace(commentEscapeRegex, \"\\\\'\")}'`;\n  }\n\n  first() {\n    return 'first';\n  }\n\n  after(column) {\n    return `after ${this.formatter.wrap(column)}`;\n  }\n\n  collate(collation) {\n    return collation && `collate '${collation}'`;\n  }\n\n  checkRegex(regex, constraintName) {\n    return this._check(\n      `${this.formatter.wrap(\n        this.getColumnName()\n      )} REGEXP ${this.client._escapeBinding(regex)}`,\n      constraintName\n    );\n  }\n\n  increments(options = { primaryKey: true }) {\n    return (\n      'int unsigned not null' +\n      // In MySQL autoincrement are always a primary key. If you already have a primary key, we\n      // initialize this column as classic int column then modify it later in table compiler\n      (this.tableCompiler._canBeAddPrimaryKey(options)\n        ? ' auto_increment primary key'\n        : '')\n    );\n  }\n\n  bigincrements(options = { primaryKey: true }) {\n    return (\n      'bigint unsigned not null' +\n      // In MySQL autoincrement are always a primary key. If you already have a primary key, we\n      // initialize this column as classic int column then modify it later in table compiler\n      (this.tableCompiler._canBeAddPrimaryKey(options)\n        ? ' auto_increment primary key'\n        : '')\n    );\n  }\n}\n\nColumnCompiler_MySQL.prototype.bigint = 'bigint';\nColumnCompiler_MySQL.prototype.mediumint = 'mediumint';\nColumnCompiler_MySQL.prototype.smallint = 'smallint';\n\nmodule.exports = ColumnCompiler_MySQL;\n","/* eslint max-len: 0 */\n\nconst ViewCompiler = require('../../../schema/viewcompiler.js');\n\nclass ViewCompiler_MySQL extends ViewCompiler {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n\n  createOrReplace() {\n    this.createQuery(this.columns, this.selectQuery, false, true);\n  }\n}\n\nmodule.exports = ViewCompiler_MySQL;\n","const ViewBuilder = require('../../../schema/viewbuilder.js');\n\nclass ViewBuilder_MySQL extends ViewBuilder {\n  constructor() {\n    super(...arguments);\n  }\n\n  checkOption() {\n    this._single.checkOption = 'default_option';\n  }\n\n  localCheckOption() {\n    this._single.checkOption = 'local';\n  }\n\n  cascadedCheckOption() {\n    this._single.checkOption = 'cascaded';\n  }\n}\n\nmodule.exports = ViewBuilder_MySQL;\n","// MySQL Client\n// -------\nconst defer = require('lodash/defer');\nconst map = require('lodash/map');\nconst { promisify } = require('util');\nconst Client = require('../../client');\n\nconst Transaction = require('./transaction');\nconst QueryCompiler = require('./query/mysql-querycompiler');\nconst SchemaCompiler = require('./schema/mysql-compiler');\nconst TableCompiler = require('./schema/mysql-tablecompiler');\nconst ColumnCompiler = require('./schema/mysql-columncompiler');\n\nconst { makeEscape } = require('../../util/string');\nconst ViewCompiler = require('./schema/mysql-viewcompiler');\nconst ViewBuilder = require('./schema/mysql-viewbuilder');\n\n// Always initialize with the \"QueryBuilder\" and \"QueryCompiler\"\n// objects, which extend the base 'lib/query/builder' and\n// 'lib/query/compiler', respectively.\nclass Client_MySQL extends Client {\n  _driver() {\n    return require('mysql');\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n\n  viewBuilder() {\n    return new ViewBuilder(this, ...arguments);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  wrapIdentifierImpl(value) {\n    return value !== '*' ? `\\`${value.replace(/`/g, '``')}\\`` : '*';\n  }\n\n  // Get a raw connection, called by the `pool` whenever a new\n  // connection needs to be added to the pool.\n  acquireRawConnection() {\n    return new Promise((resolver, rejecter) => {\n      const connection = this.driver.createConnection(this.connectionSettings);\n      connection.on('error', (err) => {\n        connection.__knex__disposed = err;\n      });\n      connection.connect((err) => {\n        if (err) {\n          // if connection is rejected, remove listener that was registered above...\n          connection.removeAllListeners();\n          return rejecter(err);\n        }\n        resolver(connection);\n      });\n    });\n  }\n\n  // Used to explicitly close a connection, called internally by the pool\n  // when a connection times out or the pool is shutdown.\n  async destroyRawConnection(connection) {\n    try {\n      const end = promisify((cb) => connection.end(cb));\n      return await end();\n    } catch (err) {\n      connection.__knex__disposed = err;\n    } finally {\n      // see discussion https://github.com/knex/knex/pull/3483\n      defer(() => connection.removeAllListeners());\n    }\n  }\n\n  validateConnection(connection) {\n    return (\n      connection.state === 'connected' || connection.state === 'authenticated'\n    );\n  }\n\n  // Grab a connection, run the query via the MySQL streaming interface,\n  // and pass that through to the stream we've sent back to the client.\n  _stream(connection, obj, stream, options) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    options = options || {};\n    const queryOptions = Object.assign({ sql: obj.sql }, obj.options);\n    return new Promise((resolver, rejecter) => {\n      stream.on('error', rejecter);\n      stream.on('end', resolver);\n      const queryStream = connection\n        .query(queryOptions, obj.bindings)\n        .stream(options);\n\n      queryStream.on('error', (err) => {\n        rejecter(err);\n        stream.emit('error', err);\n      });\n\n      queryStream.pipe(stream);\n    });\n  }\n\n  // Runs the query on the specified connection, providing the bindings\n  // and any other necessary prep work.\n  _query(connection, obj) {\n    if (!obj || typeof obj === 'string') obj = { sql: obj };\n    if (!obj.sql) throw new Error('The query is empty');\n\n    return new Promise(function (resolver, rejecter) {\n      if (!obj.sql) {\n        resolver();\n        return;\n      }\n      const queryOptions = Object.assign({ sql: obj.sql }, obj.options);\n      connection.query(\n        queryOptions,\n        obj.bindings,\n        function (err, rows, fields) {\n          if (err) return rejecter(err);\n          obj.response = [rows, fields];\n          resolver(obj);\n        }\n      );\n    });\n  }\n\n  // Process the response as returned from the query.\n  processResponse(obj, runner) {\n    if (obj == null) return;\n    const { response } = obj;\n    const { method } = obj;\n    const rows = response[0];\n    const fields = response[1];\n    if (obj.output) return obj.output.call(runner, rows, fields);\n    switch (method) {\n      case 'select':\n        return rows;\n      case 'first':\n        return rows[0];\n      case 'pluck':\n        return map(rows, obj.pluck);\n      case 'insert':\n        return [rows.insertId];\n      case 'del':\n      case 'update':\n      case 'counter':\n        return rows.affectedRows;\n      default:\n        return response;\n    }\n  }\n\n  async cancelQuery(connectionToKill) {\n    const conn = await this.acquireRawConnection();\n    try {\n      return await this._wrappedCancelQueryCall(conn, connectionToKill);\n    } finally {\n      await this.destroyRawConnection(conn);\n      if (conn.__knex__disposed) {\n        this.logger.warn(`Connection Error: ${conn.__knex__disposed}`);\n      }\n    }\n  }\n\n  _wrappedCancelQueryCall(conn, connectionToKill) {\n    return this._query(conn, {\n      sql: 'KILL QUERY ?',\n      bindings: [connectionToKill.threadId],\n      options: {},\n    });\n  }\n}\n\nObject.assign(Client_MySQL.prototype, {\n  dialect: 'mysql',\n\n  driverName: 'mysql',\n\n  _escapeBinding: makeEscape(),\n\n  canCancelQuery: true,\n});\n\nmodule.exports = Client_MySQL;\n","const Transaction = require('../../execution/transaction');\nconst debug = require('debug')('knex:tx');\n\nclass Transaction_MySQL2 extends Transaction {\n  query(conn, sql, status, value) {\n    const t = this;\n    const q = this.trxClient\n      .query(conn, sql)\n      .catch((err) => {\n        if (err.code === 'ER_SP_DOES_NOT_EXIST') {\n          this.trxClient.logger.warn(\n            'Transaction was implicitly committed, do not mix transactions and ' +\n              'DDL with MySQL (#805)'\n          );\n          return;\n        }\n\n        status = 2;\n        value = err;\n        t._completed = true;\n        debug('%s error running transaction query', t.txid);\n      })\n      .then(function (res) {\n        if (status === 1) t._resolver(value);\n        if (status === 2) {\n          if (value === undefined) {\n            if (t.doNotRejectOnRollback && /^ROLLBACK\\b/i.test(sql)) {\n              t._resolver();\n              return;\n            }\n            value = new Error(`Transaction rejected with non-error: ${value}`);\n          }\n          t._rejecter(value);\n          return res;\n        }\n      });\n    if (status === 1 || status === 2) {\n      t._completed = true;\n    }\n    return q;\n  }\n}\n\nmodule.exports = Transaction_MySQL2;\n","// MySQL2 Client\n// -------\nconst Client_MySQL = require('../mysql');\nconst Transaction = require('./transaction');\n\n// Always initialize with the \"QueryBuilder\" and \"QueryCompiler\"\n// objects, which extend the base 'lib/query/builder' and\n// 'lib/query/compiler', respectively.\nclass Client_MySQL2 extends Client_MySQL {\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  _driver() {\n    return require('mysql2');\n  }\n  validateConnection(connection) {\n    return (\n      connection &&\n      !connection._fatalError &&\n      !connection._protocolError &&\n      !connection._closing &&\n      !connection.stream.destroyed\n    );\n  }\n}\n\nObject.assign(Client_MySQL2.prototype, {\n  // The \"dialect\", for reference elsewhere.\n  driverName: 'mysql2',\n});\n\nmodule.exports = Client_MySQL2;\n","function generateCombinedName(logger, postfix, name, subNames) {\n  const crypto = require('crypto');\n  const limit = 30;\n  if (!Array.isArray(subNames)) subNames = subNames ? [subNames] : [];\n  const table = name.replace(/\\.|-/g, '_');\n  const subNamesPart = subNames.join('_');\n  let result = `${table}_${\n    subNamesPart.length ? subNamesPart + '_' : ''\n  }${postfix}`.toLowerCase();\n  if (result.length > limit) {\n    logger.warn(\n      `Automatically generated name \"${result}\" exceeds ${limit} character ` +\n        `limit for Oracle. Using base64 encoded sha1 of that name instead.`\n    );\n    // generates the sha1 of the name and encode it with base64\n    result = crypto\n      .createHash('sha1')\n      .update(result)\n      .digest('base64')\n      .replace('=', '');\n  }\n  return result;\n}\n\nfunction wrapSqlWithCatch(sql, errorNumberToCatch) {\n  return (\n    `begin execute immediate '${sql.replace(/'/g, \"''\")}'; ` +\n    `exception when others then if sqlcode != ${errorNumberToCatch} then raise; ` +\n    `end if; ` +\n    `end;`\n  );\n}\n\nfunction ReturningHelper(columnName) {\n  this.columnName = columnName;\n}\n\nReturningHelper.prototype.toString = function () {\n  return `[object ReturningHelper:${this.columnName}]`;\n};\n\n// If the error is any of these, we'll assume we need to\n// mark the connection as failed\nfunction isConnectionError(err) {\n  return [\n    'DPI-1010', // not connected\n    'DPI-1080', // connection was closed by ORA-%d\n    'ORA-03114', // not connected to ORACLE\n    'ORA-03113', // end-of-file on communication channel\n    'ORA-03135', // connection lost contact\n    'ORA-12514', // listener does not currently know of service requested in connect descriptor\n    'ORA-00022', // invalid session ID; access denied\n    'ORA-00028', // your session has been killed\n    'ORA-00031', // your session has been marked for kill\n    'ORA-00045', // your session has been terminated with no replay\n    'ORA-00378', // buffer pools cannot be created as specified\n    'ORA-00602', // internal programming exception\n    'ORA-00603', // ORACLE server session terminated by fatal error\n    'ORA-00609', // could not attach to incoming connection\n    'ORA-01012', // not logged on\n    'ORA-01041', // internal error. hostdef extension doesn't exist\n    'ORA-01043', // user side memory corruption\n    'ORA-01089', // immediate shutdown or close in progress\n    'ORA-01092', // ORACLE instance terminated. Disconnection forced\n    'ORA-02396', // exceeded maximum idle time, please connect again\n    'ORA-03122', // attempt to close ORACLE-side window on user side\n    'ORA-12153', // TNS'not connected\n    'ORA-12537', // TNS'connection closed\n    'ORA-12547', // TNS'lost contact\n    'ORA-12570', // TNS'packet reader failure\n    'ORA-12583', // TNS'no reader\n    'ORA-27146', // post/wait initialization failed\n    'ORA-28511', // lost RPC connection\n    'ORA-56600', // an illegal OCI function call was issued\n    'NJS-024',\n    'NJS-003',\n  ].some(function (prefix) {\n    return err.message.indexOf(prefix) === 0;\n  });\n}\n\nmodule.exports = {\n  generateCombinedName,\n  isConnectionError,\n  wrapSqlWithCatch,\n  ReturningHelper,\n};\n","// Oracle Schema Compiler\n// -------\nconst SchemaCompiler = require('../../../schema/compiler');\nconst utils = require('../utils');\nconst Trigger = require('./internal/trigger');\n\nclass SchemaCompiler_Oracle extends SchemaCompiler {\n  constructor() {\n    super(...arguments);\n  }\n\n  // Rename a table on the schema.\n  renameTable(tableName, to) {\n    const renameTable = Trigger.renameTableAndAutoIncrementTrigger(\n      this.client.logger,\n      tableName,\n      to\n    );\n    this.pushQuery(renameTable);\n  }\n\n  // Check whether a table exists on the query.\n  hasTable(tableName) {\n    this.pushQuery({\n      sql:\n        'select TABLE_NAME from USER_TABLES where TABLE_NAME = ' +\n        this.client.parameter(tableName, this.builder, this.bindingsHolder),\n      output(resp) {\n        return resp.length > 0;\n      },\n    });\n  }\n\n  // Check whether a column exists on the schema.\n  hasColumn(tableName, column) {\n    const sql =\n      `select COLUMN_NAME from ALL_TAB_COLUMNS ` +\n      `where TABLE_NAME = ${this.client.parameter(\n        tableName,\n        this.builder,\n        this.bindingsHolder\n      )} ` +\n      `and COLUMN_NAME = ${this.client.parameter(\n        column,\n        this.builder,\n        this.bindingsHolder\n      )}`;\n    this.pushQuery({ sql, output: (resp) => resp.length > 0 });\n  }\n\n  dropSequenceIfExists(sequenceName) {\n    const prefix = this.schema ? `\"${this.schema}\".` : '';\n    this.pushQuery(\n      utils.wrapSqlWithCatch(\n        `drop sequence ${prefix}${this.formatter.wrap(sequenceName)}`,\n        -2289\n      )\n    );\n  }\n\n  _dropRelatedSequenceIfExists(tableName) {\n    // removing the sequence that was possibly generated by increments() column\n    const sequenceName = utils.generateCombinedName(\n      this.client.logger,\n      'seq',\n      tableName\n    );\n    this.dropSequenceIfExists(sequenceName);\n  }\n\n  dropTable(tableName) {\n    const prefix = this.schema ? `\"${this.schema}\".` : '';\n    this.pushQuery(`drop table ${prefix}${this.formatter.wrap(tableName)}`);\n\n    // removing the sequence that was possibly generated by increments() column\n    this._dropRelatedSequenceIfExists(tableName);\n  }\n\n  dropTableIfExists(tableName) {\n    this.dropObject(tableName, 'table');\n  }\n\n  dropViewIfExists(viewName) {\n    this.dropObject(viewName, 'view');\n  }\n\n  dropObject(objectName, type) {\n    const prefix = this.schema ? `\"${this.schema}\".` : '';\n    let errorCode = -942;\n    if (type === 'materialized view') {\n      // https://stackoverflow.com/a/1801453\n      errorCode = -12003;\n    }\n    this.pushQuery(\n      utils.wrapSqlWithCatch(\n        `drop ${type} ${prefix}${this.formatter.wrap(objectName)}`,\n        errorCode\n      )\n    );\n\n    // removing the sequence that was possibly generated by increments() column\n    this._dropRelatedSequenceIfExists(objectName);\n  }\n\n  refreshMaterializedView(viewName) {\n    return this.pushQuery({\n      sql: `BEGIN DBMS_MVIEW.REFRESH('${\n        this.schemaNameRaw ? this.schemaNameRaw + '.' : ''\n      }${viewName}'); END;`,\n    });\n  }\n\n  dropMaterializedView(viewName) {\n    this._dropView(viewName, false, true);\n  }\n\n  dropMaterializedViewIfExists(viewName) {\n    this.dropObject(viewName, 'materialized view');\n  }\n}\n\nmodule.exports = SchemaCompiler_Oracle;\n","const utils = require('../../utils');\n\nconst trigger = {\n  renameColumnTrigger: function (logger, tableName, columnName, to) {\n    const triggerName = utils.generateCombinedName(\n      logger,\n      'autoinc_trg',\n      tableName\n    );\n    const sequenceName = utils.generateCombinedName(logger, 'seq', tableName);\n    return (\n      `DECLARE ` +\n      `PK_NAME VARCHAR(200); ` +\n      `IS_AUTOINC NUMBER := 0; ` +\n      `BEGIN` +\n      `  EXECUTE IMMEDIATE ('ALTER TABLE \"${tableName}\" RENAME COLUMN \"${columnName}\" TO \"${to}\"');` +\n      `  SELECT COUNT(*) INTO IS_AUTOINC from \"USER_TRIGGERS\" where trigger_name = '${triggerName}';` +\n      `  IF (IS_AUTOINC > 0) THEN` +\n      `    SELECT cols.column_name INTO PK_NAME` +\n      `    FROM all_constraints cons, all_cons_columns cols` +\n      `    WHERE cons.constraint_type = 'P'` +\n      `    AND cons.constraint_name = cols.constraint_name` +\n      `    AND cons.owner = cols.owner` +\n      `    AND cols.table_name = '${tableName}';` +\n      `    IF ('${to}' = PK_NAME) THEN` +\n      `      EXECUTE IMMEDIATE ('DROP TRIGGER \"${triggerName}\"');` +\n      `      EXECUTE IMMEDIATE ('create or replace trigger \"${triggerName}\"` +\n      `      BEFORE INSERT on \"${tableName}\" for each row` +\n      `        declare` +\n      `        checking number := 1;` +\n      `        begin` +\n      `          if (:new.\"${to}\" is null) then` +\n      `            while checking >= 1 loop` +\n      `              select \"${sequenceName}\".nextval into :new.\"${to}\" from dual;` +\n      `              select count(\"${to}\") into checking from \"${tableName}\"` +\n      `              where \"${to}\" = :new.\"${to}\";` +\n      `            end loop;` +\n      `          end if;` +\n      `        end;');` +\n      `    end if;` +\n      `  end if;` +\n      `END;`\n    );\n  },\n\n  createAutoIncrementTrigger: function (logger, tableName, schemaName) {\n    const tableQuoted = `\"${tableName}\"`;\n    const tableUnquoted = tableName;\n    const schemaQuoted = schemaName ? `\"${schemaName}\".` : '';\n    const constraintOwner = schemaName ? `'${schemaName}'` : 'cols.owner';\n    const triggerName = utils.generateCombinedName(\n      logger,\n      'autoinc_trg',\n      tableName\n    );\n    const sequenceNameUnquoted = utils.generateCombinedName(\n      logger,\n      'seq',\n      tableName\n    );\n    const sequenceNameQuoted = `\"${sequenceNameUnquoted}\"`;\n    return (\n      `DECLARE ` +\n      `PK_NAME VARCHAR(200); ` +\n      `BEGIN` +\n      `  EXECUTE IMMEDIATE ('CREATE SEQUENCE ${schemaQuoted}${sequenceNameQuoted}');` +\n      `  SELECT cols.column_name INTO PK_NAME` + // TODO : support autoincrement on table with multiple primary keys\n      `  FROM all_constraints cons, all_cons_columns cols` +\n      `  WHERE cons.constraint_type = 'P'` +\n      `  AND cons.constraint_name = cols.constraint_name` +\n      `  AND cons.owner = ${constraintOwner}` +\n      `  AND cols.table_name = '${tableUnquoted}';` +\n      `  execute immediate ('create or replace trigger ${schemaQuoted}\"${triggerName}\"` +\n      `  BEFORE INSERT on ${schemaQuoted}${tableQuoted}` +\n      `  for each row` +\n      `  declare` +\n      `  checking number := 1;` +\n      `  begin` +\n      `    if (:new.\"' || PK_NAME || '\" is null) then` +\n      `      while checking >= 1 loop` +\n      `        select ${schemaQuoted}${sequenceNameQuoted}.nextval into :new.\"' || PK_NAME || '\" from dual;` +\n      `        select count(\"' || PK_NAME || '\") into checking from ${schemaQuoted}${tableQuoted}` +\n      `        where \"' || PK_NAME || '\" = :new.\"' || PK_NAME || '\";` +\n      `      end loop;` +\n      `    end if;` +\n      `  end;'); ` +\n      `END;`\n    );\n  },\n\n  renameTableAndAutoIncrementTrigger: function (logger, tableName, to) {\n    const triggerName = utils.generateCombinedName(\n      logger,\n      'autoinc_trg',\n      tableName\n    );\n    const sequenceName = utils.generateCombinedName(logger, 'seq', tableName);\n    const toTriggerName = utils.generateCombinedName(logger, 'autoinc_trg', to);\n    const toSequenceName = utils.generateCombinedName(logger, 'seq', to);\n    return (\n      `DECLARE ` +\n      `PK_NAME VARCHAR(200); ` +\n      `IS_AUTOINC NUMBER := 0; ` +\n      `BEGIN` +\n      `  EXECUTE IMMEDIATE ('RENAME \"${tableName}\" TO \"${to}\"');` +\n      `  SELECT COUNT(*) INTO IS_AUTOINC from \"USER_TRIGGERS\" where trigger_name = '${triggerName}';` +\n      `  IF (IS_AUTOINC > 0) THEN` +\n      `    EXECUTE IMMEDIATE ('DROP TRIGGER \"${triggerName}\"');` +\n      `    EXECUTE IMMEDIATE ('RENAME \"${sequenceName}\" TO \"${toSequenceName}\"');` +\n      `    SELECT cols.column_name INTO PK_NAME` +\n      `    FROM all_constraints cons, all_cons_columns cols` +\n      `    WHERE cons.constraint_type = 'P'` +\n      `    AND cons.constraint_name = cols.constraint_name` +\n      `    AND cons.owner = cols.owner` +\n      `    AND cols.table_name = '${to}';` +\n      `    EXECUTE IMMEDIATE ('create or replace trigger \"${toTriggerName}\"` +\n      `    BEFORE INSERT on \"${to}\" for each row` +\n      `      declare` +\n      `      checking number := 1;` +\n      `      begin` +\n      `        if (:new.\"' || PK_NAME || '\" is null) then` +\n      `          while checking >= 1 loop` +\n      `            select \"${toSequenceName}\".nextval into :new.\"' || PK_NAME || '\" from dual;` +\n      `            select count(\"' || PK_NAME || '\") into checking from \"${to}\"` +\n      `            where \"' || PK_NAME || '\" = :new.\"' || PK_NAME || '\";` +\n      `          end loop;` +\n      `        end if;` +\n      `      end;');` +\n      `  end if;` +\n      `END;`\n    );\n  },\n};\n\nmodule.exports = trigger;\n","const ColumnBuilder = require('../../../schema/columnbuilder');\nconst toArray = require('lodash/toArray');\n\nclass ColumnBuilder_Oracle extends ColumnBuilder {\n  constructor() {\n    super(...arguments);\n  }\n\n  // checkIn added to the builder to allow the column compiler to change the\n  // order via the modifiers (\"check\" must be after \"default\")\n  checkIn() {\n    this._modifiers.checkIn = toArray(arguments);\n    return this;\n  }\n}\n\nmodule.exports = ColumnBuilder_Oracle;\n","const Trigger = require('./trigger');\n\n// helper function for pushAdditional in increments() and bigincrements()\nfunction createAutoIncrementTriggerAndSequence(columnCompiler) {\n  // TODO Add warning that sequence etc is created\n  columnCompiler.pushAdditional(function () {\n    const tableName = this.tableCompiler.tableNameRaw;\n    const schemaName = this.tableCompiler.schemaNameRaw;\n    const createTriggerSQL = Trigger.createAutoIncrementTrigger(\n      this.client.logger,\n      tableName,\n      schemaName\n    );\n    this.pushQuery(createTriggerSQL);\n  });\n}\n\nmodule.exports = {\n  createAutoIncrementTriggerAndSequence,\n};\n","const uniq = require('lodash/uniq');\nconst Raw = require('../../../raw');\nconst ColumnCompiler = require('../../../schema/columncompiler');\nconst {\n  createAutoIncrementTriggerAndSequence,\n} = require('./internal/incrementUtils');\nconst { toNumber } = require('../../../util/helpers');\n\n// Column Compiler\n// -------\n\nclass ColumnCompiler_Oracle extends ColumnCompiler {\n  constructor() {\n    super(...arguments);\n    this.modifiers = ['defaultTo', 'checkIn', 'nullable', 'comment'];\n  }\n\n  increments(options = { primaryKey: true }) {\n    createAutoIncrementTriggerAndSequence(this);\n    return (\n      'integer not null' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n\n  bigincrements(options = { primaryKey: true }) {\n    createAutoIncrementTriggerAndSequence(this);\n    return (\n      'number(20, 0) not null' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n\n  floating(precision) {\n    const parsedPrecision = toNumber(precision, 0);\n    return `float${parsedPrecision ? `(${parsedPrecision})` : ''}`;\n  }\n\n  double(precision, scale) {\n    // if (!precision) return 'number'; // TODO: Check If default is ok\n    return `number(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  decimal(precision, scale) {\n    if (precision === null) return 'decimal';\n    return `decimal(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  integer(length) {\n    return length ? `number(${toNumber(length, 11)})` : 'integer';\n  }\n\n  enu(allowed) {\n    allowed = uniq(allowed);\n    const maxLength = (allowed || []).reduce(\n      (maxLength, name) => Math.max(maxLength, String(name).length),\n      1\n    );\n\n    // implicitly add the enum values as checked values\n    this.columnBuilder._modifiers.checkIn = [allowed];\n\n    return `varchar2(${maxLength})`;\n  }\n\n  datetime(without) {\n    return without ? 'timestamp' : 'timestamp with time zone';\n  }\n\n  timestamp(without) {\n    return without ? 'timestamp' : 'timestamp with time zone';\n  }\n\n  bool() {\n    // implicitly add the check for 0 and 1\n    this.columnBuilder._modifiers.checkIn = [[0, 1]];\n    return 'number(1, 0)';\n  }\n\n  varchar(length) {\n    return `varchar2(${toNumber(length, 255)})`;\n  }\n\n  // Modifiers\n  // ------\n\n  comment(comment) {\n    const columnName = this.args[0] || this.defaults('columnName');\n\n    this.pushAdditional(function () {\n      this.pushQuery(\n        `comment on column ${this.tableCompiler.tableName()}.` +\n          this.formatter.wrap(columnName) +\n          \" is '\" +\n          (comment || '') +\n          \"'\"\n      );\n    }, comment);\n  }\n\n  checkIn(value) {\n    // TODO: Maybe accept arguments also as array\n    // TODO: value(s) should be escaped properly\n    if (value === undefined) {\n      return '';\n    } else if (value instanceof Raw) {\n      value = value.toQuery();\n    } else if (Array.isArray(value)) {\n      value = value.map((v) => `'${v}'`).join(', ');\n    } else {\n      value = `'${value}'`;\n    }\n    return `check (${this.formatter.wrap(this.args[0])} in (${value}))`;\n  }\n}\n\nColumnCompiler_Oracle.prototype.tinyint = 'smallint';\nColumnCompiler_Oracle.prototype.smallint = 'smallint';\nColumnCompiler_Oracle.prototype.mediumint = 'integer';\nColumnCompiler_Oracle.prototype.biginteger = 'number(20, 0)';\nColumnCompiler_Oracle.prototype.text = 'clob';\nColumnCompiler_Oracle.prototype.time = 'timestamp with time zone';\nColumnCompiler_Oracle.prototype.bit = 'clob';\nColumnCompiler_Oracle.prototype.json = 'clob';\n\nmodule.exports = ColumnCompiler_Oracle;\n","/* eslint max-len:0 */\n\nconst utils = require('../utils');\nconst TableCompiler = require('../../../schema/tablecompiler');\nconst helpers = require('../../../util/helpers');\nconst Trigger = require('./internal/trigger');\nconst { isObject } = require('../../../util/is');\n\n// Table Compiler\n// ------\n\nclass TableCompiler_Oracle extends TableCompiler {\n  constructor() {\n    super(...arguments);\n  }\n\n  addColumns(columns, prefix) {\n    if (columns.sql.length > 0) {\n      prefix = prefix || this.addColumnsPrefix;\n\n      const columnSql = columns.sql;\n      const alter = this.lowerCase ? 'alter table ' : 'ALTER TABLE ';\n\n      let sql = `${alter}${this.tableName()} ${prefix}`;\n      if (columns.sql.length > 1) {\n        sql += `(${columnSql.join(', ')})`;\n      } else {\n        sql += columnSql.join(', ');\n      }\n\n      this.pushQuery({\n        sql,\n        bindings: columns.bindings,\n      });\n    }\n  }\n\n  // Compile a rename column command.\n  renameColumn(from, to) {\n    // Remove quotes around tableName\n    const tableName = this.tableName().slice(1, -1);\n    return this.pushQuery(\n      Trigger.renameColumnTrigger(this.client.logger, tableName, from, to)\n    );\n  }\n\n  compileAdd(builder) {\n    const table = this.formatter.wrap(builder);\n    const columns = this.prefixArray('add column', this.getColumns(builder));\n    return this.pushQuery({\n      sql: `alter table ${table} ${columns.join(', ')}`,\n    });\n  }\n\n  // Adds the \"create\" query to the query sequence.\n  createQuery(columns, ifNot, like) {\n    const columnsSql =\n      like && this.tableNameLike()\n        ? ' as (select * from ' + this.tableNameLike() + ' where 0=1)'\n        : ' (' + columns.sql.join(', ') + this._addChecks() + ')';\n    const sql = `create table ${this.tableName()}${columnsSql}`;\n\n    this.pushQuery({\n      // catch \"name is already used by an existing object\" for workaround for \"if not exists\"\n      sql: ifNot ? utils.wrapSqlWithCatch(sql, -955) : sql,\n      bindings: columns.bindings,\n    });\n    if (this.single.comment) this.comment(this.single.comment);\n    if (like) {\n      this.addColumns(columns, this.addColumnsPrefix);\n    }\n  }\n\n  // Compiles the comment on the table.\n  comment(comment) {\n    this.pushQuery(`comment on table ${this.tableName()} is '${comment}'`);\n  }\n\n  dropColumn() {\n    const columns = helpers.normalizeArr.apply(null, arguments);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop (${this.formatter.columnize(\n        columns\n      )})`\n    );\n  }\n\n  _indexCommand(type, tableName, columns) {\n    return this.formatter.wrap(\n      utils.generateCombinedName(this.client.logger, type, tableName, columns)\n    );\n  }\n\n  primary(columns, constraintName) {\n    let deferrable;\n    if (isObject(constraintName)) {\n      ({ constraintName, deferrable } = constraintName);\n    }\n    deferrable = deferrable ? ` deferrable initially ${deferrable}` : '';\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n    const primaryCols = columns;\n    let incrementsCols = [];\n    if (this.grouped.columns) {\n      incrementsCols = this._getIncrementsColumnNames();\n      if (incrementsCols) {\n        incrementsCols.forEach((c) => {\n          if (!primaryCols.includes(c)) {\n            primaryCols.unshift(c);\n          }\n        });\n      }\n    }\n    this.pushQuery(\n      `alter table ${this.tableName()} add constraint ${constraintName} primary key (${this.formatter.columnize(\n        primaryCols\n      )})${deferrable}`\n    );\n  }\n\n  dropPrimary(constraintName) {\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(this.tableNameRaw + '_pkey');\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${constraintName}`\n    );\n  }\n\n  index(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    this.pushQuery(\n      `create index ${indexName} on ${this.tableName()}` +\n        ' (' +\n        this.formatter.columnize(columns) +\n        ')'\n    );\n  }\n\n  dropIndex(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    this.pushQuery(`drop index ${indexName}`);\n  }\n\n  unique(columns, indexName) {\n    let deferrable;\n    if (isObject(indexName)) {\n      ({ indexName, deferrable } = indexName);\n    }\n    deferrable = deferrable ? ` deferrable initially ${deferrable}` : '';\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} add constraint ${indexName}` +\n        ' unique (' +\n        this.formatter.columnize(columns) +\n        ')' +\n        deferrable\n    );\n  }\n\n  dropUnique(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${indexName}`\n    );\n  }\n\n  dropForeign(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('foreign', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${indexName}`\n    );\n  }\n}\n\nTableCompiler_Oracle.prototype.addColumnsPrefix = 'add ';\nTableCompiler_Oracle.prototype.alterColumnsPrefix = 'modify ';\n\nmodule.exports = TableCompiler_Oracle;\n","// Oracle Client\n// -------\nconst { ReturningHelper } = require('./utils');\nconst { isConnectionError } = require('./utils');\nconst Client = require('../../client');\nconst SchemaCompiler = require('./schema/oracle-compiler');\nconst ColumnBuilder = require('./schema/oracle-columnbuilder');\nconst ColumnCompiler = require('./schema/oracle-columncompiler');\nconst TableCompiler = require('./schema/oracle-tablecompiler');\n\n// Always initialize with the \"QueryBuilder\" and \"QueryCompiler\"\n// objects, which extend the base 'lib/query/builder' and\n// 'lib/query/compiler', respectively.\nclass Client_Oracle extends Client {\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  columnBuilder() {\n    return new ColumnBuilder(this, ...arguments);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  // Return the database for the Oracle client.\n  database() {\n    return this.connectionSettings.database;\n  }\n\n  // Position the bindings for the query.\n  positionBindings(sql) {\n    let questionCount = 0;\n    return sql.replace(/\\?/g, function () {\n      questionCount += 1;\n      return `:${questionCount}`;\n    });\n  }\n\n  _stream(connection, obj, stream, options) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    return new Promise(function (resolver, rejecter) {\n      stream.on('error', (err) => {\n        if (isConnectionError(err)) {\n          connection.__knex__disposed = err;\n        }\n        rejecter(err);\n      });\n      stream.on('end', resolver);\n      const queryStream = connection.queryStream(\n        obj.sql,\n        obj.bindings,\n        options\n      );\n      queryStream.pipe(stream);\n      queryStream.on('error', function (error) {\n        rejecter(error);\n        stream.emit('error', error);\n      });\n    });\n  }\n\n  // Formatter part\n\n  alias(first, second) {\n    return first + ' ' + second;\n  }\n\n  parameter(value, builder, formatter) {\n    // Returning helper uses always ROWID as string\n    if (value instanceof ReturningHelper && this.driver) {\n      value = new this.driver.OutParam(this.driver.OCCISTRING);\n    } else if (typeof value === 'boolean') {\n      value = value ? 1 : 0;\n    }\n    return super.parameter(value, builder, formatter);\n  }\n}\n\nObject.assign(Client_Oracle.prototype, {\n  dialect: 'oracle',\n\n  driverName: 'oracle',\n});\n\nmodule.exports = Client_Oracle;\n","/* eslint max-len:0 */\n\n// Oracle Query Builder & Compiler\n// ------\nconst compact = require('lodash/compact');\nconst identity = require('lodash/identity');\nconst isEmpty = require('lodash/isEmpty');\nconst isPlainObject = require('lodash/isPlainObject');\nconst reduce = require('lodash/reduce');\nconst QueryCompiler = require('../../../query/querycompiler');\nconst { ReturningHelper } = require('../utils');\nconst { isString } = require('../../../util/is');\n\nconst components = [\n  'columns',\n  'join',\n  'where',\n  'union',\n  'group',\n  'having',\n  'order',\n  'lock',\n];\n\n// Query Compiler\n// -------\n\n// Set the \"Formatter\" to use for the queries,\n// ensuring that all parameterized values (even across sub-queries)\n// are properly built into the same query.\nclass QueryCompiler_Oracle extends QueryCompiler {\n  constructor(client, builder, formatter) {\n    super(client, builder, formatter);\n\n    const { onConflict } = this.single;\n    if (onConflict) {\n      throw new Error('.onConflict() is not supported for oracledb.');\n    }\n\n    // Compiles the `select` statement, or nested sub-selects\n    // by calling each of the component compilers, trimming out\n    // the empties, and returning a generated query string.\n    this.first = this.select;\n  }\n\n  // Compiles an \"insert\" query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    let insertValues = this.single.insert || [];\n    let { returning } = this.single;\n\n    if (!Array.isArray(insertValues) && isPlainObject(this.single.insert)) {\n      insertValues = [this.single.insert];\n    }\n\n    // always wrap returning argument in array\n    if (returning && !Array.isArray(returning)) {\n      returning = [returning];\n    }\n\n    if (\n      Array.isArray(insertValues) &&\n      insertValues.length === 1 &&\n      isEmpty(insertValues[0])\n    ) {\n      return this._addReturningToSqlAndConvert(\n        `insert into ${this.tableName} (${this.formatter.wrap(\n          this.single.returning\n        )}) values (default)`,\n        returning,\n        this.tableName\n      );\n    }\n\n    if (\n      isEmpty(this.single.insert) &&\n      typeof this.single.insert !== 'function'\n    ) {\n      return '';\n    }\n\n    const insertData = this._prepInsert(insertValues);\n\n    const sql = {};\n\n    if (isString(insertData)) {\n      return this._addReturningToSqlAndConvert(\n        `insert into ${this.tableName} ${insertData}`,\n        returning\n      );\n    }\n\n    if (insertData.values.length === 1) {\n      return this._addReturningToSqlAndConvert(\n        `insert into ${this.tableName} (${this.formatter.columnize(\n          insertData.columns\n        )}) values (${this.client.parameterize(\n          insertData.values[0],\n          undefined,\n          this.builder,\n          this.bindingsHolder\n        )})`,\n        returning,\n        this.tableName\n      );\n    }\n\n    const insertDefaultsOnly = insertData.columns.length === 0;\n\n    sql.sql =\n      'begin ' +\n      insertData.values\n        .map((value) => {\n          let returningHelper;\n          const parameterizedValues = !insertDefaultsOnly\n            ? this.client.parameterize(\n                value,\n                this.client.valueForUndefined,\n                this.builder,\n                this.bindingsHolder\n              )\n            : '';\n          const returningValues = Array.isArray(returning)\n            ? returning\n            : [returning];\n          let subSql = `insert into ${this.tableName} `;\n\n          if (returning) {\n            returningHelper = new ReturningHelper(returningValues.join(':'));\n            sql.outParams = (sql.outParams || []).concat(returningHelper);\n          }\n\n          if (insertDefaultsOnly) {\n            // no columns given so only the default value\n            subSql += `(${this.formatter.wrap(\n              this.single.returning\n            )}) values (default)`;\n          } else {\n            subSql += `(${this.formatter.columnize(\n              insertData.columns\n            )}) values (${parameterizedValues})`;\n          }\n          subSql += returning\n            ? ` returning ROWID into ${this.client.parameter(\n                returningHelper,\n                this.builder,\n                this.bindingsHolder\n              )}`\n            : '';\n\n          // pre bind position because subSql is an execute immediate parameter\n          // later position binding will only convert the ? params\n\n          subSql = this.formatter.client.positionBindings(subSql);\n\n          const parameterizedValuesWithoutDefault = parameterizedValues\n            .replace('DEFAULT, ', '')\n            .replace(', DEFAULT', '');\n          return (\n            `execute immediate '${subSql.replace(/'/g, \"''\")}` +\n            (parameterizedValuesWithoutDefault || returning ? \"' using \" : '') +\n            parameterizedValuesWithoutDefault +\n            (parameterizedValuesWithoutDefault && returning ? ', ' : '') +\n            (returning ? 'out ?' : '') +\n            ';'\n          );\n        })\n        .join(' ') +\n      'end;';\n\n    if (returning) {\n      sql.returning = returning;\n      // generate select statement with special order by to keep the order because 'in (..)' may change the order\n      sql.returningSql =\n        `select ${this.formatter.columnize(returning)}` +\n        ' from ' +\n        this.tableName +\n        ' where ROWID in (' +\n        sql.outParams.map((v, i) => `:${i + 1}`).join(', ') +\n        ')' +\n        ' order by case ROWID ' +\n        sql.outParams\n          .map((v, i) => `when CHARTOROWID(:${i + 1}) then ${i}`)\n          .join(' ') +\n        ' end';\n    }\n\n    return sql;\n  }\n\n  // Update method, including joins, wheres, order & limits.\n  update() {\n    const updates = this._prepUpdate(this.single.update);\n    const where = this.where();\n    let { returning } = this.single;\n    const sql =\n      `update ${this.tableName}` +\n      ' set ' +\n      updates.join(', ') +\n      (where ? ` ${where}` : '');\n\n    if (!returning) {\n      return sql;\n    }\n\n    // always wrap returning argument in array\n    if (!Array.isArray(returning)) {\n      returning = [returning];\n    }\n\n    return this._addReturningToSqlAndConvert(sql, returning, this.tableName);\n  }\n\n  // Compiles a `truncate` query.\n  truncate() {\n    return `truncate table ${this.tableName}`;\n  }\n\n  forUpdate() {\n    return 'for update';\n  }\n\n  forShare() {\n    // lock for share is not directly supported by oracle\n    // use LOCK TABLE .. IN SHARE MODE; instead\n    this.client.logger.warn(\n      'lock for share is not supported by oracle dialect'\n    );\n    return '';\n  }\n\n  // Compiles a `columnInfo` query.\n  columnInfo() {\n    const column = this.single.columnInfo;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    // Node oracle drivers doesn't support LONG type (which is data_default type)\n    const sql = `select * from xmltable( '/ROWSET/ROW'\n      passing dbms_xmlgen.getXMLType('\n      select char_col_decl_length, column_name, data_type, data_default, nullable\n      from all_tab_columns where table_name = ''${table}'' ')\n      columns\n      CHAR_COL_DECL_LENGTH number, COLUMN_NAME varchar2(200), DATA_TYPE varchar2(106),\n      DATA_DEFAULT clob, NULLABLE varchar2(1))`;\n\n    return {\n      sql: sql,\n      output(resp) {\n        const out = reduce(\n          resp,\n          function (columns, val) {\n            columns[val.COLUMN_NAME] = {\n              type: val.DATA_TYPE,\n              defaultValue: val.DATA_DEFAULT,\n              maxLength: val.CHAR_COL_DECL_LENGTH,\n              nullable: val.NULLABLE === 'Y',\n            };\n            return columns;\n          },\n          {}\n        );\n        return (column && out[column]) || out;\n      },\n    };\n  }\n\n  select() {\n    let query = this.with();\n    const statements = components.map((component) => {\n      return this[component]();\n    });\n    query += compact(statements).join(' ');\n    return this._surroundQueryWithLimitAndOffset(query);\n  }\n\n  aggregate(stmt) {\n    return this._aggregate(stmt, { aliasSeparator: ' ' });\n  }\n\n  // for single commands only\n  _addReturningToSqlAndConvert(sql, returning, tableName) {\n    const res = {\n      sql,\n    };\n\n    if (!returning) {\n      return res;\n    }\n\n    const returningValues = Array.isArray(returning) ? returning : [returning];\n    const returningHelper = new ReturningHelper(returningValues.join(':'));\n    res.sql =\n      sql +\n      ' returning ROWID into ' +\n      this.client.parameter(returningHelper, this.builder, this.bindingsHolder);\n    res.returningSql = `select ${this.formatter.columnize(\n      returning\n    )} from ${tableName} where ROWID = :1`;\n    res.outParams = [returningHelper];\n    res.returning = returning;\n    return res;\n  }\n\n  _surroundQueryWithLimitAndOffset(query) {\n    let { limit } = this.single;\n    const { offset } = this.single;\n    const hasLimit = limit || limit === 0 || limit === '0';\n    limit = +limit;\n\n    if (!hasLimit && !offset) return query;\n    query = query || '';\n\n    if (hasLimit && !offset) {\n      return `select * from (${query}) where rownum <= ${this._getValueOrParameterFromAttribute(\n        'limit',\n        limit\n      )}`;\n    }\n\n    const endRow = +offset + (hasLimit ? limit : 10000000000000);\n\n    return (\n      'select * from ' +\n      '(select row_.*, ROWNUM rownum_ from (' +\n      query +\n      ') row_ ' +\n      'where rownum <= ' +\n      (this.single.skipBinding['offset']\n        ? endRow\n        : this.client.parameter(endRow, this.builder, this.bindingsHolder)) +\n      ') ' +\n      'where rownum_ > ' +\n      this._getValueOrParameterFromAttribute('offset', offset)\n    );\n  }\n}\n\nmodule.exports = QueryCompiler_Oracle;\n","const Utils = require('../oracle/utils');\nconst { promisify } = require('util');\nconst stream = require('stream');\n\nfunction BlobHelper(columnName, value) {\n  this.columnName = columnName;\n  this.value = value;\n  this.returning = false;\n}\n\nBlobHelper.prototype.toString = function () {\n  return '[object BlobHelper:' + this.columnName + ']';\n};\n\n/**\n * @param stream\n * @param {'string' | 'buffer'} type\n */\nfunction readStream(stream, type) {\n  return new Promise((resolve, reject) => {\n    let data = type === 'string' ? '' : Buffer.alloc(0);\n\n    stream.on('error', function (err) {\n      reject(err);\n    });\n    stream.on('data', function (chunk) {\n      if (type === 'string') {\n        data += chunk;\n      } else {\n        data = Buffer.concat([data, chunk]);\n      }\n    });\n    stream.on('end', function () {\n      resolve(data);\n    });\n  });\n}\n\nconst lobProcessing = function (stream) {\n  const oracledb = require('oracledb');\n\n  /**\n   * @type 'string' | 'buffer'\n   */\n  let type;\n\n  if (stream.type) {\n    // v1.2-v4\n    if (stream.type === oracledb.BLOB) {\n      type = 'buffer';\n    } else if (stream.type === oracledb.CLOB) {\n      type = 'string';\n    }\n  } else if (stream.iLob) {\n    // v1\n    if (stream.iLob.type === oracledb.CLOB) {\n      type = 'string';\n    } else if (stream.iLob.type === oracledb.BLOB) {\n      type = 'buffer';\n    }\n  } else {\n    throw new Error('Unrecognized oracledb lob stream type');\n  }\n  if (type === 'string') {\n    stream.setEncoding('utf-8');\n  }\n  return readStream(stream, type);\n};\n\nfunction monkeyPatchConnection(connection, client) {\n  // Connection is already monkey-patched\n  if (connection.executeAsync) {\n    return;\n  }\n\n  connection.commitAsync = function () {\n    return new Promise((commitResolve, commitReject) => {\n      this.commit(function (err) {\n        if (err) {\n          return commitReject(err);\n        }\n        commitResolve();\n      });\n    });\n  };\n  connection.rollbackAsync = function () {\n    return new Promise((rollbackResolve, rollbackReject) => {\n      this.rollback(function (err) {\n        if (err) {\n          return rollbackReject(err);\n        }\n        rollbackResolve();\n      });\n    });\n  };\n  const fetchAsync = promisify(function (sql, bindParams, options, cb) {\n    options = options || {};\n    options.outFormat = client.driver.OUT_FORMAT_OBJECT || client.driver.OBJECT;\n    if (!options.outFormat) {\n      throw new Error('not found oracledb.outFormat constants');\n    }\n    if (options.resultSet) {\n      connection.execute(\n        sql,\n        bindParams || [],\n        options,\n        function (err, result) {\n          if (err) {\n            if (Utils.isConnectionError(err)) {\n              connection.close().catch(function (err) {});\n              connection.__knex__disposed = err;\n            }\n            return cb(err);\n          }\n          const fetchResult = { rows: [], resultSet: result.resultSet };\n          const numRows = 100;\n          const fetchRowsFromRS = function (connection, resultSet, numRows) {\n            resultSet.getRows(numRows, function (err, rows) {\n              if (err) {\n                if (Utils.isConnectionError(err)) {\n                  connection.close().catch(function (err) {});\n                  connection.__knex__disposed = err;\n                }\n                resultSet.close(function () {\n                  return cb(err);\n                });\n              } else if (rows.length === 0) {\n                return cb(null, fetchResult);\n              } else if (rows.length > 0) {\n                if (rows.length === numRows) {\n                  fetchResult.rows = fetchResult.rows.concat(rows);\n                  fetchRowsFromRS(connection, resultSet, numRows);\n                } else {\n                  fetchResult.rows = fetchResult.rows.concat(rows);\n                  return cb(null, fetchResult);\n                }\n              }\n            });\n          };\n          fetchRowsFromRS(connection, result.resultSet, numRows);\n        }\n      );\n    } else {\n      connection.execute(\n        sql,\n        bindParams || [],\n        options,\n        function (err, result) {\n          if (err) {\n            // dispose the connection on connection error\n            if (Utils.isConnectionError(err)) {\n              connection.close().catch(function (err) {});\n              connection.__knex__disposed = err;\n            }\n            return cb(err);\n          }\n\n          return cb(null, result);\n        }\n      );\n    }\n  });\n  connection.executeAsync = function (sql, bindParams, options) {\n    // Read all lob\n    return fetchAsync(sql, bindParams, options).then(async (results) => {\n      const closeResultSet = () => {\n        return results.resultSet\n          ? promisify(results.resultSet.close).call(results.resultSet)\n          : Promise.resolve();\n      };\n\n      // Collect LOBs to read\n      const lobs = [];\n      if (results.rows) {\n        if (Array.isArray(results.rows)) {\n          for (let i = 0; i < results.rows.length; i++) {\n            // Iterate through the rows\n            const row = results.rows[i];\n            for (const column in row) {\n              if (row[column] instanceof stream.Readable) {\n                lobs.push({ index: i, key: column, stream: row[column] });\n              }\n            }\n          }\n        }\n      }\n\n      try {\n        for (const lob of lobs) {\n          // todo should be fetchAsString/fetchAsBuffer polyfill only\n          results.rows[lob.index][lob.key] = await lobProcessing(lob.stream);\n        }\n      } catch (e) {\n        await closeResultSet().catch(() => {});\n\n        throw e;\n      }\n\n      await closeResultSet();\n\n      return results;\n    });\n  };\n}\n\nUtils.BlobHelper = BlobHelper;\nUtils.monkeyPatchConnection = monkeyPatchConnection;\nmodule.exports = Utils;\n","const clone = require('lodash/clone');\nconst each = require('lodash/each');\nconst isEmpty = require('lodash/isEmpty');\nconst isPlainObject = require('lodash/isPlainObject');\nconst Oracle_Compiler = require('../../oracle/query/oracle-querycompiler');\nconst ReturningHelper = require('../utils').ReturningHelper;\nconst BlobHelper = require('../utils').BlobHelper;\nconst { isString } = require('../../../util/is');\nconst {\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nclass Oracledb_Compiler extends Oracle_Compiler {\n  // Compiles an \"insert\" query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    const self = this;\n    const outBindPrep = this._prepOutbindings(\n      this.single.insert,\n      this.single.returning\n    );\n    const outBinding = outBindPrep.outBinding;\n    const returning = outBindPrep.returning;\n    const insertValues = outBindPrep.values;\n\n    if (\n      Array.isArray(insertValues) &&\n      insertValues.length === 1 &&\n      isEmpty(insertValues[0])\n    ) {\n      const returningFragment = this.single.returning\n        ? ' (' + this.formatter.wrap(this.single.returning) + ')'\n        : '';\n\n      return this._addReturningToSqlAndConvert(\n        'insert into ' +\n          this.tableName +\n          returningFragment +\n          ' values (default)',\n        outBinding[0],\n        this.tableName,\n        returning\n      );\n    }\n\n    if (\n      isEmpty(this.single.insert) &&\n      typeof this.single.insert !== 'function'\n    ) {\n      return '';\n    }\n\n    const insertData = this._prepInsert(insertValues);\n\n    const sql = {};\n\n    if (isString(insertData)) {\n      return this._addReturningToSqlAndConvert(\n        'insert into ' + this.tableName + ' ' + insertData,\n        outBinding[0],\n        this.tableName,\n        returning\n      );\n    }\n\n    if (insertData.values.length === 1) {\n      return this._addReturningToSqlAndConvert(\n        'insert into ' +\n          this.tableName +\n          ' (' +\n          this.formatter.columnize(insertData.columns) +\n          ') values (' +\n          this.client.parameterize(\n            insertData.values[0],\n            undefined,\n            this.builder,\n            this.bindingsHolder\n          ) +\n          ')',\n        outBinding[0],\n        this.tableName,\n        returning\n      );\n    }\n\n    const insertDefaultsOnly = insertData.columns.length === 0;\n    sql.returning = returning;\n    sql.sql =\n      'begin ' +\n      insertData.values\n        .map(function (value, index) {\n          const parameterizedValues = !insertDefaultsOnly\n            ? self.client.parameterize(\n                value,\n                self.client.valueForUndefined,\n                self.builder,\n                self.bindingsHolder\n              )\n            : '';\n          let subSql = 'insert into ' + self.tableName;\n\n          if (insertDefaultsOnly) {\n            // No columns given so only the default value\n            subSql +=\n              ' (' +\n              self.formatter.wrap(self.single.returning) +\n              ') values (default)';\n          } else {\n            subSql +=\n              ' (' +\n              self.formatter.columnize(insertData.columns) +\n              ') values (' +\n              parameterizedValues +\n              ')';\n          }\n\n          let returningClause = '';\n          let intoClause = '';\n          // ToDo review if this code is still needed or could be dropped\n          // eslint-disable-next-line no-unused-vars\n          let usingClause = '';\n          let outClause = '';\n\n          each(value, function (val) {\n            if (!(val instanceof BlobHelper)) {\n              usingClause += ' ?,';\n            }\n          });\n          // eslint-disable-next-line no-unused-vars\n          usingClause = usingClause.slice(0, -1);\n\n          // Build returning and into clauses\n          outBinding[index].forEach(function (ret) {\n            const columnName = ret.columnName || ret;\n            returningClause += self.formatter.wrap(columnName) + ',';\n            intoClause += ' ?,';\n            outClause += ' out ?,';\n\n            // Add Helpers to bindings\n            if (ret instanceof BlobHelper) {\n              return self.formatter.bindings.push(ret);\n            }\n            self.formatter.bindings.push(new ReturningHelper(columnName));\n          });\n\n          // Strip last comma\n          returningClause = returningClause.slice(0, -1);\n          intoClause = intoClause.slice(0, -1);\n          outClause = outClause.slice(0, -1);\n\n          if (returningClause && intoClause) {\n            subSql += ' returning ' + returningClause + ' into' + intoClause;\n          }\n\n          // Pre bind position because subSql is an execute immediate parameter\n          // later position binding will only convert the ? params\n          subSql = self.formatter.client.positionBindings(subSql);\n          const parameterizedValuesWithoutDefaultAndBlob = parameterizedValues\n            .replace(/DEFAULT, /g, '')\n            .replace(/, DEFAULT/g, '')\n            .replace('EMPTY_BLOB(), ', '')\n            .replace(', EMPTY_BLOB()', '');\n          return (\n            \"execute immediate '\" +\n            subSql.replace(/'/g, \"''\") +\n            (parameterizedValuesWithoutDefaultAndBlob || value\n              ? \"' using \"\n              : '') +\n            parameterizedValuesWithoutDefaultAndBlob +\n            (parameterizedValuesWithoutDefaultAndBlob && outClause ? ',' : '') +\n            outClause +\n            ';'\n          );\n        })\n        .join(' ') +\n      'end;';\n\n    sql.outBinding = outBinding;\n    if (returning[0] === '*') {\n      // Generate select statement with special order by\n      // to keep the order because 'in (..)' may change the order\n      sql.returningSql = function () {\n        return (\n          'select * from ' +\n          self.tableName +\n          ' where ROWID in (' +\n          this.outBinding\n            .map(function (v, i) {\n              return ':' + (i + 1);\n            })\n            .join(', ') +\n          ')' +\n          ' order by case ROWID ' +\n          this.outBinding\n            .map(function (v, i) {\n              return 'when CHARTOROWID(:' + (i + 1) + ') then ' + i;\n            })\n            .join(' ') +\n          ' end'\n        );\n      };\n    }\n\n    return sql;\n  }\n\n  with() {\n    // WITH RECURSIVE is a syntax error in Oracle SQL.\n    // So mark all statements as non-recursive, generate the SQL, then restore.\n    // This approach ensures any changes in base class with() get propagated here.\n    const undoList = [];\n    if (this.grouped.with) {\n      for (const stmt of this.grouped.with) {\n        if (stmt.recursive) {\n          undoList.push(stmt);\n          stmt.recursive = false;\n        }\n      }\n    }\n\n    const result = super.with();\n\n    // Restore the recursive markings, in case this same query gets cloned and passed to other drivers.\n    for (const stmt of undoList) {\n      stmt.recursive = true;\n    }\n    return result;\n  }\n\n  _addReturningToSqlAndConvert(sql, outBinding, tableName, returning) {\n    const self = this;\n    const res = {\n      sql: sql,\n    };\n\n    if (!outBinding) {\n      return res;\n    }\n    const returningValues = Array.isArray(outBinding)\n      ? outBinding\n      : [outBinding];\n    let returningClause = '';\n    let intoClause = '';\n    // Build returning and into clauses\n    returningValues.forEach(function (ret) {\n      const columnName = ret.columnName || ret;\n      returningClause += self.formatter.wrap(columnName) + ',';\n      intoClause += '?,';\n\n      // Add Helpers to bindings\n      if (ret instanceof BlobHelper) {\n        return self.formatter.bindings.push(ret);\n      }\n      self.formatter.bindings.push(new ReturningHelper(columnName));\n    });\n    res.sql = sql;\n\n    // Strip last comma\n    returningClause = returningClause.slice(0, -1);\n    intoClause = intoClause.slice(0, -1);\n    if (returningClause && intoClause) {\n      res.sql += ' returning ' + returningClause + ' into ' + intoClause;\n    }\n    res.outBinding = [outBinding];\n    if (returning[0] === '*') {\n      res.returningSql = function () {\n        return 'select * from ' + self.tableName + ' where ROWID = :1';\n      };\n    }\n    res.returning = returning;\n\n    return res;\n  }\n\n  _prepOutbindings(paramValues, paramReturning) {\n    const result = {};\n    let params = paramValues || [];\n    let returning = paramReturning || [];\n    if (!Array.isArray(params) && isPlainObject(paramValues)) {\n      params = [params];\n    }\n    // Always wrap returning argument in array\n    if (returning && !Array.isArray(returning)) {\n      returning = [returning];\n    }\n\n    const outBinding = [];\n    // Handle Buffer value as Blob\n    each(params, function (values, index) {\n      if (returning[0] === '*') {\n        outBinding[index] = ['ROWID'];\n      } else {\n        outBinding[index] = clone(returning);\n      }\n      each(values, function (value, key) {\n        if (value instanceof Buffer) {\n          values[key] = new BlobHelper(key, value);\n\n          // Delete blob duplicate in returning\n          const blobIndex = outBinding[index].indexOf(key);\n          if (blobIndex >= 0) {\n            outBinding[index].splice(blobIndex, 1);\n            values[key].returning = true;\n          }\n          outBinding[index].push(values[key]);\n        }\n        if (value === undefined) {\n          delete params[index][key];\n        }\n      });\n    });\n    result.returning = returning;\n    result.outBinding = outBinding;\n    result.values = params;\n    return result;\n  }\n\n  _groupOrder(item, type) {\n    return super._groupOrderNulls(item, type);\n  }\n\n  update() {\n    const self = this;\n    const sql = {};\n    const outBindPrep = this._prepOutbindings(\n      this.single.update || this.single.counter,\n      this.single.returning\n    );\n    const outBinding = outBindPrep.outBinding;\n    const returning = outBindPrep.returning;\n\n    const updates = this._prepUpdate(this.single.update);\n    const where = this.where();\n\n    let returningClause = '';\n    let intoClause = '';\n\n    if (isEmpty(updates) && typeof this.single.update !== 'function') {\n      return '';\n    }\n\n    // Build returning and into clauses\n    outBinding.forEach(function (out) {\n      out.forEach(function (ret) {\n        const columnName = ret.columnName || ret;\n        returningClause += self.formatter.wrap(columnName) + ',';\n        intoClause += ' ?,';\n\n        // Add Helpers to bindings\n        if (ret instanceof BlobHelper) {\n          return self.formatter.bindings.push(ret);\n        }\n        self.formatter.bindings.push(new ReturningHelper(columnName));\n      });\n    });\n    // Strip last comma\n    returningClause = returningClause.slice(0, -1);\n    intoClause = intoClause.slice(0, -1);\n\n    sql.outBinding = outBinding;\n    sql.returning = returning;\n    sql.sql =\n      'update ' +\n      this.tableName +\n      ' set ' +\n      updates.join(', ') +\n      (where ? ' ' + where : '');\n    if (outBinding.length && !isEmpty(outBinding[0])) {\n      sql.sql += ' returning ' + returningClause + ' into' + intoClause;\n    }\n    if (returning[0] === '*') {\n      sql.returningSql = function () {\n        let sql = 'select * from ' + self.tableName;\n        const modifiedRowsCount = this.rowsAffected.length || this.rowsAffected;\n        let returningSqlIn = ' where ROWID in (';\n        let returningSqlOrderBy = ') order by case ROWID ';\n\n        // Needs special order by because in(...) change result order\n        for (let i = 0; i < modifiedRowsCount; i++) {\n          if (this.returning[0] === '*') {\n            returningSqlIn += ':' + (i + 1) + ', ';\n            returningSqlOrderBy +=\n              'when CHARTOROWID(:' + (i + 1) + ') then ' + i + ' ';\n          }\n        }\n        if (this.returning[0] === '*') {\n          this.returning = this.returning.slice(0, -1);\n          returningSqlIn = returningSqlIn.slice(0, -2);\n          returningSqlOrderBy = returningSqlOrderBy.slice(0, -1);\n        }\n        return (sql += returningSqlIn + returningSqlOrderBy + ' end');\n      };\n    }\n\n    return sql;\n  }\n\n  _jsonPathWrap(extraction) {\n    return `'${extraction.path || extraction[1]}'`;\n  }\n\n  // Json functions\n  jsonExtract(params) {\n    return this._jsonExtract(\n      params.singleValue ? 'json_value' : 'json_query',\n      params\n    );\n  }\n\n  jsonSet(params) {\n    return `json_transform(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )}, set ${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )} = ${this.client.parameter(\n      params.value,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n  }\n\n  jsonInsert(params) {\n    return `json_transform(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )}, insert ${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )} = ${this.client.parameter(\n      params.value,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n  }\n\n  jsonRemove(params) {\n    const jsonCol = `json_transform(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )}, remove ${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n    return params.alias\n      ? this.client.alias(jsonCol, this.formatter.wrap(params.alias))\n      : jsonCol;\n  }\n\n  whereJsonPath(statement) {\n    return this._whereJsonPath('json_value', statement);\n  }\n\n  whereJsonSupersetOf(statement) {\n    throw new Error(\n      'Json superset where clause not actually supported by Oracle'\n    );\n  }\n\n  whereJsonSubsetOf(statement) {\n    throw new Error(\n      'Json subset where clause not actually supported by Oracle'\n    );\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('json_value', clause);\n  }\n}\n\nmodule.exports = Oracledb_Compiler;\n","const TableCompiler_Oracle = require('../../oracle/schema/oracle-tablecompiler');\n\nclass TableCompiler_Oracledb extends TableCompiler_Oracle {\n  constructor(client, tableBuilder) {\n    super(client, tableBuilder);\n  }\n\n  _setNullableState(column, isNullable) {\n    const nullability = isNullable ? 'NULL' : 'NOT NULL';\n    const sql = `alter table ${this.tableName()} modify (${this.formatter.wrap(\n      column\n    )} ${nullability})`;\n    return this.pushQuery({\n      sql: sql,\n    });\n  }\n}\n\nmodule.exports = TableCompiler_Oracledb;\n","const ColumnCompiler_Oracle = require('../../oracle/schema/oracle-columncompiler');\nconst { isObject } = require('../../../util/is');\n\nclass ColumnCompiler_Oracledb extends ColumnCompiler_Oracle {\n  constructor() {\n    super(...arguments);\n    this.modifiers = ['defaultTo', 'nullable', 'comment'];\n    this._addCheckModifiers();\n  }\n\n  datetime(withoutTz) {\n    let useTz;\n    if (isObject(withoutTz)) {\n      ({ useTz } = withoutTz);\n    } else {\n      useTz = !withoutTz;\n    }\n    return useTz ? 'timestamp with local time zone' : 'timestamp';\n  }\n\n  timestamp(withoutTz) {\n    let useTz;\n    if (isObject(withoutTz)) {\n      ({ useTz } = withoutTz);\n    } else {\n      useTz = !withoutTz;\n    }\n    return useTz ? 'timestamp with local time zone' : 'timestamp';\n  }\n\n  checkRegex(regex, constraintName) {\n    return this._check(\n      `REGEXP_LIKE(${this.formatter.wrap(\n        this.getColumnName()\n      )},${this.client._escapeBinding(regex)})`,\n      constraintName\n    );\n  }\n\n  json() {\n    return `varchar2(4000) check (${this.formatter.columnize(\n      this.getColumnName()\n    )} is json)`;\n  }\n\n  jsonb() {\n    return this.json();\n  }\n}\n\nColumnCompiler_Oracledb.prototype.time = 'timestamp with local time zone';\nColumnCompiler_Oracledb.prototype.uuid = ({ useBinaryUuid = false } = {}) =>\n  useBinaryUuid ? 'raw(16)' : 'char(36)';\n\nmodule.exports = ColumnCompiler_Oracledb;\n","/* eslint max-len: 0 */\n\nconst ViewCompiler = require('../../../schema/viewcompiler.js');\n\nclass ViewCompiler_Oracledb extends ViewCompiler {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n\n  createOrReplace() {\n    this.createQuery(this.columns, this.selectQuery, false, true);\n  }\n\n  createMaterializedView() {\n    this.createQuery(this.columns, this.selectQuery, true);\n  }\n}\n\nmodule.exports = ViewCompiler_Oracledb;\n","const ViewBuilder = require('../../../schema/viewbuilder.js');\n\nclass ViewBuilder_Oracledb extends ViewBuilder {\n  constructor() {\n    super(...arguments);\n  }\n\n  checkOption() {\n    this._single.checkOption = 'default_option';\n  }\n}\n\nmodule.exports = ViewBuilder_Oracledb;\n","const Transaction = require('../../execution/transaction');\nconst { timeout, KnexTimeoutError } = require('../../util/timeout');\nconst debugTx = require('debug')('knex:tx');\n\n// There's also a \"read only\", but that's not really an \"isolationLevel\"\nconst supportedIsolationLevels = ['read committed', 'serializable'];\n// Remove this if you make it work and set it to true\nconst isIsolationLevelEnabled = false;\n\nmodule.exports = class Oracle_Transaction extends Transaction {\n  // disable autocommit to allow correct behavior (default is true)\n  begin(conn) {\n    if (this.isolationLevel) {\n      if (isIsolationLevelEnabled) {\n        if (!supportedIsolationLevels.includes(this.isolationLevel)) {\n          this.client.logger.warn(\n            'Oracle only supports read committed and serializable transactions, ignoring the isolation level param'\n          );\n        } else {\n          // I tried this, but it didn't work\n          // Doc here: https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/SET-TRANSACTION.html\n          return this.query(conn, `SET TRANSACTION ${this.isolationLevel}`);\n        }\n      } else {\n        this.client.logger.warn(\n          'Transaction isolation is not currently supported for Oracle'\n        );\n      }\n    }\n    return Promise.resolve();\n  }\n\n  async commit(conn, value) {\n    this._completed = true;\n    try {\n      await conn.commitAsync();\n      this._resolver(value);\n    } catch (err) {\n      this._rejecter(err);\n    }\n  }\n\n  release(conn, value) {\n    return this._resolver(value);\n  }\n\n  rollback(conn, err) {\n    this._completed = true;\n    debugTx('%s: rolling back', this.txid);\n    return timeout(conn.rollbackAsync(), 5000)\n      .catch((e) => {\n        if (!(e instanceof KnexTimeoutError)) {\n          return Promise.reject(e);\n        }\n        this._rejecter(e);\n      })\n      .then(() => {\n        if (err === undefined) {\n          if (this.doNotRejectOnRollback) {\n            this._resolver();\n            return;\n          }\n          err = new Error(`Transaction rejected with non-error: ${err}`);\n        }\n        this._rejecter(err);\n      });\n  }\n\n  savepoint(conn) {\n    return this.query(conn, `SAVEPOINT ${this.txid}`);\n  }\n\n  async acquireConnection(config, cb) {\n    const configConnection = config && config.connection;\n\n    const connection =\n      configConnection || (await this.client.acquireConnection());\n    try {\n      connection.__knexTxId = this.txid;\n      connection.isTransaction = true;\n      return await cb(connection);\n    } finally {\n      debugTx('%s: releasing connection', this.txid);\n      connection.isTransaction = false;\n      try {\n        await connection.commitAsync();\n      } catch (err) {\n        this._rejecter(err);\n      } finally {\n        if (!configConnection) {\n          await this.client.releaseConnection(connection);\n        } else {\n          debugTx('%s: not releasing external connection', this.txid);\n        }\n      }\n    }\n  }\n};\n","// Oracledb Client\n// -------\nconst each = require('lodash/each');\nconst flatten = require('lodash/flatten');\nconst isEmpty = require('lodash/isEmpty');\nconst map = require('lodash/map');\n\nconst Formatter = require('../../formatter');\nconst QueryCompiler = require('./query/oracledb-querycompiler');\nconst TableCompiler = require('./schema/oracledb-tablecompiler');\nconst ColumnCompiler = require('./schema/oracledb-columncompiler');\nconst {\n  BlobHelper,\n  ReturningHelper,\n  monkeyPatchConnection,\n} = require('./utils');\nconst ViewCompiler = require('./schema/oracledb-viewcompiler');\nconst ViewBuilder = require('./schema/oracledb-viewbuilder');\nconst Transaction = require('./transaction');\nconst Client_Oracle = require('../oracle');\nconst { isString } = require('../../util/is');\nconst { outputQuery, unwrapRaw } = require('../../formatter/wrappingFormatter');\nconst { compileCallback } = require('../../formatter/formatterUtils');\n\nclass Client_Oracledb extends Client_Oracle {\n  constructor(config) {\n    super(config);\n    if (this.driver) {\n      process.env.UV_THREADPOOL_SIZE = process.env.UV_THREADPOOL_SIZE || 1;\n      process.env.UV_THREADPOOL_SIZE =\n        parseInt(process.env.UV_THREADPOOL_SIZE) + this.driver.poolMax;\n    }\n  }\n\n  _driver() {\n    const client = this;\n    const oracledb = require('oracledb');\n    client.fetchAsString = [];\n    if (this.config.fetchAsString && Array.isArray(this.config.fetchAsString)) {\n      this.config.fetchAsString.forEach(function (type) {\n        if (!isString(type)) return;\n        type = type.toUpperCase();\n        if (oracledb[type]) {\n          if (\n            type !== 'NUMBER' &&\n            type !== 'DATE' &&\n            type !== 'CLOB' &&\n            type !== 'BUFFER'\n          ) {\n            this.logger.warn(\n              'Only \"date\", \"number\", \"clob\" and \"buffer\" are supported for fetchAsString'\n            );\n          }\n          client.fetchAsString.push(oracledb[type]);\n        }\n      });\n    }\n    return oracledb;\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  viewBuilder() {\n    return new ViewBuilder(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n\n  formatter(builder) {\n    return new Formatter(this, builder);\n  }\n\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  prepBindings(bindings) {\n    return map(bindings, (value) => {\n      if (value instanceof BlobHelper && this.driver) {\n        return { type: this.driver.BLOB, dir: this.driver.BIND_OUT };\n        // Returning helper always use ROWID as string\n      } else if (value instanceof ReturningHelper && this.driver) {\n        return { type: this.driver.STRING, dir: this.driver.BIND_OUT };\n      } else if (typeof value === 'boolean') {\n        return value ? 1 : 0;\n      }\n      return value;\n    });\n  }\n\n  // Checks whether a value is a function... if it is, we compile it\n  // otherwise we check whether it's a raw\n  parameter(value, builder, formatter) {\n    if (typeof value === 'function') {\n      return outputQuery(\n        compileCallback(value, undefined, this, formatter),\n        true,\n        builder,\n        this\n      );\n    } else if (value instanceof BlobHelper) {\n      formatter.bindings.push(value.value);\n      return '?';\n    }\n    return unwrapRaw(value, true, builder, this, formatter) || '?';\n  }\n\n  // Get a raw connection, called by the `pool` whenever a new\n  // connection needs to be added to the pool.\n  acquireRawConnection() {\n    const client = this;\n    const asyncConnection = new Promise(function (resolver, rejecter) {\n      // If external authentication don't have to worry about username/password and\n      // if not need to set the username and password\n      const oracleDbConfig = client.connectionSettings.externalAuth\n        ? { externalAuth: client.connectionSettings.externalAuth }\n        : {\n            user: client.connectionSettings.user,\n            password: client.connectionSettings.password,\n          };\n\n      // In the case of external authentication connection string will be given\n      oracleDbConfig.connectString = resolveConnectString(\n        client.connectionSettings\n      );\n\n      if (client.connectionSettings.prefetchRowCount) {\n        oracleDbConfig.prefetchRows =\n          client.connectionSettings.prefetchRowCount;\n      }\n\n      if (client.connectionSettings.stmtCacheSize !== undefined) {\n        oracleDbConfig.stmtCacheSize = client.connectionSettings.stmtCacheSize;\n      }\n\n      client.driver.fetchAsString = client.fetchAsString;\n\n      client.driver.getConnection(oracleDbConfig, function (err, connection) {\n        if (err) {\n          return rejecter(err);\n        }\n        monkeyPatchConnection(connection, client);\n\n        resolver(connection);\n      });\n    });\n    return asyncConnection;\n  }\n\n  // Used to explicitly close a connection, called internally by the pool\n  // when a connection times out or the pool is shutdown.\n  destroyRawConnection(connection) {\n    return connection.release();\n  }\n\n  // Runs the query on the specified connection, providing the bindings\n  // and any other necessary prep work.\n  _query(connection, obj) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    const options = { autoCommit: false };\n    if (obj.method === 'select') {\n      options.resultSet = true;\n    }\n    return connection\n      .executeAsync(obj.sql, obj.bindings, options)\n      .then(async function (response) {\n        // Flatten outBinds\n        let outBinds = flatten(response.outBinds);\n        obj.response = response.rows || [];\n        obj.rowsAffected = response.rows\n          ? response.rows.rowsAffected\n          : response.rowsAffected;\n\n        //added for outBind parameter\n        if (obj.method === 'raw' && outBinds.length > 0) {\n          return {\n            response: outBinds,\n          };\n        }\n\n        if (obj.method === 'update') {\n          const modifiedRowsCount = obj.rowsAffected.length || obj.rowsAffected;\n          const updatedObjOutBinding = [];\n          const updatedOutBinds = [];\n          const updateOutBinds = (i) =>\n            function (value, index) {\n              const OutBindsOffset = index * modifiedRowsCount;\n              updatedOutBinds.push(outBinds[i + OutBindsOffset]);\n            };\n\n          for (let i = 0; i < modifiedRowsCount; i++) {\n            updatedObjOutBinding.push(obj.outBinding[0]);\n            each(obj.outBinding[0], updateOutBinds(i));\n          }\n          outBinds = updatedOutBinds;\n          obj.outBinding = updatedObjOutBinding;\n        }\n\n        if (!obj.returning && outBinds.length === 0) {\n          if (!connection.isTransaction) {\n            await connection.commitAsync();\n          }\n          return obj;\n        }\n        const rowIds = [];\n        let offset = 0;\n\n        for (let line = 0; line < obj.outBinding.length; line++) {\n          const ret = obj.outBinding[line];\n\n          offset =\n            offset +\n            (obj.outBinding[line - 1] ? obj.outBinding[line - 1].length : 0);\n\n          for (let index = 0; index < ret.length; index++) {\n            const out = ret[index];\n\n            await new Promise(function (bindResolver, bindRejecter) {\n              if (out instanceof BlobHelper) {\n                const blob = outBinds[index + offset];\n                if (out.returning) {\n                  obj.response[line] = obj.response[line] || {};\n                  obj.response[line][out.columnName] = out.value;\n                }\n                blob.on('error', function (err) {\n                  bindRejecter(err);\n                });\n                blob.on('finish', function () {\n                  bindResolver();\n                });\n                blob.write(out.value);\n                blob.end();\n              } else if (obj.outBinding[line][index] === 'ROWID') {\n                rowIds.push(outBinds[index + offset]);\n                bindResolver();\n              } else {\n                obj.response[line] = obj.response[line] || {};\n                obj.response[line][out] = outBinds[index + offset];\n                bindResolver();\n              }\n            });\n          }\n        }\n        if (connection.isTransaction) {\n          return obj;\n        }\n        await connection.commitAsync();\n        if (obj.returningSql) {\n          const response = await connection.executeAsync(\n            obj.returningSql(),\n            rowIds,\n            { resultSet: true }\n          );\n          obj.response = response.rows;\n        }\n        return obj;\n      });\n  }\n\n  // Process the response as returned from the query.\n  processResponse(obj, runner) {\n    const { response } = obj;\n    if (obj.output) {\n      return obj.output.call(runner, response);\n    }\n    switch (obj.method) {\n      case 'select':\n        return response;\n      case 'first':\n        return response[0];\n      case 'pluck':\n        return map(response, obj.pluck);\n      case 'insert':\n      case 'del':\n      case 'update':\n      case 'counter':\n        if (obj.returning && !isEmpty(obj.returning)) {\n          return response;\n        } else if (obj.rowsAffected !== undefined) {\n          return obj.rowsAffected;\n        } else {\n          return 1;\n        }\n      default:\n        return response;\n    }\n  }\n\n  processPassedConnection(connection) {\n    monkeyPatchConnection(connection, this);\n  }\n}\n\nClient_Oracledb.prototype.driverName = 'oracledb';\n\nfunction resolveConnectString(connectionSettings) {\n  if (connectionSettings.connectString) {\n    return connectionSettings.connectString;\n  }\n\n  if (!connectionSettings.port) {\n    return connectionSettings.host + '/' + connectionSettings.database;\n  }\n\n  return (\n    connectionSettings.host +\n    ':' +\n    connectionSettings.port +\n    '/' +\n    connectionSettings.database\n  );\n}\n\nmodule.exports = Client_Oracledb;\n","// PostgreSQL Native Driver (pg-native)\n// -------\nconst Client_PG = require('../postgres');\n\nclass Client_PgNative extends Client_PG {\n  constructor(...args) {\n    super(...args);\n    this.driverName = 'pgnative';\n    this.canCancelQuery = true;\n  }\n\n  _driver() {\n    return require('pg').native;\n  }\n\n  _stream(connection, obj, stream, options) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    const client = this;\n    return new Promise((resolver, rejecter) => {\n      stream.on('error', rejecter);\n      stream.on('end', resolver);\n\n      return client\n        ._query(connection, obj)\n        .then((obj) => obj.response)\n        .then(({ rows }) => rows.forEach((row) => stream.write(row)))\n        .catch(function (err) {\n          stream.emit('error', err);\n        })\n        .then(function () {\n          stream.end();\n        });\n    });\n  }\n\n  async cancelQuery(connectionToKill) {\n    try {\n      return await this._wrappedCancelQueryCall(null, connectionToKill);\n    } catch (err) {\n      this.logger.warn(`Connection Error: ${err}`);\n      throw err;\n    }\n  }\n\n  _wrappedCancelQueryCall(emptyConnection, connectionToKill) {\n    return new Promise(function (resolve, reject) {\n      connectionToKill.native.cancel(function (err) {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(true);\n      });\n    });\n  }\n}\n\nmodule.exports = Client_PgNative;\n","const Transaction = require('../../execution/transaction');\n\nmodule.exports = class Redshift_Transaction extends Transaction {\n  begin(conn) {\n    if (this.isolationLevel) {\n      return this.query(conn, `BEGIN ISOLATION LEVEL ${this.isolationLevel};`);\n    }\n    return this.query(conn, 'BEGIN;');\n  }\n\n  savepoint(conn) {\n    this.trxClient.logger('Redshift does not support savepoints.');\n    return Promise.resolve();\n  }\n\n  release(conn, value) {\n    this.trxClient.logger('Redshift does not support savepoints.');\n    return Promise.resolve();\n  }\n\n  rollbackTo(conn, error) {\n    this.trxClient.logger('Redshift does not support savepoints.');\n    return Promise.resolve();\n  }\n};\n","// Redshift Query Builder & Compiler\n// ------\nconst QueryCompiler = require('../../../query/querycompiler');\nconst QueryCompiler_PG = require('../../postgres/query/pg-querycompiler');\n\nconst identity = require('lodash/identity');\nconst {\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nclass QueryCompiler_Redshift extends QueryCompiler_PG {\n  truncate() {\n    return `truncate ${this.tableName.toLowerCase()}`;\n  }\n\n  // Compiles an `insert` query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    const sql = QueryCompiler.prototype.insert.apply(this, arguments);\n    if (sql === '') return sql;\n    this._slightReturn();\n    return {\n      sql,\n    };\n  }\n\n  // Compiles an `update` query, warning on unsupported returning\n  update() {\n    const sql = QueryCompiler.prototype.update.apply(this, arguments);\n    this._slightReturn();\n    return {\n      sql,\n    };\n  }\n\n  // Compiles an `delete` query, warning on unsupported returning\n  del() {\n    const sql = QueryCompiler.prototype.del.apply(this, arguments);\n    this._slightReturn();\n    return {\n      sql,\n    };\n  }\n\n  // simple: if trying to return, warn\n  _slightReturn() {\n    if (this.single.isReturning) {\n      this.client.logger.warn(\n        'insert/update/delete returning is not supported by redshift dialect'\n      );\n    }\n  }\n\n  forUpdate() {\n    this.client.logger.warn('table lock is not supported by redshift dialect');\n    return '';\n  }\n\n  forShare() {\n    this.client.logger.warn(\n      'lock for share is not supported by redshift dialect'\n    );\n    return '';\n  }\n\n  forNoKeyUpdate() {\n    this.client.logger.warn('table lock is not supported by redshift dialect');\n    return '';\n  }\n\n  forKeyShare() {\n    this.client.logger.warn(\n      'lock for share is not supported by redshift dialect'\n    );\n    return '';\n  }\n\n  // Compiles a columnInfo query\n  columnInfo() {\n    const column = this.single.columnInfo;\n    let schema = this.single.schema;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    if (schema) {\n      schema = this.client.customWrapIdentifier(schema, identity);\n    }\n\n    const sql =\n      'select * from information_schema.columns where table_name = ? and table_catalog = ?';\n    const bindings = [\n      table.toLowerCase(),\n      this.client.database().toLowerCase(),\n    ];\n\n    return this._buildColumnInfoQuery(schema, sql, bindings, column);\n  }\n\n  jsonExtract(params) {\n    let extractions;\n    if (Array.isArray(params.column)) {\n      extractions = params.column;\n    } else {\n      extractions = [params];\n    }\n    return extractions\n      .map((extraction) => {\n        const jsonCol = `json_extract_path_text(${columnize_(\n          extraction.column || extraction[0],\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        )}, ${this.client.toPathForJson(\n          params.path || extraction[1],\n          this.builder,\n          this.bindingsHolder\n        )})`;\n        const alias = extraction.alias || extraction[2];\n        return alias\n          ? this.client.alias(jsonCol, this.formatter.wrap(alias))\n          : jsonCol;\n      })\n      .join(', ');\n  }\n\n  jsonSet(params) {\n    throw new Error('Json set is not supported by Redshift');\n  }\n\n  jsonInsert(params) {\n    throw new Error('Json insert is not supported by Redshift');\n  }\n\n  jsonRemove(params) {\n    throw new Error('Json remove is not supported by Redshift');\n  }\n\n  whereJsonPath(statement) {\n    return this._whereJsonPath(\n      'json_extract_path_text',\n      Object.assign({}, statement, {\n        path: this.client.toPathForJson(statement.path),\n      })\n    );\n  }\n\n  whereJsonSupersetOf(statement) {\n    throw new Error('Json superset is not supported by Redshift');\n  }\n\n  whereJsonSubsetOf(statement) {\n    throw new Error('Json subset is not supported by Redshift');\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('json_extract_path_text', clause);\n  }\n}\n\nmodule.exports = QueryCompiler_Redshift;\n","const ColumnBuilder = require('../../../schema/columnbuilder');\n\nclass ColumnBuilder_Redshift extends ColumnBuilder {\n  constructor() {\n    super(...arguments);\n  }\n\n  // primary needs to set not null on non-preexisting columns, or fail\n  primary() {\n    this.notNullable();\n    return super.primary(...arguments);\n  }\n\n  index() {\n    this.client.logger.warn(\n      'Redshift does not support the creation of indexes.'\n    );\n    return this;\n  }\n}\n\nmodule.exports = ColumnBuilder_Redshift;\n","// Redshift Column Compiler\n// -------\n\nconst ColumnCompiler_PG = require('../../postgres/schema/pg-columncompiler');\nconst ColumnCompiler = require('../../../schema/columncompiler');\n\nclass ColumnCompiler_Redshift extends ColumnCompiler_PG {\n  constructor() {\n    super(...arguments);\n  }\n\n  // Types:\n  // ------\n\n  bit(column) {\n    return column.length !== false ? `char(${column.length})` : 'char(1)';\n  }\n\n  datetime(without) {\n    return without ? 'timestamp' : 'timestamptz';\n  }\n\n  timestamp(without) {\n    return without ? 'timestamp' : 'timestamptz';\n  }\n\n  // Modifiers:\n  // ------\n  comment(comment) {\n    this.pushAdditional(function () {\n      this.pushQuery(\n        `comment on column ${this.tableCompiler.tableName()}.` +\n          this.formatter.wrap(this.args[0]) +\n          ' is ' +\n          (comment ? `'${comment}'` : 'NULL')\n      );\n    }, comment);\n  }\n}\n\nColumnCompiler_Redshift.prototype.increments = ({ primaryKey = true } = {}) =>\n  'integer identity(1,1)' + (primaryKey ? ' primary key' : '') + ' not null';\nColumnCompiler_Redshift.prototype.bigincrements = ({\n  primaryKey = true,\n} = {}) =>\n  'bigint identity(1,1)' + (primaryKey ? ' primary key' : '') + ' not null';\nColumnCompiler_Redshift.prototype.binary = 'varchar(max)';\nColumnCompiler_Redshift.prototype.blob = 'varchar(max)';\nColumnCompiler_Redshift.prototype.enu = 'varchar(255)';\nColumnCompiler_Redshift.prototype.enum = 'varchar(255)';\nColumnCompiler_Redshift.prototype.json = 'varchar(max)';\nColumnCompiler_Redshift.prototype.jsonb = 'varchar(max)';\nColumnCompiler_Redshift.prototype.longblob = 'varchar(max)';\nColumnCompiler_Redshift.prototype.mediumblob = 'varchar(16777218)';\nColumnCompiler_Redshift.prototype.set = 'text';\nColumnCompiler_Redshift.prototype.text = 'varchar(max)';\nColumnCompiler_Redshift.prototype.tinyblob = 'varchar(256)';\nColumnCompiler_Redshift.prototype.uuid = ColumnCompiler.prototype.uuid;\nColumnCompiler_Redshift.prototype.varbinary = 'varchar(max)';\nColumnCompiler_Redshift.prototype.bigint = 'bigint';\nColumnCompiler_Redshift.prototype.bool = 'boolean';\nColumnCompiler_Redshift.prototype.double = 'double precision';\nColumnCompiler_Redshift.prototype.floating = 'real';\nColumnCompiler_Redshift.prototype.smallint = 'smallint';\nColumnCompiler_Redshift.prototype.tinyint = 'smallint';\n\nmodule.exports = ColumnCompiler_Redshift;\n","/* eslint max-len: 0 */\n\n// Redshift Table Builder & Compiler\n// -------\n\nconst has = require('lodash/has');\nconst TableCompiler_PG = require('../../postgres/schema/pg-tablecompiler');\n\nclass TableCompiler_Redshift extends TableCompiler_PG {\n  constructor() {\n    super(...arguments);\n  }\n\n  index(columns, indexName, options) {\n    this.client.logger.warn(\n      'Redshift does not support the creation of indexes.'\n    );\n  }\n\n  dropIndex(columns, indexName) {\n    this.client.logger.warn(\n      'Redshift does not support the deletion of indexes.'\n    );\n  }\n\n  // TODO: have to disable setting not null on columns that already exist...\n\n  // Adds the \"create\" query to the query sequence.\n  createQuery(columns, ifNot, like) {\n    const createStatement = ifNot\n      ? 'create table if not exists '\n      : 'create table ';\n    const columnsSql = ' (' + columns.sql.join(', ') + this._addChecks() + ')';\n    let sql =\n      createStatement +\n      this.tableName() +\n      (like && this.tableNameLike()\n        ? ' (like ' + this.tableNameLike() + ')'\n        : columnsSql);\n    if (this.single.inherits)\n      sql += ` like (${this.formatter.wrap(this.single.inherits)})`;\n    this.pushQuery({\n      sql,\n      bindings: columns.bindings,\n    });\n    const hasComment = has(this.single, 'comment');\n    if (hasComment) this.comment(this.single.comment);\n    if (like) {\n      this.addColumns(columns, this.addColumnsPrefix);\n    }\n  }\n\n  primary(columns, constraintName) {\n    const self = this;\n    constraintName = constraintName\n      ? self.formatter.wrap(constraintName)\n      : self.formatter.wrap(`${this.tableNameRaw}_pkey`);\n    if (columns.constructor !== Array) {\n      columns = [columns];\n    }\n    const thiscolumns = self.grouped.columns;\n\n    if (thiscolumns) {\n      for (let i = 0; i < columns.length; i++) {\n        let exists = thiscolumns.find(\n          (tcb) =>\n            tcb.grouping === 'columns' &&\n            tcb.builder &&\n            tcb.builder._method === 'add' &&\n            tcb.builder._args &&\n            tcb.builder._args.indexOf(columns[i]) > -1\n        );\n        if (exists) {\n          exists = exists.builder;\n        }\n        const nullable = !(\n          exists &&\n          exists._modifiers &&\n          exists._modifiers['nullable'] &&\n          exists._modifiers['nullable'][0] === false\n        );\n        if (nullable) {\n          if (exists) {\n            return this.client.logger.warn(\n              'Redshift does not allow primary keys to contain nullable columns.'\n            );\n          } else {\n            return this.client.logger.warn(\n              'Redshift does not allow primary keys to contain nonexistent columns.'\n            );\n          }\n        }\n      }\n    }\n    return self.pushQuery(\n      `alter table ${self.tableName()} add constraint ${constraintName} primary key (${self.formatter.columnize(\n        columns\n      )})`\n    );\n  }\n\n  // Compiles column add. Redshift can only add one column per ALTER TABLE, so core addColumns doesn't work.  #2545\n  addColumns(columns, prefix, colCompilers) {\n    if (prefix === this.alterColumnsPrefix) {\n      super.addColumns(columns, prefix, colCompilers);\n    } else {\n      prefix = prefix || this.addColumnsPrefix;\n      colCompilers = colCompilers || this.getColumns();\n      for (const col of colCompilers) {\n        const quotedTableName = this.tableName();\n        const colCompiled = col.compileColumn();\n\n        this.pushQuery({\n          sql: `alter table ${quotedTableName} ${prefix}${colCompiled}`,\n          bindings: [],\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = TableCompiler_Redshift;\n","/* eslint max-len: 0 */\n\n// Redshift Table Builder & Compiler\n// -------\n\nconst SchemaCompiler_PG = require('../../postgres/schema/pg-compiler');\n\nclass SchemaCompiler_Redshift extends SchemaCompiler_PG {\n  constructor() {\n    super(...arguments);\n  }\n}\n\nmodule.exports = SchemaCompiler_Redshift;\n","/* eslint max-len: 0 */\n\nconst ViewCompiler_PG = require('../../postgres/schema/pg-viewcompiler.js');\n\nclass ViewCompiler_Redshift extends ViewCompiler_PG {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n}\n\nmodule.exports = ViewCompiler_Redshift;\n","// Redshift\n// -------\nconst Client_PG = require('../postgres');\nconst map = require('lodash/map');\n\nconst Transaction = require('./transaction');\nconst QueryCompiler = require('./query/redshift-querycompiler');\nconst ColumnBuilder = require('./schema/redshift-columnbuilder');\nconst ColumnCompiler = require('./schema/redshift-columncompiler');\nconst TableCompiler = require('./schema/redshift-tablecompiler');\nconst SchemaCompiler = require('./schema/redshift-compiler');\nconst ViewCompiler = require('./schema/redshift-viewcompiler');\n\nclass Client_Redshift extends Client_PG {\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  columnBuilder() {\n    return new ColumnBuilder(this, ...arguments);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n\n  _driver() {\n    return require('pg');\n  }\n\n  // Ensures the response is returned in the same format as other clients.\n  processResponse(obj, runner) {\n    const resp = obj.response;\n    if (obj.output) return obj.output.call(runner, resp);\n    if (obj.method === 'raw') return resp;\n    if (resp.command === 'SELECT') {\n      if (obj.method === 'first') return resp.rows[0];\n      if (obj.method === 'pluck') return map(resp.rows, obj.pluck);\n      return resp.rows;\n    }\n    if (\n      resp.command === 'INSERT' ||\n      resp.command === 'UPDATE' ||\n      resp.command === 'DELETE'\n    ) {\n      return resp.rowCount;\n    }\n    return resp;\n  }\n\n  toPathForJson(jsonPath, builder, bindingsHolder) {\n    return jsonPath\n      .replace(/^(\\$\\.)/, '') // remove the first dollar\n      .split('.')\n      .map(\n        function (v) {\n          return this.parameter(v, builder, bindingsHolder);\n        }.bind(this)\n      )\n      .join(', ');\n  }\n}\n\nObject.assign(Client_Redshift.prototype, {\n  dialect: 'redshift',\n\n  driverName: 'pg-redshift',\n});\n\nmodule.exports = Client_Redshift;\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDialectByNameOrAlias = void 0;\r\nconst { resolveClientNameWithAliases } = require('../util/helpers');\r\nconst dbNameToDialectLoader = Object.freeze({\r\n    'better-sqlite3': () => require('./better-sqlite3'),\r\n    cockroachdb: () => require('./cockroachdb'),\r\n    mssql: () => require('./mssql'),\r\n    mysql: () => require('./mysql'),\r\n    mysql2: () => require('./mysql2'),\r\n    oracle: () => require('./oracle'),\r\n    oracledb: () => require('./oracledb'),\r\n    pgnative: () => require('./pgnative'),\r\n    postgres: () => require('./postgres'),\r\n    redshift: () => require('./redshift'),\r\n    sqlite3: () => require('./sqlite3'),\r\n});\r\n/**\r\n * Gets the Dialect object with the given client name or throw an\r\n * error if not found.\r\n *\r\n * NOTE: This is a replacement for prior practice of doing dynamic\r\n * string construction for imports of Dialect objects.\r\n */\r\nfunction getDialectByNameOrAlias(clientName) {\r\n    const resolvedClientName = resolveClientNameWithAliases(clientName);\r\n    const dialectLoader = dbNameToDialectLoader[resolvedClientName];\r\n    if (!dialectLoader) {\r\n        throw new Error(`Invalid clientName given: ${clientName}`);\r\n    }\r\n    return dialectLoader();\r\n}\r\nexports.getDialectByNameOrAlias = getDialectByNameOrAlias;\r\n//# sourceMappingURL=index.js.map","const Client = require('../../client');\nconst { SUPPORTED_CLIENTS } = require('../../constants');\n\nconst parseConnection = require('./parse-connection');\nconst { getDialectByNameOrAlias } = require('../../dialects');\n\nfunction resolveConfig(config) {\n  let Dialect;\n  let resolvedConfig;\n\n  // If config is a string, try to parse it\n  const parsedConfig =\n    typeof config === 'string'\n      ? Object.assign(parseConnection(config), arguments[2])\n      : config;\n\n  // If user provided no relevant parameters, use generic client\n  if (\n    arguments.length === 0 ||\n    (!parsedConfig.client && !parsedConfig.dialect)\n  ) {\n    Dialect = Client;\n  }\n  // If user provided Client constructor as a parameter, use it\n  else if (typeof parsedConfig.client === 'function') {\n    Dialect = parsedConfig.client;\n  }\n  // If neither applies, let's assume user specified name of a client or dialect as a string\n  else {\n    const clientName = parsedConfig.client || parsedConfig.dialect;\n    if (!SUPPORTED_CLIENTS.includes(clientName)) {\n      throw new Error(\n        `knex: Unknown configuration option 'client' value ${clientName}. Note that it is case-sensitive, check documentation for supported values.`\n      );\n    }\n\n    Dialect = getDialectByNameOrAlias(clientName);\n  }\n\n  // If config connection parameter is passed as string, try to parse it\n  if (typeof parsedConfig.connection === 'string') {\n    resolvedConfig = Object.assign({}, parsedConfig, {\n      connection: parseConnection(parsedConfig.connection).connection,\n    });\n  } else {\n    resolvedConfig = Object.assign({}, parsedConfig);\n  }\n\n  return {\n    resolvedConfig,\n    Dialect,\n  };\n}\n\nmodule.exports = {\n  resolveConfig,\n};\n","const Client = require('../client');\nconst QueryBuilder = require('../query/querybuilder');\nconst QueryInterface = require('../query/method-constants');\n\nconst makeKnex = require('./make-knex');\nconst { KnexTimeoutError } = require('../util/timeout');\nconst { resolveConfig } = require('./internal/config-resolver');\nconst SchemaBuilder = require('../schema/builder');\nconst ViewBuilder = require('../schema/viewbuilder');\nconst ColumnBuilder = require('../schema/columnbuilder');\nconst TableBuilder = require('../schema/tablebuilder');\n\nfunction knex(config) {\n  const { resolvedConfig, Dialect } = resolveConfig(...arguments);\n\n  const newKnex = makeKnex(new Dialect(resolvedConfig));\n  if (resolvedConfig.userParams) {\n    newKnex.userParams = resolvedConfig.userParams;\n  }\n  return newKnex;\n}\n\n// Expose Client on the main Knex namespace.\nknex.Client = Client;\n\nknex.KnexTimeoutError = KnexTimeoutError;\n\nknex.QueryBuilder = {\n  extend: function (methodName, fn) {\n    QueryBuilder.extend(methodName, fn);\n    QueryInterface.push(methodName);\n  },\n};\n\nknex.SchemaBuilder = {\n  extend: function (methodName, fn) {\n    SchemaBuilder.extend(methodName, fn);\n  },\n};\n\nknex.ViewBuilder = {\n  extend: function (methodName, fn) {\n    ViewBuilder.extend(methodName, fn);\n  },\n};\n\nknex.ColumnBuilder = {\n  extend: function (methodName, fn) {\n    ColumnBuilder.extend(methodName, fn);\n  },\n};\n\nknex.TableBuilder  = {\n  extend: function (methodName, fn) {\n    TableBuilder.extend(methodName, fn);\n  },\n};\n\nmodule.exports = knex;\n","const Knex = require('./knex-builder/Knex');\n\nmodule.exports = Knex;\n","// Knex.js\n// --------------\n//     (c) 2013-present Tim Griesser\n//     Knex may be freely distributed under the MIT license.\n//     For details and documentation:\n//     http://knexjs.org\n\nconst knex = require('./lib/index');\n\n/**\n * These export configurations enable JS and TS developers\n * to consume knex in whatever way best suits their needs.\n * Some examples of supported import syntax includes:\n * - `const knex = require('knex')`\n * - `const { knex } = require('knex')`\n * - `import * as knex from 'knex'`\n * - `import { knex } from 'knex'`\n * - `import knex from 'knex'`\n */\nknex.knex = knex;\nknex.default = knex;\n\nmodule.exports = knex;\n","import Knex from 'knex'\r\n\r\nclass KnexConnector {\r\n\r\n\r\n    init(config) {\r\n\r\n        /**\r\n         * References the current connection of the app\r\n         * @type {Knex}\r\n         * @public\r\n         */\r\n        this.connection = Knex(config)\r\n    }\r\n\r\n    /**\r\n     * Configura de forma global los aliases de las columnas para utilizar en FQL.\r\n     * \r\n     * La estructura es \r\n     * {\r\n            \"table1\": {\r\n                \"alias1\": \"column1\",\r\n                \"alias2\": \"column2\"\r\n            },\r\n            \"table2\": {\r\n                \"alias1\": \"column1\"\r\n            }\r\n        }\r\n     *\r\n     * @param {*} aliases \r\n     */\r\n    setColumnAliases(aliases) {\r\n        this.columnAliases = aliases;\r\n    }\r\n    \r\n\r\n\r\n    test() {\r\n        return this.connection.raw('select 1+1 as result');\r\n    }\r\n}\r\n\r\n\r\nexport default new KnexConnector();","import { Utils } from \"../../../common/index.js\";\r\n\r\nimport { FQLParser, KnexParser } from \"@landra_sistemas/fql-parser\";\r\nimport KnexConnector from \"../KnexConnector.js\";\r\n\r\nexport default class KnexFilterParser {\r\n    /**\r\n     *\r\n     * @param {*} builder\r\n     * @param {*} string\r\n     * @returns\r\n     */\r\n    static parseQueryString(builder, string, tableName) {\r\n        const options = {\r\n            allowGlobalSearch: true,\r\n            caseInsensitive: true,\r\n        };\r\n        //Agregar los aliases en caso de que se hayan configurado de forma global\r\n        if (KnexConnector.columnAliases && KnexConnector.columnAliases[tableName]) {\r\n            options.aliases = KnexConnector.columnAliases[tableName];\r\n        }\r\n        //Options\r\n        if (KnexConnector.caseInsensitive !== undefined) {\r\n            options.caseInsensitive = KnexConnector.caseInsensitive;\r\n        }\r\n        if (KnexConnector.allowGlobalSearch !== undefined) {\r\n            options.allowGlobalSearch = KnexConnector.allowGlobalSearch;\r\n        }\r\n        const parser = new FQLParser(options);\r\n        const data = parser.parse(string);\r\n\r\n        return new KnexParser(tableName).toKnex(builder, data);\r\n    }\r\n\r\n    /**\r\n     * Convierte un objeto clave valor en un conjunto de filtros.\r\n     *\r\n     * - Filtro estandar:\r\n     *    filters: {\r\n     *       \"column\": \"value\" -> filtro generico exact\r\n     *    }\r\n     * - Filtro Objeto:\r\n     *    filters:{\r\n     *       \"column\": {\r\n     *       \"type\": \"date|between|exists|notexists|greater|greaterEq|less|lessEq|exact|exactI|not|null|notnull|like|likeI\"\r\n     *       \"start\": \"xxx\", //inicio de rango para el filtro de date y between\r\n     *       \"end\": \"xxx\", //fin de rango para el filtro date y between\r\n     *       \"value\": \"xxx\" //valor a utilizar para el resto de filtros\r\n     *     }\r\n     * }\r\n     *  - Filtro Lista:\r\n     *     filters: {\r\n     *       \"column\": [1, 2, 3]\r\n     *     }\r\n     *    Filtro de tipo IN, todos los elementos que coincidan\r\n     *\r\n     * - Definicion de tipos:\r\n     *    date: filtro de fechas desde y hasta\r\n     *    between: filtro entre dos valores concretos\r\n     *    exists: busca si existe la propiedad\r\n     *    notexists: busca si existe la propiedad\r\n     *    greater: mayor que\r\n     *    greaterEq: mayor o igual que\r\n     *    less: menor que\r\n     *    lessEq: menor o igual que\r\n     *    exact: valor exacto\r\n     *    exactI: valor exacto ignorando mayusculas y minusculas\r\n     *    not: distinto de\r\n     *    null: igual a null\r\n     *    notnull: distinto de null\r\n     *    like: filtro like\r\n     *    likeI: filtro like ignorando mayusculas y minusculas\r\n     */\r\n    static parseFilters(builder, filter, tableName) {\r\n        let query = builder;\r\n\r\n        for (let prop in filter) {\r\n            let elm = filter[prop];\r\n\r\n            if (typeof elm === \"object\") {\r\n                switch (elm.type) {\r\n                    case \"fql\":\r\n                        query = KnexFilterParser.parseQueryString(query, elm.value, tableName);\r\n                        break;\r\n                    case \"date\":\r\n                    case \"between\":\r\n                        if (elm.start && elm.end) {\r\n                            query = query.whereBetween(prop, [elm.start, elm.end]);\r\n                        }\r\n                        if (elm.start && !elm.end) {\r\n                            query = query.where(prop, \">=\", elm.start);\r\n                        }\r\n                        if (!elm.start && elm.end) {\r\n                            query = query.where(prop, \">=\", elm.end);\r\n                        }\r\n                        break;\r\n                    case \"dateraw\":\r\n                    case \"betweenraw\":\r\n                        if (elm.start && elm.end) {\r\n                            query = query.whereRaw(`${prop} BETWEEN ? AND ?`, [elm.start, elm.end]);\r\n                        }\r\n                        if (elm.start && !elm.end) {\r\n                            query = query.whereRaw(`${prop} >= ?`, [elm.start]);\r\n                        }\r\n                        if (!elm.start && elm.end) {\r\n                            query = query.whereRaw(`${prop} >= ?`, [elm.end]);\r\n                        }\r\n                        break;\r\n                    case \"jsonb\":\r\n                        query = query.whereRaw(`${prop} ILIKE ?`, [\"%\" + elm.value + \"%\"]);\r\n                        break;\r\n                    case \"full-text-psql\":\r\n                        query = query.whereRaw(`to_tsvector(${prop}::text) @@ to_tsquery(?)`, [elm.value]);\r\n                        break;\r\n\r\n                    case \"greater\":\r\n                    case \"greaterraw\":\r\n                        query = query.whereRaw(`${prop} > ?`, [elm.value]);\r\n                        break;\r\n                    case \"greaterEq\":\r\n                    case \"greaterEqraw\":\r\n                        query = query.whereRaw(`${prop} >= ?`, [elm.value]);\r\n                        break;\r\n                    case \"less\":\r\n                    case \"lessraw\":\r\n                        query = query.whereRaw(`${prop} < ?`, [elm.value]);\r\n                        break;\r\n                    case \"lessEq\":\r\n                    case \"lessEqraw\":\r\n                        query = query.whereRaw(`${prop} <= ?`, [elm.value]);\r\n                        break;\r\n                    case \"exists\":\r\n                        query = query.whereExists(prop);\r\n                        break;\r\n                    case \"notexists\":\r\n                        query = query.whereNotExists(prop);\r\n                        break;\r\n                    case \"exact\":\r\n                    case \"exactraw\":\r\n                        query = query.whereRaw(`${prop} = ?`, [elm.value]);\r\n                        break;\r\n                    case \"in\":\r\n                        let propComplex = prop;\r\n                        if (propComplex.includes(\",\")) {\r\n                            propComplex = prop.split(\",\");\r\n                        }\r\n                        if (!Array.isArray(elm.value) && elm.value != undefined) {\r\n                            query = query.whereIn(propComplex, elm.value.split(\",\"));\r\n                        } else {\r\n                            if (elm.value != undefined) {\r\n                                query = query.whereIn(propComplex, elm.value);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"inraw\":\r\n                        if (!Array.isArray(elm.value) && elm.value != undefined) {\r\n                            query = query.whereRaw(`${prop} IN (?)`, [\r\n                                elm.value\r\n                                    .split(\",\")\r\n                                    .map((e) => `'${e}'`)\r\n                                    .join(\",\"),\r\n                            ]);\r\n                        } else {\r\n                            if (elm.value != undefined) {\r\n                                query = query.whereRaw(`${prop} IN (?)`, [elm.value.map((e) => `'${e}'`).join(\",\")]);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"not\":\r\n                    case \"notraw\":\r\n                        query = query.whereRaw(`${prop} != ?`, [elm.value]);\r\n                        break;\r\n                    case \"like\":\r\n                    case \"likeraw\":\r\n                        let value_likeraw = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n                        query = query.whereRaw(` ${prop} LIKE ?`, [value_likeraw]);\r\n                        break;\r\n                    case \"notlike\":\r\n                    case \"notlikeraw\":\r\n                        let value_nolikeraw = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n                        query = query.whereRaw(` ${prop} NOT LIKE ?`, [value_nolikeraw]);\r\n                        break;\r\n                    case \"likeI\":\r\n                        let value_rawilike = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n                        query = query.whereRaw(` ${prop} ILIKE ?`, [value_rawilike]);\r\n                        break;\r\n                    case \"notlikeI\":\r\n                        let value_notrawilike = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n                        query = query.whereRaw(` ${prop} NOT ILIKE ?`, [value_notrawilike]);\r\n                        break;\r\n                    case \"null\":\r\n                    case \"nullraw\":\r\n                        query = query.whereRaw(`${prop} is NULL`);\r\n                        break;\r\n                    case \"notnull\":\r\n                    case \"notnullraw\":\r\n                        query = query.whereRaw(`${prop} is not NULL`);\r\n                        break;\r\n                }\r\n            } else {\r\n                //Si el valor no es un objeto se devuelve\r\n                query = query.where(prop, elm);\r\n            }\r\n        }\r\n\r\n        // console.log(query.toSQL());\r\n        return query;\r\n    }\r\n\r\n    /**\r\n     * Conversion de un objeto {property: XX, direction: ASC|DESC - ascend|descend} a un ORDER BY\r\n     *\r\n     * @param {*} sorts\r\n     */\r\n    static parseSort(sort) {\r\n        if (!sort.field || !sort.direction) {\r\n            return 1;\r\n        }\r\n\r\n        let direction = \"ASC\";\r\n        if (sort.direction === \"descend\") {\r\n            direction = \"DESC\";\r\n        }\r\n\r\n        return sort.field + \" \" + direction;\r\n    }\r\n}\r\n","import KnexFilterParser from \"../filters/KnexFilterParser.js\";\r\nimport KnexConnector from \"../KnexConnector.js\";\r\n\r\nimport lodash from \"lodash\";\r\n\r\n/**\r\n * Crear un dao con los métodos básicos\r\n */\r\nexport default class BaseKnexDao {\r\n    constructor() {\r\n        this.tableName = \"\";\r\n    }\r\n\r\n    loadAllData(start, limit) {\r\n        return KnexConnector.connection\r\n            .select(\"*\")\r\n            .from(this.tableName)\r\n            .limit(limit || 10000)\r\n            .offset(start);\r\n    }\r\n\r\n    async loadFilteredData(filters, start, limit) {\r\n        let sorts = 1;\r\n        if (filters.sort) {\r\n            sorts = KnexFilterParser.parseSort(filters.sort);\r\n        }\r\n\r\n        return KnexConnector.connection\r\n            .from(this.tableName)\r\n            .where((builder) => KnexFilterParser.parseFilters(builder, lodash.omit(filters, [\"sort\", \"start\", \"limit\"]), this.tableName))\r\n            .orderByRaw(sorts)\r\n            .limit(limit)\r\n            .offset(start);\r\n    }\r\n\r\n    async countFilteredData(filters) {\r\n        let data = await KnexConnector.connection\r\n            .from(this.tableName)\r\n            .where((builder) => KnexFilterParser.parseFilters(builder, lodash.omit(filters, [\"sort\", \"start\", \"limit\"]), this.tableName))\r\n            .count(\"id\", { as: \"total\" });\r\n\r\n        return data && data[0].total;\r\n    }\r\n\r\n    async loadById(objectId) {\r\n        const data = await KnexConnector.connection.from(this.tableName).where(\"id\", objectId);\r\n\r\n        if (data && data[0]) {\r\n            return data[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    save(object) {\r\n        return KnexConnector.connection.from(this.tableName).insert(object).returning(\"*\");\r\n    }\r\n    update(objectId, newObject) {\r\n        return KnexConnector.connection.from(this.tableName).where(\"id\", objectId).update(newObject).returning(\"*\");\r\n    }\r\n    async delete(objectId) {\r\n        const existing = await this.loadById(objectId);\r\n        if (!existing) {\r\n            throw \"NotFound\";\r\n        }\r\n        return KnexConnector.connection.from(this.tableName).where(\"id\", objectId).delete();\r\n    }\r\n}\r\n","import BaseKnexDao from \"./knex/dao/BaseKnexDao.js\";\r\n\r\nexport default class IUserDao extends BaseKnexDao {\r\n    constructor(tableName) {\r\n        super(tableName);\r\n\r\n        if (!this.findByUsername) {\r\n            throw new Error(\"AuthHandler must have 'findByUsername' method\");\r\n        }\r\n    }\r\n}\r\n","import express from \"express\";\r\nimport { JsonResponse, Utils } from \"../common/index.js\";\r\n\r\nexport class BaseController {\r\n    constructor() {\r\n        this.router = express.Router();\r\n        this.routes = {};\r\n        //Example routes shorthand\r\n        /*\r\n         {\r\n            \"/\": {\r\n                \"get\": this.listEntidad.bind(this),\r\n                \"post\": this.listEntidad.bind(this)\r\n            }\r\n         } \r\n         */\r\n    }\r\n\r\n    configure(entity, config) {\r\n        if (!entity) {\r\n            return this.router;\r\n        }\r\n\r\n        const exAsync = Utils.expressHandler();\r\n        this.router.get(\r\n            `/${entity}`,\r\n            exAsync((...args) => this.listEntidad(...args))\r\n        );\r\n        this.router.post(\r\n            `/${entity}/list`,\r\n            exAsync((...args) => this.listEntidad(...args))\r\n        );\r\n        this.router.get(\r\n            `/${entity}/:id`,\r\n            exAsync((...args) => this.getEntidad(...args))\r\n        );\r\n        this.router.post(\r\n            `/${entity}`,\r\n            exAsync((...args) => this.saveEntidad(...args))\r\n        );\r\n        this.router.put(\r\n            `/${entity}/:id`,\r\n            exAsync((...args) => this.updateEntidad(...args))\r\n        );\r\n        this.router.delete(\r\n            `/${entity}/:id`,\r\n            exAsync((...args) => this.deleteEntidad(...args))\r\n        );\r\n\r\n        this.service = config.service;\r\n        this.table = config.table;\r\n\r\n        return this.router;\r\n    }\r\n\r\n    /**\r\n     * Lista entidades en la aplicacion, es posible enviarle parametros de filtrado.\r\n     *\r\n     *\r\n     * @api {post} /:entidad/list Listar entidades\r\n     * @apiName Listar entidades\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async listEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n            let filters = request.method === \"POST\" ? request.body : request.query && request.query.filters ? JSON.parse(request.query.filters) : {};\r\n\r\n            let data = await service.list(filters, filters.start, filters.limit);\r\n            let jsRes = new JsonResponse(true, data.data, null, data.total);\r\n\r\n            response.json(jsRes.toJson());\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    }\r\n    /**\r\n     *Obtiene un elemento concreto mediante su identificador\r\n     *\r\n     *\r\n     * @api {get} /:entidad/:id Obtener entidad\r\n     * @apiName Obtener entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async getEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n            let data = await service.loadById(request.params.id);\r\n            let jsRes = new JsonResponse(true, data);\r\n            let code = 200;\r\n            if (data == null) {\r\n                code = 404;\r\n                let message = \"Element not found\";\r\n                jsRes = new JsonResponse(false, null, message, 0);\r\n            }\r\n\r\n            response.status(code).json(jsRes.toJson());\r\n        } catch (e) {\r\n            console.error(e);\r\n            let message = \"\";\r\n            if (e.code == \"22P02\") {\r\n                //PostgreSQL error Code form string_to_UUID\r\n                message = \"Expected uiid\";\r\n            }\r\n            let jsRes = new JsonResponse(false, null, message, 0);\r\n            response.status(400).json(jsRes.toJson());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Almacena un elemento en BD\r\n     *\r\n     *\r\n     * @api {post} /:entidad/:id Crear entidad\r\n     * @apiName Crear entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async saveEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n\r\n            let data = await service.save(request.body);\r\n            let jsRes = new JsonResponse(true, (data && data[0]) || { id: request.body.id });\r\n\r\n            response.setHeader(\"Location\", `/entity/${jsRes.data.id}`);\r\n            response.status(201).json(jsRes.toJson());\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Almacena un elemento en BD\r\n     *\r\n     *\r\n     * @api {put} /:entidad/:id Actualizar entidad\r\n     * @apiName Actualizar entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async updateEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n\r\n            let data = await service.update(request.params.id, request.body);\r\n            let jsRes = new JsonResponse(true, (data && data[0]) || { id: request.body.id });\r\n\r\n            response.json(jsRes.toJson());\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Elimina un elemento correspondiente al identificador recibido\r\n     *\r\n     *\r\n     * @api {delete} /:entidad/:id/delete Delete entidad\r\n     * @apiName Eliminar entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async deleteEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n            let data = await service.delete(request.params.id);\r\n            let jsRes = new JsonResponse(true, data);\r\n\r\n            response.status(204).json(jsRes.toJson());\r\n        } catch (e) {\r\n            console.error(e);\r\n            if (e == \"NotFound\") {\r\n                let message = \"Element not found\";\r\n                let jsRes = new JsonResponse(false, null, message, 0);\r\n                response.status(404).json(jsRes.toJson());\r\n            } else {\r\n                next(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { BaseKnexDao } from \"../db/index.js\";\r\n\r\nexport class BaseService {\r\n    constructor(cls, table) {\r\n        if (cls) {\r\n            this.dao = new cls();\r\n        } else {\r\n            this.dao = new BaseKnexDao(); //El sistema por defecto utiliza knex, si se pasa un dao personalizado se puede sobreescribir este comportamiento\r\n        }\r\n        if (table) {\r\n            this.dao.tableName = table;\r\n        }\r\n    }\r\n    /**\r\n     * Obtencion de una lista de elementos.\r\n     *\r\n     * filters, es opcional. Si no se pasan se devuelve lo que hay ;\r\n     */\r\n    async list(filters, start, limit) {\r\n        //Pagination\r\n        const st = start || 0;\r\n        const lm = limit || 1000; //Default limit\r\n\r\n        let response = {};\r\n        response.total = await this.dao.countFilteredData(filters, st, lm);\r\n\r\n        if (filters && Object.keys(filters).length !== 0) {\r\n            let filteredData = await this.dao.loadFilteredData(filters, st, lm);\r\n            response.data = filteredData;\r\n            return response;\r\n        }\r\n\r\n        response.data = await this.dao.loadAllData(start, limit);\r\n        return response;\r\n    }\r\n\r\n    /**\r\n     * Obtencion de un elemento mediante su identificador\r\n     */\r\n    loadById(id) {\r\n        return this.dao.loadById(id);\r\n    }\r\n    /**\r\n     * Metodo de creacion.\r\n     *\r\n     * Si el identificador se pasa como undefined se creara un nuevo elemento,\r\n     * sino se modifica el correspondiente.\r\n     */\r\n    save(data) {\r\n        //Create\r\n        return this.dao.save(data);\r\n    }\r\n    /**\r\n     * Metodo de creacion.\r\n     *\r\n     * Si el identificador se pasa como undefined se creara un nuevo elemento,\r\n     * sino se modifica el correspondiente.\r\n     */\r\n    update(id, data) {\r\n        if (id) {\r\n            //Update\r\n            return this.dao.update(id, data);\r\n        }\r\n    }\r\n    /**\r\n     * Metodo de eliminado.\r\n     *\r\n     * El identificador es obligatorio para poder localizar el elemento a eliminar.\r\n     */\r\n    delete(id) {\r\n        if (id) {\r\n            return this.dao.delete(id);\r\n        }\r\n    }\r\n}\r\n","import { I18nLoader, Utils } from \"./common/index.js\";\r\nimport { EventHandler } from \"./events/index.js\";\r\nimport { ClusterServer, Server } from \"./server/index.js\";\r\nimport { Logger } from \"./logger/index.js\";\r\n\r\nimport net from \"net\";\r\nimport repl from \"repl\";\r\nimport { KnexConnector } from \"./db/index.js\";\r\nimport Runtime from \"./common/Runtime.js\";\r\n\r\nclass App {\r\n    constructor() {\r\n        this.serverClass = Server;\r\n        this.clusterClass = ClusterServer;\r\n    }\r\n\r\n    /**\r\n     * Inicializa la runtime de la aplicación para poder recibir parámetros por consola y generar claves.\r\n     * @returns\r\n     */\r\n    runtime(extra) {\r\n        return Runtime(extra);\r\n    }\r\n\r\n    /**\r\n     * Initializa las configuraciones para la app\r\n     *\r\n     */\r\n    async init(serverConfig) {\r\n        if (process.env.DISABLE_LOGGER != \"true\") {\r\n            await Logger.configure();\r\n        }\r\n\r\n        //Instanciar la clase server\r\n        const server = new this.serverClass(serverConfig, this.statics, this.routes);\r\n        if (this.customizeExpress) {\r\n            server.customizeExpress = this.customizeExpress;\r\n        }\r\n        if (this.beforeListen) {\r\n            server.beforeListen = this.beforeListen;\r\n        }\r\n        if (this.afterListen) {\r\n            server.afterListen = this.afterListen;\r\n        }\r\n\r\n        /**\r\n         * Gestor de eventos\r\n         * @type {EventHandler}\r\n         * @public\r\n         */\r\n        this.events = new EventHandler(this);\r\n\r\n        /**\r\n         * Gestor de traducciones\r\n         * @type {I18nLoader}\r\n         * @public\r\n         */\r\n        this.i18n = new I18nLoader();\r\n        await this.i18n.load();\r\n        /**\r\n         * Servidor actual\r\n         * @type {ClusterServer}\r\n         * @public\r\n         */\r\n        this.server = new this.clusterClass(this);\r\n\r\n        this.server.setServerCls(server);\r\n        this.server.executeOnlyMain = () => {\r\n            if (this.executeOnlyMain) this.executeOnlyMain();\r\n\r\n            if (process.env.REPL_ENABLED == \"true\") {\r\n                this.startRepl();\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Ejecuta el servidor con la configuracion de #init()\r\n     */\r\n    async start() {\r\n        if (!this.server) {\r\n            throw new Error(\"Call init first\");\r\n        }\r\n        await this.server.start();\r\n    }\r\n\r\n    /**\r\n     * Inicia el server replify para poder conectar terminales remotas\r\n     *\r\n     *\r\n     * Para que arranque es necesario especificar REPL_ENABLED en el archivo .env\r\n     */\r\n    startRepl() {\r\n        try {\r\n            net.createServer((socket) => {\r\n                const remote = repl.start({\r\n                    prompt: \"lisco::remote> \",\r\n                    input: socket,\r\n                    output: socket,\r\n                    terminal: true,\r\n                    useColors: true,\r\n                    preview: false,\r\n                });\r\n                remote.context.app = this;\r\n                remote.context.Utils = Utils;\r\n                remote.context.db = KnexConnector.connection;\r\n                remote.on(\"exit\", socket.end.bind(socket));\r\n            }).listen(process.env.REPL_PORT || 5001);\r\n        } catch (e) {\r\n            console.log(\"Remote REPL Conn: \" + e);\r\n        }\r\n\r\n        console.log(`Remote REPL started on port ${process.env.REPL_PORT || 5001}`);\r\n    }\r\n}\r\n\r\nexport default new App();\r\n","import Utils from \"./Utils.js\";\r\n\r\nimport yargs from \"yargs/yargs\";\r\nimport { hideBin } from \"yargs/helpers\";\r\n\r\n/**\r\n * Extra puede ser un array de objetos con la siguiente estructura:\r\n *\r\n * {\r\n *  \"key\": \"c\",\r\n *  \"alias\": \"config\",\r\n *  \"describe\": \"Configuración\",\r\n *  \"fn\": function(argv) { },\r\n *  \"nargs\": 0,\r\n *  \"required\": true\r\n * }\r\n * @param {*} extra\r\n * @returns\r\n */\r\nexport default async function Runtime(extra) {\r\n    const cfg = yargs(hideBin(process.argv))\r\n        .usage(\r\n            `Como usar: \r\n            node $0 [options] \r\n            \r\n            ** Si no se especifican parámetros el servidor arrancará normalmente. **`\r\n        )\r\n        .alias(\"g\", \"generateKeys\")\r\n        .describe(\"g\", \"Genera unas claves para la aplicación\")\r\n        .alias(\"c\", \"encrypt\")\r\n        .describe(\"c\", \"Codifica el String proporcionado en base a la contraseña de .env\")\r\n        .nargs(\"c\", 1)\r\n        .help(\"h\")\r\n        .alias(\"h\", \"help\");\r\n\r\n    let demand = [];\r\n    if (extra) {\r\n        for (const param of extra) {\r\n            cfg.alias(param.key, param.alias);\r\n            if (param.describe) {\r\n                cfg.describe(param.key, param.describe);\r\n            }\r\n            if (param.nargs !== 0) {\r\n                cfg.nargs(param.key, param.nargs);\r\n            }\r\n            if (param.boolean) {\r\n                cfg.boolean(param.key);\r\n            }\r\n            if (param.choices) {\r\n                cfg.choices(param.key, param.choices);\r\n            }\r\n            if (param.required) {\r\n                demand.push(param.key);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (demand.length !== 0) {\r\n        cfg.demandOption(demand);\r\n    }\r\n\r\n    const argv = cfg.argv;\r\n    //Parámetro para no arrancar el servidor y generar las claves JWT\r\n    if (argv.generateKeys) {\r\n        console.log(\"Generando claves para encriptación:\");\r\n        console.log(Utils.generateKeys());\r\n        return process.exit(1);\r\n    }\r\n\r\n    if (argv.encrypt) {\r\n        console.log(\"Resultado encryptación:\");\r\n        console.log(Utils.encrypt(argv.encrypt));\r\n        return process.exit(1);\r\n    }\r\n\r\n    if (extra) {\r\n        for (const param of extra) {\r\n            if (argv[param.key]) {\r\n                await param.fn(argv);\r\n                return process.exit(1);\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"names":["Utils","static","mcArray","join","toLowerCase","split","str","find","replace","RegExp","text","secret","Buffer","from","process","env","CRYPT_SECRET","iv","CRYPT_IV","cipher","crypto","createCipheriv","encrypted","update","concat","final","toString","encryptedText","createDecipheriv","decrypted","decipher","ms","util","promisify","setTimeout","promise_sleep","key","randomBytes","ob","flatObject","toReturn","i","hasOwnProperty","Array","constructor","flattenObject","x","isNaN","data","result","keys","reduce","r","e","j","Number","length","fn","args","next","Promise","resolve","fnReturn","catch","I18nLoader","this","watcher","async","custom","lang","DEFAULT_LANG","currentData","currentDataFlat","cwd","chokidar","watch","file","ignored","persistent","on","path","loadFile","readfile","fs","readFile","parsedData","JSON","parse","ex","code","console","log","error","load","JsonResponse","success","message","total","toJson","buffer","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","alloc","allocUnsafe","allocUnsafeSlow","module","exports","TypeError","size","fill","encoding","buf","undefined","SlowBuffer","require$$0","DataStream","writable","readable","pipe","nextTick","emit","bind","inherits","Stream","prototype","write","end","dataStream","bufferEqualConstantTime","bufferEq","a","b","isBuffer","c","install","equal","that","origBufEqual","origSlowBufEqual","getParamSize","keySize","restore","paramBytesForAlg","ES256","ES384","ES512","paramBytesForAlg_1","alg","paramBytes","Error","signatureAsBuffer","signature","countPadding","start","stop","padding","ecdsaSigFormatter","getParamBytesForAlg","maxEncodedParamLength","inputLength","offset","seqLength","TAG_INT","rLength","rOffset","sLength","sOffset","rPadding","sPadding","copy","Math","max","o","MSG_INVALID_SECRET","MSG_INVALID_VERIFIER_KEY","supportsKeyObjects","createPublicKey","checkIsPublicKey","typeError","type","asymmetricKeyType","export","checkIsPrivateKey","fromBase64","base64","toBase64","base64url","template","slice","call","arguments","errMsg","format","apply","normalizeInput","thing","obj","stringify","createHmacSigner","bits","checkIsSecretKey","hmac","createHmac","digest","createHmacVerifier","computedSig","bufferEqual","createKeySigner","privateKey","signer","createSign","sign","createKeyVerifier","publicKey","verifier","createVerify","verify","createPSSKeySigner","constants","RSA_PKCS1_PSS_PADDING","saltLength","RSA_PSS_SALTLEN_DIGEST","createPSSKeyVerifier","createECDSASigner","inner","formatEcdsa","createECDSAVerifer","signatureBytes","rsBytes","shortLength","MAX_OCTET","createNoneSigner","createNoneVerifier","jwa","algorithm","signerFactories","hs","rs","ps","es","none","verifierFactories","match","algo","tostring","string","jwsSign","opts","header","payload","secretOrKey","securedInput","encodedHeader","encodedPayload","jwsSecuredInput","SignStream","secretStream","once","signStream","JWS_REGEX","headerFromJWS","jwsSig","Object","isObject","safeJsonParse","signatureFromJWS","isValidJws","test","jwsVerify","err","securedInputFromJWS","jwsDecode","payloadFromJWS","typ","json","VerifyStream","valid","decode","isValid","verifyStream","JsonWebTokenError","captureStackTrace","name","create","JsonWebTokenError_1","NotBeforeError","date","NotBeforeError_1","TokenExpiredError","expiredAt","TokenExpiredError_1","m","s","h","d","plural","msAbs","n","isPlural","round","timespan","time","iat","timestamp","floor","Date","now","milliseconds","val","options","String","exec","parseFloat","isFinite","long","abs","fmtLong","fmtShort","debug","SemVer","NODE_DEBUG","unshift","SEMVER_SPEC_VERSION","MAX_SAFE_INTEGER","re","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","version","loose","includePrerelease","er","trim","raw","major","minor","patch","prerelease","map","id","num","build","v","clean","compare","other","compareMain","comparePre","compareIdentifiers","inc","release","identifier","push","diff","version1","version2","eq","v1","v2","prefix","defaultResult","numeric","anum","bnum","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","value","semver","ANY","operator","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","Range","range","set","parseRange","filter","isX","hyphenReplace","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","outside","hilo","gtfn","ltefn","ltfn","ecomp","high","low","forEach","comparator","intersects","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","compRe","_","M","p","pr","ret","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","replaceXRange","replaceXRanges","replaceStars","parseComparator","some","thisComparators","every","thisComparator","rangeComparators","rangeComparator","toComparators","maxSatisfying","versions","maxSV","rangeObj","minSatisfying","min","minSV","minVersion","minver","compver","validRange","ltr","gtr","parsed","r1","r2","coerce","psSupported","PUB_KEY_ALGS","RSA_KEY_ALGS","HS_ALGS","PS_SUPPORTED","splice","reTrim","reIsBadHex","reIsBinary","reIsOctal","reIsUint","freeParseInt","parseInt","baseIsNaN","objectProto","objectToString","propertyIsEnumerable","nativeKeys","func","transform","overArg","nativeMax","isIndex","isArray","isArrayLike","isLength","tag","isFunction","isObjectLike","lodash_isboolean","lodash_isinteger","isSymbol","valueOf","isBinary","toNumber","toFinite","remainder","toInteger","lodash_isnumber","funcToString","Function","objectCtorString","getPrototype","getPrototypeOf","lodash_isplainobject","isHostObject","proto","Ctor","lodash_isstring","SUPPORTED_ALGS","sign_options_schema","expiresIn","isInteger","isString","notBefore","audience","collection","fromIndex","guard","object","props","array","iteratee","index","arrayMap","baseValues","inherited","isArrayLikeObject","isArguments","baseTimes","skipIndexes","arrayLikeKeys","baseKeys","indexOf","predicate","fromRight","baseFindIndex","baseIndexOf","isPlainObject","issuer","subject","jwtid","noTimestamp","isBoolean","keyid","mutatePayload","registered_claims_schema","isNumber","exp","nbf","validate","schema","allowUnknown","parameterName","validator","options_to_payload","options_for_objects","jsonwebtoken","jwtString","secretOrPublicKey","callback","done","assign","clockTimestamp","nonce","decodedToken","parts","jwt","decoded","jws","complete","getSecret","secretCallback","hasSignature","algorithms","ignoreNotBefore","clockTolerance","ignoreExpiration","audiences","aud","targetAudience","iss","sub","jti","maxAge","maxAgeTimestamp","secretOrPrivateKey","isObjectPayload","kid","failure","validatePayload","invalid_options","opt","validateOptions","claim","before","TokenGenerator","_extends","uuid","v4","jwtSignOptions","token","refresh","Server","config","statics","routes","app","express","express_config","lodash","defaultsDeep","helmet","urlencoded","compression","cors","origin","credentials","fileupload","socketio","transports","traceRequests","customizeExpress","configureRoutes","errorHandler","use","extended","fileUpload","idx","DISABLE_LOGGER","request","response","requestTime","pathname","url","pid","method","session","user_id","body","Router","router","loadRoutes","route","warn","configure","entity","service","table","isEmpty","exAsync","expressHandler","cfg","handler","req","res","jsRes","status","ClusterServer","EventEmitter","super","PORT","port","normalizePort","clustered","CLUSTERED","workers","executeOnlyMain","setServerCls","cls","server","initClustered","configureSocketIO","initUnclustered","io","listen","cluster","isPrimary","msg","event","DEBUG_EVENTS","owner","events","os","cpus","cpuCount","initWorker","worker","fork","http","initialize","beforeListen","afterListen","handleErrors","SSL","SSL_KEY","SSL_CERT","SSL_PASS","exit","readFileSync","cert","passphrase","SSL_PORT","serverSsl","https","createServer","sslPort","syscall","EventHandler","messages","isWorker","evt","send","getLogger","log4js","log_logger","error_logger","debug_logger","info","logger","level","AuthController","publicPathsList","AuthHandler","check","post","loginPost","logout","pathToRegexp","username","password","IAuthHandler","JwtAuthHandler","UserDao","tokenGenerator","JWT_SECRET","JWT_AUDIENCE","JWT_ISSUER","JWT_SUBJECT","JWT_ALGORITHM","JWT_EXPIRES","userDao","headers","authorization","moment","isAfter","user","findByUsername","encrypt","omit","CookieAuthHandler","creds","login","destroy","TimeoutError","_value","_error","reason","isRejected","isFulfilled","checkRequiredTime","reject","promise","resolver","rejecter","t1","t2","millis","then","PromiseInspection_1","PromiseInspection","cb","timeoutMillis","deferred","utils_1","defer","possibleTimeoutCause","timeoutHandle","TimeoutError_1","clearTimeout","abort","Resource","resource","remove","arr","item","destroyed","emitter","events_1","checkOptionalTime","acquireTimeoutMillis","createTimeoutMillis","destroyTimeoutMillis","idleTimeoutMillis","reapIntervalMillis","createRetryIntervalMillis","allowedKeys","propagateCreateError","creator","destroyer","used","free","pendingCreates","pendingAcquires","pendingDestroys","pendingValidations","interval","eventId","numUsed","numFree","numPendingAcquires","numPendingValidations","numPendingCreates","acquire","_executeEventHandlers","pendingAcquire","PendingOperation_1","PendingOperation","_tryAcquireOrCreate","l","newFree","maxDestroy","numDestroyed","duration","_destroy","_stopReaping","reflect","all","setInterval","timers_1","clearInterval","pd","removeAllListeners","listener","removeListener","_hasFreeResources","_doAcquire","_shouldCreateMoreResources","_doCreate","_canAcquire","shift","pop","errMessage","abortAbleValidation","stack","validationSuccess","_startReaping","_validateResource","pendingAcquiresBeforeCreate","_create","delay","pendingCreate","tryPromise","Resource_1","pendingDestroy","_logDestroyerError","findIndex","eventName","listeners","tarn","Pool","Pool_1","charsRegex","charsMap","wrapEscape","escapeFn","finalEscape","ctx","escapeObject","toSQL","arrayToList","sql","bufferToString","escapeString","chunkIndex","lastIndex","escapedVal","dateToString","timeZone","dt","year","month","day","hour","minute","second","millisecond","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","tz","convertTimezone","setTime","getTime","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","zeroPad","number","makeEscape","finalEscapeDate","escapeDate","finalEscapeArray","escapeArray","finalEscapeBuffer","escapeBuffer","finalEscapeString","finalEscapeObject","finalWrap","wrap","KnexTimeoutError","ensureConnectionCallback_1","ensureConnectionCallback","runner","client","builder","_debug","queryArray","query","ensureConnectionStreamCallback","params","hasHandler","stream","connection","timeout","require$$1","Transform","Runner","queries","ensureConnection","_events","optionsOrHandler","handlerOrNil","firstOptionIsHandler","require$$2","queryContext","objectMode","chunk","postProcessResponse","releaseConnection","connectionAcquirePromise","__knexUid","__knexTxId","queryPromise","resp","processResponse","processedResponse","postProcessedResponse","bindings","cancelQuery","cancelOnTimeout","__knex__disposed","cancelError","statementsProducer","statements","sqlQueryObjects","statement","preQueryObjects","pre","postQueryObjects","results","transaction","trx","transactionRunner","cbParams","_connection","acquiredConnection","acquireConnection","formatArgs","useColors","namespace","humanize","color","lastC","save","namespaces","storage","setItem","removeItem","getItem","DEBUG","window","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","$1","localStorage","localstorage","warned","colors","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","self","curr","prev","formatter","formatters","selectColor","extend","defineProperty","enumerable","configurable","get","init","delimiter","newDebug","toNamespace","regexp","substring","default","disable","names","skips","enable","len","hash","charCodeAt","noop","methodConstants","is","isUndefined","Migrator","KNEX_PROPERTY_DEFINITIONS","context","userParams","schemaBuilder","migrate","seed","Seeder","precision","uuidToBin","ordered","binToUuid","bin","CONTEXT_METHODS","_copyEventListeners","sourceKnex","targetKnex","redefineProperties","knex","QueryInterface","queryBuilder","defineProperties","knexFn","knexContext","batchInsert","batch","chunkSize","tableName","returning","chunks","tr","chunksResults","items","insert","flatten","columns","transacting","container","_config","doNotRejectOnRollback","_transaction","outerTx","transactionProvider","initializePool","ref","disableProcessing","isProcessingDisabled","wrapIdentifier","enableProcessing","withUserParams","knexClone","originalFunction","fnContext","getOwnPropertyDescriptors","clonedFunction","createQueryBuilder","shallowCloneFunction","merge","initContext","ee","_internalListeners","_addInternalListener","qb","makeKnex_1","finallyMixin_1","finally","onFinally","callbackify","Debug","validIsolationLevels","Transaction","txid","uniqueId","trxClient","_completed","isolationLevel","setIsolationLevel","_lastChild","basePromise","_evaluateContainer","_promise","isCompleted","begin","conn","savepoint","commit","includes","rollback","_rejecter","rollbackTo","q","_resolver","driver","connectionSettings","valueForUndefined","_query","completed","completedError","_stream","makeTxClient","executionPromise","transactor","makeKnex","isTransaction","makeTransactor","configConnection","onResolve","onReject","asCallback","finallyMixin","_debugQuery","debugBindings","formatQuery","_escapeBinding","queryExecutioner","enrichQueryObject","queryParam","queryObject","prepBindings","positionBindings","txId","executeQuery","CLIENT_ALIASES","freeze","pg","postgresql","sqlite","SUPPORTED_CLIENTS","DRIVER_NAMES","MsSQL","MySQL","MySQL2","Oracle","PostgreSQL","PgNative","Redshift","SQLite","CockroachDB","BetterSQLite3","POOL_CONFIG_OPTIONS","COMMA_NO_PAREN_REGEX","containsUndefined","mixed","argContainsUndefined","isTypedArray","helpers","addQueryContext","Target","_queryContext","getUndefinedIndices","indices","normalizeArr","resolveClientNameWithAliases","clientName","fallback","getClauseFromArguments","compilerType","bool","first","column","JoinClause","joinType","and","clauses","or","_bool","orOn","onJsonPathEquals","columnFirst","jsonPathFirst","columnSecond","jsonPathSecond","not","_not","orOnJsonPathEquals","using","onVal","andOnVal","orOnVal","onBetween","values","assert","onNotBetween","orOnBetween","orOnNotBetween","onIn","onNotIn","orOnIn","orOnNotIn","onNull","orOnNull","onNotNull","orOnNotNull","onExists","orOnExists","onNotExists","orOnNotExists","_boolFlag","_notFlag","grouping","andOn","andOnIn","andOnNotIn","andOnNull","andOnNotNull","andOnExists","andOnNotExists","andOnBetween","andOnNotBetween","andOnJsonPathEquals","joinclause","saveAsyncStack","instance","lines","asyncStackTraces","_asyncStack","builderInterfaceAugmenter","augmentWithBuilderInterface","toQuery","_method","endsWith","run","originalStack","firstLine","asyncStack","_options","clone","processPassedConnection","Symbol","toStringTag","lockMode","waitMode","forShare","forUpdate","forNoKeyUpdate","forKeyShare","skipLocked","noWait","require$$4","SELECT_COMMANDS","Set","CLEARABLE_STATEMENTS","LOCK_MODES","Builder","_single","_statements","_joinFlag","_asColumnFlag","queryCompiler","cloned","cancel","_timeout","assertCanCancelQuery","_cancelOnTimeout","isValidStatementArg","isRawInstance","_validateWithArgs","alias","statementOrColumnList","nothingOrStatement","columnList","it","with","withWrapped","withMaterialized","withNotMaterialized","materialized","withRecursive","withRecursiveWrapped","recursive","as","hintComment","hints","hint","withSchema","schemaName","only","distinct","distinctOn","_joinType","tables","innerJoin","leftJoin","leftOuterJoin","rightJoin","rightOuterJoin","outerJoin","fullOuterJoin","crossJoin","joinRaw","where","argsLength","whereWrapped","_objectWhere","whereRaw","whereNull","checkOperator","whereIn","whereBetween","asColumn","whereColumn","orWhere","andWhere","orWhereColumn","andWhereColumn","whereNot","whereNotColumn","orWhereNot","orWhereNotColumn","boolVal","notVal","orWhereRaw","whereExists","orWhereExists","whereNotExists","orWhereNotExists","orWhereIn","whereNotIn","orWhereNotIn","orWhereNull","whereNotNull","orWhereNotNull","whereNotBetween","orWhereBetween","orWhereNotBetween","_whereLike","whereLike","orWhereLike","whereILike","orWhereILike","groupBy","groupByRaw","orderBy","direction","nulls","_orderByArray","columnDefs","columnInfo","orderByRaw","_union","clause","callbacks","toArray","union","unionAll","intersect","having","havingRaw","havingWrapped","orHaving","andHaving","havingNull","orHavingNull","havingNotNull","orHavingNotNull","havingExists","orHavingExists","havingNotExists","orHavingNotExists","havingBetween","orHavingBetween","havingNotBetween","orHavingNotBetween","havingIn","orHavingIn","havingNotIn","orHavingNotIn","orHavingRaw","_setSkipBinding","attribute","skipBinding","limit","count","_aggregate","sum","avg","countDistinct","last","sumDistinct","avgDistinct","increment","amount","_counter","decrement","clearCounters","counter","select","pluck","clearSelect","_clearGrouping","clearWhere","clearGroup","clearOrder","clearHaving","clear","has","startsWith","onConflict","OnConflictBuilder","delete","truncate","lock","lockTables","_isSelectQuery","_hasLockMode","fromJS","each","fromRaw","modify","tail","upsert","dialect","_json","nameFunction","jsonExtract","singleValue","jsonSet","jsonInsert","jsonRemove","_isJsonObject","jsonValue","_whereJsonWrappedValue","whereJsonClause","jsonPath","whereJsonObject","orWhereJsonObject","whereNotJsonObject","orWhereNotJsonObject","whereJsonPath","orWhereJsonPath","whereJsonSupersetOf","whereJsonNotSupersetOf","orWhereJsonSupersetOf","orWhereJsonNotSupersetOf","whereJsonSubsetOf","whereJsonNotSubsetOf","orWhereJsonSubsetOf","orWhereJsonNotSubsetOf","whereJsonHasNone","whereJsonHasAll","_analytic","third","analytic","_analyticMethod","partitions","order","partitionBy","rank","denseRank","rowNumber","_analyticFlag","aggregateDistinct","andWhereNot","andWhereNotColumn","andWhereRaw","andWhereBetween","andWhereNotBetween","andWhereJsonObject","andWhereNotJsonObject","andWhereJsonPath","andWhereLike","andWhereILike","andHavingIn","andHavingNotIn","andHavingNull","andHavingNotNull","andHavingExists","andHavingNotExists","andHavingBetween","andHavingNotBetween","into","del","methodName","_columns","ignore","updates","querybuilder","formatterUtils","compileCallback","bindingsHolder","wrapAsIdentifier","formatDefault","orderBys","operators","isParameter","bindingHolder","unwrapRaw","outputQuery","queryOrIdentifier","compiled","QueryBuilder","parseObject","wrapString","asIndex","wrapped","segments","wrappingFormatter","columnize","target","rawOrFn","rawFormatter","replaceKeyBindings","p1","p2","p3","p4","part","isIdentifier","parameter","replaceRawArrBindings","expectedBindings","nanoid_1","nanoid","random","nanonum","require$$3","Raw","_wrappedBefore","_wrappedAfter","after","undefinedBindingIndices","__knexQueryUid","toNative","columnize_","direction_","operator_","wrap_","unwrapRaw_","rawOrFn_","components","querycompiler","single","grouped","_emptyInsertValue","_undefinedInWhereClause","undefinedBindingsInfo","toUpperCase","unionStatement","firstStatements","endStatements","component","wrapMainQuery","u","onlyUnions","compact","allStatements","endStat","toPluck","insertValues","_insertBody","_onConflictClause","_buildInsertValues","insertData","parameterize","_prepInsert","withSQL","updateData","_prepUpdate","wheres","_hintComments","hintComments","distinctClause","stmt","aggregate","aggregateRaw","onlyJson","aliasSeparator","distinctParentheses","addAlias","aggregateArray","openParen","closeParen","aggregateString","aggregated","entries","splitOn","_joinTable","joins","ii","multiOnIn","group","_groupsOrders","havings","havingBasic","multiHavingIn","unions","_getValueOrParameterFromAttribute","rawValue","onWrapped","wrapJoin","wrapClause","onBasic","toWrap","onRaw","onUsing","_valueClause","_columnClause","whereBasic","_jsonWrapValue","_jsonValueClause","charAt","partition","withs","isRecursive","isRaw","row","k","symbol","omitBy","vals","_formatGroupsItemValue","groupOrder","nullOrder","_basicGroupOrder","_groupOrder","_groupOrderNulls","_tableName","isRawQuery","_jsonPathWrap","extraction","_jsonExtract","extractions","jsonCol","f","_jsonSet","_whereJsonPath","_onJsonPathEquals","nameJoinFunction","SchemaBuilder","_sequence","_schema","schemaCompiler","generateDdlCommands","pushAdditional","child","tableCompiler","columnBuilder","sequence","additional","pushQuery","_commonBuilder","unshiftQuery","SchemaCompiler","createSchema","throwOnlyPGError","createSchemaIfNotExists","dropSchema","dropSchemaIfExists","dropTable","dropTablePrefix","prefixedTableName","dropTableIfExists","dropView","viewName","_dropView","dropViewIfExists","dropMaterializedView","dropMaterializedViewIfExists","renameView","refreshMaterializedView","ifExists","dropMaterializedViewPrefix","dropViewPrefix","generatedCommands","setSchema","buildTable","tableNameLike","tableBuilder","buildView","viewBuilder","operationName","alterViewPrefix","alterTable","createTable","createTableIfNotExists","createTableLike","createView","createViewOrReplace","createMaterializedView","alterView","compiler","TableBuilder","_fn","_schemaName","_tableNameLike","AlterMethods","timestamps","useTimestamps","defaultToNow","useCamelCase","createdAt","updatedAt","notNullable","defaultTo","comment","foreign","keyName","foreignData","returnObj","references","tableColumn","pieces","inTable","withKeyName","onUpdate","onDelete","deferrable","_columnBuilder","checkPredicate","constraintName","mysql","methods","renameColumn","dropTimestamps","dropColumns","setNullable","dropChecks","dropNullable","dropColumn","tablebuilder","TableCompiler","schemaNameRaw","tableNameRaw","tableNameLikeRaw","_formatting","formatting","checksCount","ifNot","like","getColumns","col","columnTypes","getColumnTypes","createAlterTableMethods","alterTableForCreate","createQuery","columnQueries","createIfNot","createLike","createLikeIfNot","alter","addColumns","alterColBuilders","alterColumns","addColumnTypes","alterColumnTypes","_indexCommand","lowerCase","forCreate","memo","columnSQL","addColumnsPrefix","columnSql","colBuilders","alterColumnsPrefix","columnCompiler","savedSequence","dropIndex","dropUnique","dropForeign","drops","dropColumnPrefix","_setNullableState","nullable","columnName","alterColumnPrefix","output","maxLength","defaultValue","checkConstraintNames","constraint","checkConstraint","_addChecks","checks","indexName","_getPrimaryKeys","flatMap","flat","_canBeAddPrimaryKey","primaryKey","_getIncrementsColumnNames","_type","_args","modifyColumnPrefix","tablecompiler","ColumnBuilder","_modifiers","columnAlias","_tableBuilder","aliasMethod","defaultsTo","notNull","drop","alterNullable","alterType","float","enum","boolean","bigint","columnbuilder","ColumnCompiler","modified","isIncrements","modifiers","_addCheckModifiers","defaults","label","_defaultMap","compileColumn","getColumnName","getColumnType","getModifiers","_columnType","modifier","varchar","floating","scale","decimal","specifictype","increments","bigincrements","_pushAlterCheckQuery","checkName","_checkConstraintName","_check","checkPositive","checkNegative","_checkIn","checkIn","checkNotIn","checkBetween","intervals","intervalChecks","checkLength","binary","datetime","geometry","geography","point","enu","bit","useBinaryUuid","integer","smallint","mediumint","biginteger","tinyint","columncompiler","_alias","_interopNamespace","__esModule","getOwnPropertyDescriptor","tty__namespace","tty","argv","platform","isDisabled","isForced","isWindows","isDumbTerminal","TERM","isCompatibleTerminal","isatty","isColorSupported","replaceClose","close","head","open","at","clearBleed","filterEmpty","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","createColors","useColor","inspect","ViewBuilder","_viewName","selectQuery","_selectQuery","checkOption","localCheckOption","cascadedCheckOption","viewCompiler","rename","newName","viewbuilder","ViewCompiler","viewNameRaw","createOrReplace","createStatement","viewcompiler","require$$5","require$$6","require$$7","require$$8","require$$9","Client","deprecate","inspectionDepth","enableColors","enableColorsParam","_inspectionDepth","_enableColors","stdout","isTTY","_warn","_deprecate","_log","userFn","colorFn","depth","alternative","connectionConfigProvider","connectionConfigExpirationChecker","cloneDeep","driverName","initializeDriver","pool","useNullAsDefault","Formatter","QueryCompiler","Ref","customWrapIdentifier","wrapIdentifierImpl","origImpl","_driver","poolDefaults","getPoolSettings","poolConfig","option","timeouts","acquireConnectionTimeout","updatePoolConnectionSettingsFromProvider","providerResult","expirationChecker","acquireRawConnection","afterCreate","destroyRawConnection","validateConnection","tarnPoolConfig","convertedError","database","canCancelQuery","notSetValue","toPathForJson","host","encodeURI","auth","protocol","decodeURI","db","client_encoding","hostname","pathnameSplit","decodeURIComponent","ssl","sslcert","sslkey","sslrootcert","sslmode","ca","rejectUnauthorized","pgConnectionString","parsePG","parseConnection","URL","tryParse","filename","connectionObject","searchParams","sqliteTransaction","emptyStr","constant","sqliteQuerycompiler","binding","_ignore","_merge","_returning","blocks","i2","block","current","identity","maxLengthRegex","out","notnull","dflt_value","noLimit","sqliteCompiler","hasTable","hasColumn","renameTable","commandSources","commandSource","command","ColumnCompiler_SQLite3","checkRegex","regexes","jsonb","double","sqliteColumncompiler","sqliteTablecompiler","foreignKeys","primaryKeys","colCompilers","columnsInfo","pragma","ddl","alterColumn","dropPrimary","unique","predicateQuery","primary","foreignInfo","pks","needUniqueCols","t","foreignTable","createTableBlock","isNullable","columnsWrapped","sqliteViewcompiler","createSql","tokenizer","tokenize","tokens","compiledRegex","regex","source","ast","groups","input","position","parser","many","optional","lookahead","do","negative","TOKENS","keyword","blob","variable","_ws","temporary","rowid","columnDefinitionList","columnDefinition","typeName","columnConstraintList","signedNumber","columnConstraint","constraints","null","collate","primaryColumnConstraint","notnullColumnConstraint","nullColumnConstraint","uniqueColumnConstraint","checkColumnConstraint","defaultColumnConstraint","collateColumnConstraint","referencesColumnConstraint","asColumnConstraint","conflictClause","autoincrement","expression","literalValue","collation","foreignKeyClause","generated","mode","tableConstraintList","tableConstraint","primaryTableConstraint","uniqueTableConstraint","checkTableConstraint","foreignTableConstraint","indexedColumnList","conflict","columnNameList","columnNameListOptional","deleteReference","updateReference","matchReference","onAction","initially","exists","indexedColumn","indexedColumnExpression","indexedExpression","parseCreateTable","parseCreateIndex","deleteUpdateMatchList","expr","compileCreateTable","constraintList","compileCreateIndex","createIndex","isEqualId","utils","includesId","copyData","dropOriginal","getTableSql","isForeignCheckEnabled","setForeignCheck","executeForeignCheck","sourceTable","targetTable","alteredName","sqliteQuerybuilder","Client_SQLite3","SqliteQueryCompiler","createIndices","foreign_keys","parsedTable","newColumnInfo","newTable","generateAlterCommands","parsedColumn","constraintColumn","constraintColumnName","referenceColumnName","newColumns","newIndices","parsedIndex","foreignKeyName","newSql","wasForeignCheckEnabled","flags","OPEN_READWRITE","OPEN_CREATE","_flag","Database","callMethod","rows","lastID","changes","sqlite3","Client_BetterSQLite3","prepare","_formatBindings","reader","lastInsertRowid","betterSqlite3","pgTransaction","pgQuerycompiler","_defaultInsertValue","usingTables","tableJoins","joinWheres","_tableNames","_lockingClause","_buildColumnInfoQuery","column_name","data_type","character_maximum_length","is_nullable","column_default","castValue","pgQuerybuilder","commentEscapeRegex","ColumnCompiler_PG","useNative","existingType","enumName","jsonColumn","withoutTz","useTz","escapedComment","jsonbSupport","pgColumncompiler","pgTablecompiler","constraintAction","compileAdd","prefixArray","columnsSql","_addColumn","quotedTableName","colName","isEnum","indexType","pgViewcompiler","pgViewbuilder","pgCompiler","qualifiedTableName","cascade","dropExtension","extensionName","dropExtensionIfExists","createExtension","createExtensionIfNotExists","concurrently","Client_PG","defaultReturning","searchPath","arrayAccessor","arrayAccessorMatch","_acquireOnlyConnection","connect","checkVersion","setSchemaSearchPath","_parseVersion","versionString","questionCount","escapes","arraySyntax","PGQueryStream","browser","queryStream","queryConfig","returns","rowCount","connectionToKill","_wrappedCancelQueryCall","processID","arrayString","esc","hasBackslash","escaped","prepareValue","timezone","seen","toPostgres","postgres","crdbQuerycompiler","QueryCompiler_PG","_upsert","upsertValues","toArrayPathFromJsonPath","crdbColumncompiler","crdbTablecompiler","crdbViewcompiler","ViewCompiler_PG","crdbQuerybuilder","Client_CockroachDB","Client_PostgreSQL","emptyConnection","activeQuery","secretKey","cockroachdb","mssqlFormatter","columnizeWithPrefix","escapingStringDelimiters","beginTransaction","knownEnum","isolationEnum","humanReadableKeys","nameToIsolationLevelEnum","saveTransaction","autogenerated","commitTransaction","_resolve","inTransaction","state","rollbackTransaction","originalError","_err","READ_UNCOMMITTED","READ_COMMITTED","REPEATABLE_READ","SERIALIZABLE","SNAPSHOT","mssqlQuerycompiler","undoList","includeTriggerModifications","insertWithTriggers","standardInsert","_buildTempTable","returningSql","_buildReturningSelect","_buildInsertData","updateWithTriggers","standardUpdate","top","collNulls","deleteWithTriggers","standardDelete","returningStr","deleteSelector","withTrigger","selections","noOffset","_getExtracts","SchemaCompiler_MSSQL","viewTable","formattedColumn","formattedTable","mssqlCompiler","TableCompiler_MSSQL","level0name","level1name","colBuilder","baseQuery","_this2","changeType","dropFKRefs","refs","CONSTRAINT_NAME","TABLE_NAME","createFKRefs","COLUMN_NAME","REFERENCED_COLUMN_NAME","REFERENCED_TABLE_NAME","UPDATE_RULE","DELETE_RULE","useConstraint","whereAllTheColumnsAreNotNull","mssqlTablecompiler","mssqlViewcompiler","ColumnCompiler_MSSQL","formattedValue","level2name","mediumtext","longtext","mssqlColumncompiler","Client_MSSQL","_generateConnection","settings","authentication","userName","domain","clientId","clientSecret","tenantId","msiEndpoint","connectTimeout","connectionTimeout","requestTimeout","isNil","rowCollectionOnDone","rowCollectionOnRequestCompletion","useColumnNames","tdsVersion","appName","trustServerCertificate","instanceName","Infinity","packet","MSSQL_Formatter","Driver","Connection","connected","_chomp","nextRequest","requestQueue","execSql","_enqueueRequest","_makeRequest","Request","remoteRowCount","more","metadata","_assignBindings","_setReqInput","_scaleForBinding","_typeForBinding","mapBinding","TYPES","NVarChar","Bit","Float","BigInt","Int","DateTime","VarBinary","inputBinding","tediousType","bindingName","addParameter","mssql","errno","mysqlQuerycompiler","COLUMN_DEFAULT","DATA_TYPE","CHARACTER_MAXIMUM_LENGTH","IS_NULLABLE","mysqlCompiler","Field","TableCompiler_MySQL","charset","engine","MAX_COMMENT_LENGTH","getFKRefs","Type","Null","Default","Collation","Extra","incrementsCols","storageEngineIndexType","primaryCols","mysqlTablecompiler","ColumnCompiler_MySQL","defaultVal","unsigned","mysqlColumncompiler","mysqlViewcompiler","mysqlViewbuilder","Client_MySQL","createConnection","queryOptions","fields","insertId","affectedRows","threadId","Client_MySQL2","_fatalError","_protocolError","_closing","mysql2","ReturningHelper","generateCombinedName","postfix","subNames","subNamesPart","createHash","isConnectionError","wrapSqlWithCatch","errorNumberToCatch","oracleCompiler","triggerName","sequenceName","toTriggerName","toSequenceName","Trigger","dropSequenceIfExists","_dropRelatedSequenceIfExists","dropObject","objectName","errorCode","oracleColumnbuilder","incrementUtils","createAutoIncrementTriggerAndSequence","createTriggerSQL","tableQuoted","tableUnquoted","schemaQuoted","constraintOwner","sequenceNameQuoted","ColumnCompiler_Oracle","parsedPrecision","uniq","without","oracleColumncompiler","TableCompiler_Oracle","oracleTablecompiler","Client_Oracle","OutParam","OCCISTRING","oracle","oracleQuerycompiler","_addReturningToSqlAndConvert","insertDefaultsOnly","returningHelper","parameterizedValues","returningValues","subSql","outParams","parameterizedValuesWithoutDefault","DATA_DEFAULT","CHAR_COL_DECL_LENGTH","NULLABLE","_surroundQueryWithLimitAndOffset","hasLimit","endRow","BlobHelper","lobProcessing","oracledb","BLOB","CLOB","iLob","setEncoding","readStream","monkeyPatchConnection","executeAsync","commitAsync","commitResolve","commitReject","rollbackAsync","rollbackResolve","rollbackReject","fetchAsync","bindParams","outFormat","OUT_FORMAT_OBJECT","OBJECT","execute","resultSet","fetchResult","fetchRowsFromRS","numRows","getRows","closeResultSet","lobs","Readable","lob","oracledbQuerycompiler","Oracle_Compiler","outBindPrep","_prepOutbindings","outBinding","returningFragment","returningClause","intoClause","usingClause","outClause","parameterizedValuesWithoutDefaultAndBlob","paramValues","paramReturning","blobIndex","modifiedRowsCount","rowsAffected","returningSqlIn","returningSqlOrderBy","oracledbTablecompiler","nullability","ColumnCompiler_Oracledb","oracledbColumncompiler","oracledbViewcompiler","oracledbViewbuilder","debugTx","Client_Oracledb","UV_THREADPOOL_SIZE","poolMax","fetchAsString","dir","BIND_OUT","STRING","oracleDbConfig","externalAuth","connectString","prefetchRowCount","prefetchRows","stmtCacheSize","getConnection","autoCommit","outBinds","updatedObjOutBinding","updatedOutBinds","updateOutBinds","rowIds","line","bindResolver","bindRejecter","pgnative","native","redshiftQuerycompiler","_slightReturn","isReturning","redshiftColumnbuilder","ColumnCompiler_Redshift","longblob","mediumblob","tinyblob","varbinary","redshiftColumncompiler","redshiftTablecompiler","TableCompiler_PG","thiscolumns","tcb","colCompiled","redshiftCompiler","SchemaCompiler_PG","redshiftViewcompiler","Client_Redshift","redshift","getDialectByNameOrAlias","dbNameToDialectLoader","require$$10","require$$11","resolvedClientName","dialectLoader","configResolver","resolveConfig","Dialect","resolvedConfig","parsedConfig","newKnex","lib","knex_1","KnexConnector$1","Knex","setColumnAliases","aliases","columnAliases","KnexFilterParser","allowGlobalSearch","caseInsensitive","KnexConnector","FQLParser","KnexParser","toKnex","prop","elm","parseQueryString","propComplex","value_likeraw","replaceAll","value_nolikeraw","value_rawilike","value_notrawilike","field","BaseKnexDao","loadAllData","filters","sorts","parseSort","parseFilters","objectId","newObject","loadById","IUserDao","listEntidad","getEntidad","saveEntidad","put","updateEntidad","deleteEntidad","setHeader","BaseService","dao","lm","countFilteredData","st","filteredData","loadFilteredData","App$1","serverClass","clusterClass","runtime","extra","Runtime","yargs","hideBin","usage","describe","nargs","help","demand","param","choices","required","demandOption","generateKeys","serverConfig","i18n","REPL_ENABLED","startRepl","net","socket","remote","repl","prompt","terminal","preview","REPL_PORT"],"mappings":"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"}