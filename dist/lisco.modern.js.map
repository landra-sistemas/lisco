{"version":3,"file":"lisco.modern.js","sources":["../src/common/Utils.js","../src/common/I18nLoader.js","../src/common/JsonResponse.js","../src/common/TokenGenerator.js","../src/server/Server.js","../src/server/ClusterServer.js","../src/events/EventHandler.js","../src/logger/Logger.js","../src/auth/AuthController.js","../src/auth/IAuthHandler.js","../src/auth/jwt/JwtAuthHandler.js","../src/auth/cookie/CookieAuthHandler.js","../src/db/knex/KnexConnector.js","../src/db/knex/filters/KnexFilterParser.js","../src/db/knex/dao/BaseKnexDao.js","../src/db/IUserDao.js","../src/base/BaseController.js","../src/base/BaseService.js","../src/common/Runtime.js","../src/App.js"],"sourcesContent":["import crypto from 'crypto';\r\nimport util from 'util';\r\n\r\nexport default class Utils {\r\n    static arrayToLower(mcArray) {\r\n        let tmp = mcArray.join('~').toLowerCase();\r\n        return tmp.split('~');\r\n    }\r\n\r\n    static replaceAll(str, find, replace) {\r\n        return str.replace(new RegExp(find.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replace);\r\n    }\r\n\r\n    /**\r\n     * Metodo de encript para las contraseñas y demas.\r\n     * \r\n     * @param {*} text \r\n     */\r\n    static encrypt(text) {\r\n        const algorithm = 'aes-256-cbc';\r\n        const secret = Buffer.from(process.env.CRYPT_SECRET, 'hex');\r\n        const iv = Buffer.from(process.env.CRYPT_IV, 'hex');\r\n\r\n        const cipher = crypto.createCipheriv(algorithm, secret, iv);\r\n        let encrypted = cipher.update(text);\r\n        encrypted = Buffer.concat([encrypted, cipher.final()]);\r\n        return encrypted.toString('hex');\r\n    }\r\n\r\n    /**\r\n     * Metodo de decrypt para las contraseñas y demas\r\n     * @param {*} text \r\n     */\r\n    static decrypt(text) {\r\n        const algorithm = 'aes-256-cbc';\r\n        const secret = Buffer.from(process.env.CRYPT_SECRET, 'hex');\r\n        const iv = Buffer.from(process.env.CRYPT_IV, 'hex');\r\n\r\n        const encryptedText = Buffer.from(text, 'hex');\r\n\r\n        const decipher = crypto.createDecipheriv(algorithm, secret, iv);\r\n        let decrypted = decipher.update(encryptedText);\r\n        decrypted = Buffer.concat([decrypted, decipher.final()]);\r\n        return decrypted.toString();\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * Utiliza una promise para ejecutar un setTimeout y hacer un falso sleep.\r\n     * \r\n     * @param {*} ms \r\n     */\r\n    static sleep(ms) {\r\n        let promise_sleep = util.promisify(setTimeout);\r\n\r\n        return promise_sleep(ms);\r\n    }\r\n\r\n    /**\r\n     * Genera dos claves para los metodos crypt y decrypt\r\n     */\r\n    static generateKeys() {\r\n        return {\r\n            key: crypto.randomBytes(32).toString('hex'),\r\n            iv: crypto.randomBytes(16).toString('hex')\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \"aplana\" un objeto jerarquico en una estructura clave-valor.\r\n     * \r\n     * @param {*} ob \r\n     * @returns \r\n     */\r\n    static flattenObject(ob) {\r\n        let toReturn = {};\r\n        let flatObject;\r\n        for (let i in ob) {\r\n            if (!ob.hasOwnProperty(i)) {\r\n                continue;\r\n            }\r\n            //Devolver los arrays tal cual\r\n            if (ob[i] && Array === ob[i].constructor) {\r\n                toReturn[i] = ob[i];\r\n                continue;\r\n            }\r\n            if ((typeof ob[i]) === 'object') {\r\n                flatObject = Utils.flattenObject(ob[i]);\r\n                for (let x in flatObject) {\r\n                    if (!flatObject.hasOwnProperty(x)) {\r\n                        continue;\r\n                    }\r\n                    //Exclude arrays from the final result\r\n                    if (flatObject[x] && Array === flatObject.constructor) {\r\n                        continue;\r\n                    }\r\n                    toReturn[i + (!!isNaN(x) ? '.' + x : '')] = flatObject[x];\r\n                }\r\n            } else {\r\n                toReturn[i] = ob[i];\r\n            }\r\n        }\r\n        return toReturn;\r\n    }\r\n\r\n    /**\r\n     * Invierte un objeto aplanado recuperando su forma original\r\n     * \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static unflatten(data) {\r\n        var result = {}\r\n        for (var i in data) {\r\n            var keys = i.split('.')\r\n            keys.reduce(function (r, e, j) {\r\n                return r[e] || (r[e] = isNaN(Number(keys[j + 1])) ? (keys.length - 1 == j ? data[i] : {}) : [])\r\n            }, result)\r\n        }\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    static expressHandler() {\r\n\r\n        return (fn) => {\r\n            return function asyncUtilWrap(...args) {\r\n                const fnReturn = fn(...args);\r\n                const next = args[args.length - 1];\r\n                return Promise.resolve(fnReturn).catch((e) => {\r\n                    return next(e);\r\n                });\r\n            };\r\n        };\r\n    }\r\n}\r\n\r\n","import fs from \"fs\";\r\nimport util from \"util\";\r\nimport Utils from \"./Utils.js\";\r\n\r\nimport chokidar from \"chokidar\";\r\n\r\nexport default class I18nLoader {\r\n    constructor() {\r\n        this.watcher = {};\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param lang\r\n     * @param callback\r\n     */\r\n    async load(custom) {\r\n        const lang = custom || process.env.DEFAULT_LANG;\r\n\r\n        if (!this.currentData) {\r\n            this.currentData = {};\r\n        }\r\n        if (!this.currentDataFlat) {\r\n            this.currentDataFlat = {};\r\n        }\r\n\r\n        const file = process.cwd() + \"/i18n/lang_\" + lang + \".json\";\r\n\r\n        // Initialize watcher.\r\n        this.watcher[lang] = chokidar.watch(file, {\r\n            ignored: /(^|[/\\\\])\\../, // ignore dotfiles\r\n            persistent: true,\r\n        });\r\n        //Add change watcher\r\n        this.watcher[lang].on(\"change\", (path) => this.loadFile(path, lang));\r\n\r\n        //Initialize file load\r\n        await this.loadFile(file, lang);\r\n    }\r\n\r\n    /**\r\n     * Carga el archivo de traducciones.\r\n     *\r\n     * @param {*} file\r\n     * @param {*} lang\r\n     */\r\n    async loadFile(file, lang) {\r\n        const readfile = util.promisify(fs.readFile);\r\n        try {\r\n            const data = await readfile(file, \"utf8\");\r\n            var parsedData = JSON.parse(data);\r\n\r\n            this.currentDataFlat[lang] = Utils.flattenObject(parsedData);\r\n            this.currentData[lang] = parsedData;\r\n        } catch (ex) {\r\n            if (ex?.code === \"ENOENT\") {\r\n                return console.log(\"Lang file does not exist. Create it on ./i18n/lang_{xx}.json\");\r\n            }\r\n            console.error(ex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} key\r\n     */\r\n    async translate(key, lang) {\r\n        if (!lang) lang = process.env.DEFAULT_LANG;\r\n\r\n        if (this.currentDataFlat && this.currentDataFlat[lang] && this.currentDataFlat[lang][key]) {\r\n            return this.currentData[lang][key];\r\n        }\r\n\r\n        if (!this.currentDataFlat || !this.currentDataFlat[lang]) {\r\n            await this.load(lang);\r\n            if (this.currentDataFlat && this.currentDataFlat[lang] && this.currentDataFlat[key]) {\r\n                return this.currentDataFlat[lang][key];\r\n            }\r\n        }\r\n        return \"undefined.\" + key;\r\n    }\r\n}\r\n","export default class JsonResponse {\r\n    constructor(success, data, message, total) {\r\n        this.data = data;\r\n        this.success = success;\r\n        this.total = total;\r\n        this.message = message || '';\r\n    }\r\n\r\n    toJson() {\r\n        return (this);\r\n    }\r\n}\r\n","/**\r\n * Example to refresh tokens using https://github.com/auth0/node-jsonwebtoken\r\n * It was requested to be introduced at as part of the jsonwebtoken library,\r\n * since we feel it does not add too much value but it will add code to mantain\r\n * we won't include it.\r\n *\r\n * I create this gist just to help those who want to auto-refresh JWTs.\r\n */\r\nimport jsonwebtoken from 'jsonwebtoken';\r\nimport * as uuid from 'uuid';\r\n\r\nexport default class TokenGenerator {\r\n\r\n    constructor(privateKey, options) {\r\n        this.privateKey = privateKey;\r\n        this.options = options;\r\n    }\r\n\r\n    sign(payload) {\r\n        const jwtSignOptions = { ...this.options, jwtid: uuid.v4() };\r\n        return jsonwebtoken.sign(payload, this.privateKey, jwtSignOptions);\r\n    }\r\n\r\n    verify(token) {\r\n        return jsonwebtoken.verify(token, this.privateKey, this.options);\r\n    }\r\n\r\n    refresh(token) {\r\n        const payload = jsonwebtoken.verify(token, this.privateKey, this.options);\r\n        delete payload.sub;\r\n        delete payload.iss;\r\n        delete payload.aud;\r\n        delete payload.iat;\r\n        delete payload.exp;\r\n        delete payload.nbf;\r\n        delete payload.jti; //We are generating a new token, if you are using jwtid during signing, pass it in refreshOptions\r\n        const jwtSignOptions = { ...this.options, jwtid: uuid.v4() };\r\n        // The first signing converted all needed options into claims, they are already in the payload\r\n        return jsonwebtoken.sign(payload, this.privateKey, jwtSignOptions);\r\n    }\r\n}\r\n","import helmet from \"helmet\";\r\nimport express from \"express\";\r\nimport compression from \"compression\";\r\nimport cors from \"cors\";\r\nimport fileUpload from \"express-fileupload\";\r\nimport url from \"url\";\r\nimport lodash from \"lodash\";\r\nimport { JsonResponse, Utils } from \"../common/index.js\";\r\n\r\n/**\r\n * Clase servidor encargada de configurar las rutas.\r\n *\r\n * que el codigo se disperse entre diferentes proyectos.\r\n */\r\nexport default class Server {\r\n    /**\r\n     *\r\n     * @param {*} config\r\n     * @param {*} statics\r\n     * @param {*} routes\r\n     */\r\n    constructor(config, statics, routes) {\r\n        this.app = express();\r\n        this.express_config = lodash.defaultsDeep(config, {\r\n            helmet: true,\r\n            json: true,\r\n            urlencoded: true,\r\n            compression: true,\r\n            cors: { origin: true, credentials: true },\r\n            fileupload: true,\r\n            socketio: { transports: [\"websocket\"] },\r\n            traceRequests: false,\r\n        });\r\n        this.statics = statics;\r\n        this.routes = routes;\r\n    }\r\n\r\n    /**\r\n     * Inicializa el servidor\r\n     */\r\n    async initialize() {\r\n        this.config(this.express_config);\r\n        if (this.customizeExpress) {\r\n            await this.customizeExpress(this.app);\r\n        }\r\n        await this.configureRoutes(this.routes);\r\n        await this.errorHandler();\r\n    }\r\n\r\n    /**\r\n     * Funcion sobreescribible para personalizar los componentes cargados en Express\r\n     *\r\n     * Aqui se pueden poner cosas como:\r\n     *\r\n     * this.app.use(cookieParser())... etc\r\n     */\r\n    customizeExpress() {}\r\n\r\n    /**\r\n     * Se encarga de realizar la configuración inicial del servidor\r\n     *\r\n     */\r\n    config(config) {\r\n        if (config && config.helmet) {\r\n            //Security\r\n            this.app.use(helmet(config && lodash.isObject(config.helmet) && config.helmet));\r\n        }\r\n        if (config && config.json) {\r\n            //mount json form parser\r\n            this.app.use(express.json());\r\n        }\r\n\r\n        if (config && config.urlencoded) {\r\n            //mount query string parser\r\n            this.app.use(express.urlencoded({ extended: true }));\r\n        }\r\n        if (config && config.compression) {\r\n            // compress responses\r\n            this.app.use(compression());\r\n        }\r\n        if (config && config.cors) {\r\n            //Enable cors to allow external references\r\n            this.app.options(\"*\", cors(config && lodash.isObject(config.cors) && config.cors));\r\n            this.app.use(cors(config && lodash.isObject(config.cors) && config.cors));\r\n        }\r\n        if (config && config.fileupload) {\r\n            // upload middleware\r\n            this.app.use(fileUpload());\r\n        }\r\n\r\n        if (this.statics) {\r\n            //add static paths\r\n            for (const idx in this.statics) {\r\n                this.app.use(idx, express.static(this.statics[idx]));\r\n            }\r\n        }\r\n\r\n        //Logging\r\n        if (config && config.traceRequests === true && process.env.DISABLE_LOGGER != \"true\") {\r\n            this.app.use((request, response, next) => {\r\n                request.requestTime = Date.now();\r\n                response.on(\"finish\", () => {\r\n                    let pathname = url.parse(request.url).pathname;\r\n                    let end = Date.now() - request.requestTime;\r\n                    let user = (request && request.session && request.session.user_id) || \"\";\r\n\r\n                    console.debug(\"APIRequest[\" + process.pid + \"]::. [\" + request.method + \"] (user:\" + user + \")  \" + pathname + \" |-> took: \" + end + \" ms\");\r\n                    console.debug(JSON.stringify(request.body));\r\n                });\r\n                next();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Crea el cargador automatico de rutas\r\n     */\r\n    configureRoutes(routes) {\r\n        const router = express.Router();\r\n        this.app.use(router);\r\n\r\n        //create controllers\r\n        this.loadRoutes(this.app, routes);\r\n    }\r\n\r\n    /**\r\n     * Instancia la lista de rutas disponibles\r\n     * @param apps\r\n     * @returns {*}\r\n     */\r\n    loadRoutes(app, routes) {\r\n        if (!routes) return;\r\n\r\n        for (const route of routes) {\r\n            if (!route) {\r\n                console.warn(\"Empty route\");\r\n                continue;\r\n            }\r\n            let router = route.configure();\r\n\r\n            //perform autoconfig for base api crud operations\r\n            if (route.entity) {\r\n                router = route.configure(route.entity, { service: route.service, table: route.table });\r\n            }\r\n\r\n            //load shorthand routes\r\n            if (!lodash.isEmpty(route.routes)) {\r\n                const exAsync = Utils.expressHandler();\r\n                for (const path in route.routes) {\r\n                    const cfg = route.routes[path];\r\n                    for (const method in cfg) {\r\n                        const handler = cfg[method];\r\n                        if (Array.isArray(handler)) {\r\n                            //Securización (keycloak)\r\n                            router[method](path, handler[0], exAsync(handler[1]));\r\n                        } else {\r\n                            router[method](path, exAsync(handler));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (router) {\r\n                app.use(router);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Errores\r\n     */\r\n    errorHandler() {\r\n        // error handler\r\n        this.app.use((err, req, res, next) => {\r\n            let jsRes = new JsonResponse();\r\n            jsRes.success = false;\r\n            jsRes.message = err.message; //!FIXME protect error displaying in REST Responses\r\n            console.error(err);\r\n\r\n            res.status(500).json(jsRes.toJson());\r\n        });\r\n    }\r\n}\r\n","import http from \"http\";\r\nimport https from \"https\";\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nimport cluster from \"cluster\";\r\nimport { Server } from \"socket.io\";\r\nimport os from \"os\";\r\nimport { EventEmitter } from \"events\";\r\n\r\nimport ClusterMessages from \"cluster-messages\";\r\n\r\n/**\r\n * Inicializa la escucha del server en modo cluster\r\n */\r\nexport default class ClusterServer extends EventEmitter {\r\n    constructor(app) {\r\n        super();\r\n\r\n        if (!process.env.PORT) {\r\n            console.log(\"Using 3000 as default port. Customize via env PORT.\");\r\n        }\r\n        this.port = this.normalizePort(process.env.PORT || 3000);\r\n        this.clustered = process.env.CLUSTERED;\r\n        this.workers = [];\r\n        this.app = app;\r\n\r\n        this.executeOnlyMain = () => {};\r\n    }\r\n\r\n    setServerCls(cls) {\r\n        this.server = cls;\r\n    }\r\n\r\n    /**\r\n     * Iniciar el servidor en el puerto y con la configuración seleccionadas.\r\n     */\r\n    async start() {\r\n        if (this.clustered == \"true\") {\r\n            this.initClustered();\r\n        } else {\r\n            this.configureSocketIO();\r\n            this.executeOnlyMain();\r\n\r\n            await this.initUnclustered();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inicializa el servidor de socketio en el puerto siguiente al configurado.\r\n     *\r\n     * Se puede desactivar mediante la config socketio: false al realizar el App.init()\r\n     */\r\n    configureSocketIO() {\r\n        if (this.server.express_config && this.server.express_config.socketio) {\r\n            this.app.io = new Server(this.server.express_config && this.server.express_config.socketio);\r\n            this.app.io.listen(this.port + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inicializa la clase server encargada del control de las solicitudes en forma multiproceso.\r\n     *\r\n     */\r\n    async initClustered() {\r\n        //Launch cluster\r\n        if (cluster.isPrimary) {\r\n            this.configureSocketIO();\r\n\r\n            this.executeOnlyMain();\r\n\r\n            let messages = new ClusterMessages();\r\n            messages.on(\"event\", (msg, callback) => {\r\n                if (msg && msg.event) {\r\n                    if (process.env.DEBUG_EVENTS == true) {\r\n                        console.debug(`Received '${msg.event}' from ${msg.props.owner} at Master`);\r\n                    }\r\n                    //Desencadenar en el proceso principal tambien\r\n                    this.app.events.emit(msg.event, msg.props, callback);\r\n                }\r\n            });\r\n\r\n            //Count the machine's CPUs\r\n            const cpuCount = os.cpus().length;\r\n\r\n            //Create a worker for each CPU\r\n            for (let idx = 0; idx < cpuCount; idx += 1) {\r\n                this.initWorker();\r\n            }\r\n\r\n            //Listen for dying workers\r\n            cluster.on(\"exit\", (worker) => {\r\n                //Replace the dead worker, we're not sentimental\r\n                console.log(\"Worker \" + worker.id + \" died :(\");\r\n                this.initWorker();\r\n            });\r\n        } else {\r\n            await this.initUnclustered();\r\n            console.log(`Worker ${process.pid} started`);\r\n        }\r\n    }\r\n    /**\r\n     * Inicia un worker\r\n     */\r\n    initWorker() {\r\n        let worker = cluster.fork();\r\n        console.log(`Running worker ${worker.process.pid}`);\r\n\r\n        this.workers.push(worker);\r\n    }\r\n\r\n    /**\r\n     * Inicializa la clase server encargada del control de las solicitudes en un unico proceso.\r\n     *\r\n     */\r\n    async initUnclustered() {\r\n        this.server.port = this.port;\r\n        //create http server\r\n        let server = http.Server(this.server.app);\r\n\r\n        await this.server.initialize();\r\n\r\n        if (this.server.beforeListen) await this.server.beforeListen();\r\n        //listen on provided ports\r\n        server.listen(this.server.port);\r\n\r\n        if (this.server.afterListen) await this.server.afterListen();\r\n\r\n        //add error handler\r\n        server.on(\"error\", (err) => {\r\n            this.handleErrors(err, this.server.port);\r\n        });\r\n        //start listening on port\r\n        server.on(\"listening\", () => {\r\n            console.log(\"Server Worker running on port: \" + this.port + \"!\");\r\n            this.emit(\"listening\", this.port);\r\n        });\r\n\r\n        if (process.env.SSL && process.env.SSL == \"true\") {\r\n            if (!process.env.SSL_KEY || !process.env.SSL_CERT || !process.env.SSL_PASS) {\r\n                console.error(\"Invalid SSL configuration. SLL_KEY, SSL_CERT and SSL_PASS needed\");\r\n                process.exit(0);\r\n            }\r\n\r\n            var key = fs.readFileSync(path.resolve(process.cwd(), process.env.SSL_KEY || \"key.pem\"));\r\n            var cert = fs.readFileSync(path.resolve(process.cwd(), process.env.SSL_CERT || \"cert.pem\"));\r\n\r\n            var options = {\r\n                key: key,\r\n                cert: cert,\r\n                passphrase: process.env.SSL_PASS,\r\n            };\r\n\r\n            if (!process.env.SSL_PORT) {\r\n                console.log(\"Using 3443 as ssl default port. Customize via env SSL_PORT.\");\r\n            }\r\n            var sslPort = this.normalizePort(process.env.SSL_PORT || 3443);\r\n            var serverSsl = https.createServer(options, this.server.app);\r\n            serverSsl.listen(sslPort);\r\n            //add error handler\r\n            serverSsl.on(\"error\", (err) => {\r\n                this.handleErrors(err, sslPort);\r\n            });\r\n            //start listening on port\r\n            serverSsl.on(\"listening\", () => {\r\n                console.log(\"Server Worker running on port: \" + sslPort + \"!\");\r\n                this.emit(\"listening_ssl\", sslPort);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Controla los posibles errores de formato en el puerto\r\n     * @param val\r\n     * @returns {*}\r\n     */\r\n    normalizePort(val) {\r\n        let port = parseInt(val, 10);\r\n\r\n        if (isNaN(port)) {\r\n            //named pipe\r\n            return val;\r\n        }\r\n\r\n        if (port >= 0) {\r\n            //port number\r\n            return port;\r\n        }\r\n\r\n        return false;\r\n    }\r\n    /**\r\n     * Gestiona los errores en el listen del servidor\r\n     */\r\n    handleErrors(error, port) {\r\n        if (error.syscall !== \"listen\") {\r\n            throw error;\r\n        }\r\n\r\n        let bind = typeof port === \"string\" ? \"Pipe \" + port : \"Port \" + port;\r\n\r\n        //handle specific listen errors with friendly messages\r\n        switch (error.code) {\r\n            case \"EACCES\":\r\n                console.error(bind + \" requires elevated privileges\");\r\n                process.exit(1);\r\n                break;\r\n            case \"EADDRINUSE\":\r\n                console.error(bind + \" is already in use\");\r\n                process.exit(1);\r\n                break;\r\n            default:\r\n                throw error;\r\n        }\r\n    }\r\n}\r\n","import cluster from \"cluster\";\r\nimport { EventEmitter } from \"events\";\r\nimport ClusterMessages from \"cluster-messages\";\r\n\r\n/**\r\n * Clase encargada de la generacion de eventos.\r\n */\r\nexport default class EventHandler extends EventEmitter {\r\n    constructor(app) {\r\n        super();\r\n        this.messages = new ClusterMessages();\r\n\r\n        this.app = app; //Se recibe el singleton App para evitar referencias cruzadas\r\n\r\n        if (cluster.isWorker) {\r\n            // Levanto, en los worker, la escucha para recibir los eventos en broadcast de los demas hilos\r\n            this.messages.on(\"event\", (msg, callback) => {\r\n                if (msg && msg.event && process.pid !== msg.props.owner) {\r\n                    if (process.env.DEBUG_EVENTS == true) {\r\n                        console.debug(`Receiving broadcast ${msg.event} - ${process.pid}`);\r\n                    }\r\n                    super.emit(msg.event, { ...msg.props }, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sobreescribir el emitter para notificar a los hijos\r\n     *\r\n     * @param {*} evt\r\n     * @param {*} props\r\n     */\r\n    emit(evt, props, callback) {\r\n        //Desencadenar en local\r\n        super.emit(evt, props, callback);\r\n\r\n        if (evt && props && cluster.isWorker && process.pid !== props.owner) {\r\n            if (process.env.DEBUG_EVENTS == true) {\r\n                console.debug(`${evt} -> Firing from ${process.pid} to master`);\r\n            }\r\n            if (!props) {\r\n                props = {};\r\n            }\r\n            props.owner = process.pid;\r\n            this.messages.send(\"event\", { event: evt, props: { ...props } }, callback);\r\n        }\r\n\r\n        if (evt && props && cluster.isPrimary && this.app && this.app.server && this.app.server.workers) {\r\n            if (process.env.DEBUG_EVENTS == true) {\r\n                console.debug(`${evt} -> Firing from master to workers`);\r\n            }\r\n            this.messages.send(\"event\", { event: evt, props: { ...props } }, callback);\r\n        }\r\n    }\r\n}\r\n","import log4js from \"log4js\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport util from \"util\";\r\n\r\nconst { configure, getLogger } = log4js;\r\n\r\nexport default class Logger {\r\n    static async configure() {\r\n        const readfile = util.promisify(fs.readFile);\r\n\r\n        const json = await readfile(path.resolve(process.cwd(), \"./log4js.json\"), \"utf8\");\r\n\r\n        configure(JSON.parse(json));\r\n\r\n        //Nota para el futuro:\r\n        // Esto sobreescribe los metodos de console.log\r\n        // Es necesario que la sitaxis se mantenga tal cual....\r\n        (() => {\r\n            const log_logger = getLogger(\"log\");\r\n            const error_logger = getLogger(\"error\");\r\n            const debug_logger = getLogger(\"debug\");\r\n            console.log = function () {\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // log.apply(this, args);\r\n                log_logger.log(\"info\", args[0]);\r\n            };\r\n            console.error = function () {\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // error.apply(this, args);\r\n                error_logger.log(\"error\", args[0]);\r\n            };\r\n            console.info = function () {\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // info.apply(this, args);\r\n                log_logger.log(\"info\", args[0]);\r\n            };\r\n            console.debug = function () {\r\n                /*if (global.settings.debug.value) {*/\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // debug.apply(this, [args[1], args[2]]);\r\n                debug_logger.log(\"debug\", args[0]);\r\n            };\r\n\r\n            console.custom = function (logger, level, message) {\r\n                const custom_logger = getLogger(logger);\r\n                custom_logger.log(level, message);\r\n            };\r\n        })();\r\n    }\r\n}\r\n","import express from \"express\";\r\nimport url from \"url\";\r\nimport { JsonResponse, Utils } from \"../common/index.js\";\r\n\r\nimport { pathToRegexp } from \"path-to-regexp\";\r\n\r\nexport default class AuthController {\r\n    constructor(publicPathsList, AuthHandler) {\r\n        this.router = express.Router();\r\n        this.publicPathsList = [...publicPathsList, \"/login\"];\r\n\r\n        this.AuthHandler = AuthHandler;\r\n    }\r\n\r\n    configure() {\r\n        const exAsync = Utils.expressHandler();\r\n        this.router.use(exAsync((...args) => this.check(...args)));\r\n        this.router.post(\r\n            \"/login\",\r\n            exAsync((...args) => this.loginPost(...args))\r\n        );\r\n        this.router.post(\r\n            \"/logout\",\r\n            exAsync((...args) => this.logout(...args))\r\n        );\r\n\r\n        return this.router;\r\n    }\r\n\r\n    /**\r\n     * Controla que los usuarios tengan sesion para acceder a los metodos privados de la API\r\n     *\r\n     * @param {*} request\r\n     * @param {*} response\r\n     * @param {*} next\r\n     */\r\n    async check(request, response, next) {\r\n        try {\r\n            //Rutas ublicas\r\n            for (let path of this.publicPathsList) {\r\n                const expr = pathToRegexp(path);\r\n                if (expr.exec(url.parse(request.url).pathname) !== null) {\r\n                    return next();\r\n                }\r\n            }\r\n\r\n            if (await this.AuthHandler.check(request)) {\r\n                return next();\r\n            }\r\n\r\n            return response.status(403).json(new JsonResponse(false, null, \"Forbidden\").toJson());\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return response.status(403).json(new JsonResponse(false, null, \"Forbidden\").toJson());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Valida los credenciales de un usuario\r\n     *\r\n     * TODO logger console.custom(\"access\", INFO);\r\n     *\r\n     * @param {*} request\r\n     * @param {*} response\r\n     */\r\n    async loginPost(request, response) {\r\n        if (request.body.username) {\r\n            try {\r\n                let data = await this.AuthHandler.validate(request, request.body.username, request.body.password);\r\n                if (data) {\r\n                    return response.status(200).json(new JsonResponse(true, data).toJson());\r\n                }\r\n                return response.status(401).json(new JsonResponse(false, null, \"Unauthorized - Incorrect credentials\").toJson());\r\n            } catch (ex) {\r\n                console.error(ex);\r\n                return response.status(401).json(new JsonResponse(false, null, \"Unauthorized - Error, check log\").toJson());\r\n            }\r\n        }\r\n        return response.status(401).json(new JsonResponse(false, null, \"Unauthorized - Missing parameters\").toJson());\r\n    }\r\n\r\n    /**\r\n     * Cierra la sesion del usuario\r\n     *\r\n     * @param {*} request\r\n     * @param {*} response\r\n     */\r\n    async logout(request, response) {\r\n        if (this.AuthHandler.logout) {\r\n            //Depende de que el authHandler implementado pueda realizar esta accion\r\n            try {\r\n                await this.AuthHandler.logout(request);\r\n                return response.status(200).json(new JsonResponse(true).toJson());\r\n            } catch (ex) {\r\n                console.error(ex);\r\n                return response.status(500).json(new JsonResponse(false, null, ex).toJson());\r\n            }\r\n        }\r\n        return response.status(200).json(new JsonResponse(true).toJson());\r\n    }\r\n}\r\n","export default class IAuthHandler {\r\n    constructor() {\r\n        if (!this.check) {\r\n            throw new Error(\"AuthHandler must have 'check' vethod\");\r\n        }\r\n        if (!this.validate) {\r\n            throw new Error(\"AuthHandler must have 'validate' vethod\");\r\n        }\r\n        // logout method is optional\r\n    }\r\n}\r\n\r\n","import { TokenGenerator, Utils } from '../../common/index.js';\r\nimport IAuthHandler from '../IAuthHandler.js'\r\nimport lodash from 'lodash';\r\nimport moment from 'moment';\r\n\r\nexport default class JwtAuthHandler extends IAuthHandler {\r\n    constructor(UserDao) {\r\n        super();\r\n\r\n        this.tokenGenerator = new TokenGenerator(process.env.JWT_SECRET, { audience: process.env.JWT_AUDIENCE, issuer: process.env.JWT_ISSUER, subject: process.env.JWT_SUBJECT, algorithm: process.env.JWT_ALGORITHM, expiresIn: process.env.JWT_EXPIRES })\r\n\r\n        if (!UserDao) {\r\n            throw new Error(\"Need 'UserDao' for user validation. Create 'UserDao' class extending 'IUserDao'\");\r\n        }\r\n        this.userDao = UserDao;\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de realizar la comprobacion para validar si la sesion del usuario es válida\r\n     * \r\n     * @param {*} request \r\n     */\r\n    async check(request) {\r\n        if (request.headers.authorization) {\r\n            const token = (request.headers.authorization || '').split(' ')[1] || '';\r\n\r\n            if (!token) {\r\n                console.error(\"Token needed\");\r\n                return false;\r\n            }\r\n            try {\r\n                var decoded = this.tokenGenerator.verify(token);\r\n                const { sub, username, exp } = decoded;\r\n\r\n                if (!sub || !username || moment(exp).isAfter(new Date())) {\r\n                    return false;\r\n                }\r\n\r\n                //Si la sesion es valida, lo introducimos en el contexto de la solicitud\r\n                request.session = { ...request.session, ...decoded };\r\n                return true;\r\n            } catch (ex) {\r\n                console.error(ex);\r\n                return false;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Método encargado de realizar la validación de un usuario. Utiliza IUserDao como interfaz para la realización de la query a BD.\r\n     * \r\n     * @param {*} username \r\n     * @param {*} password \r\n     */\r\n    async validate(request, username, password) {\r\n\r\n        const user = await this.userDao.findByUsername(username);\r\n\r\n        if (user && user.username === username && user.password === Utils.encrypt(password)) {\r\n            return this.tokenGenerator.sign(lodash.omit(user, ['password']));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n}","import { Utils } from \"../../common/index.js\";\r\nimport IAuthHandler from \"../IAuthHandler.js\";\r\nimport lodash from \"lodash\";\r\n\r\n/**\r\n * Necesario:\r\n *  Instalar -->   express-session y algun session store\r\n * \r\n *  Mas info: https://www.npmjs.com/package/express-session\r\n * \r\n *  App.customizeExpress = () => {\r\n       this.app.use(session({\r\n            secret: 'keyboard cat',\r\n            resave: false,\r\n            saveUninitialized: true,\r\n            cookie: { secure: true }\r\n        }));\r\n    }\r\n */\r\n\r\nexport default class CookieAuthHandler extends IAuthHandler {\r\n    constructor(UserDao) {\r\n        super();\r\n\r\n        if (!UserDao) {\r\n            throw new Error(\"Need 'UserDao' for user validation. Create 'UserDao' class extending 'IUserDao'\");\r\n        }\r\n        this.userDao = UserDao;\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de realizar la comprobacion para validar si la sesion del usuario es válida\r\n     *\r\n     * @param {*} request\r\n     */\r\n    async check(request) {\r\n        if (request.headers.authorization) {\r\n            //Si se recibe por Auth Basic\r\n            const token = (request.headers.authorization || \"\").split(\" \")[1] || \"\";\r\n\r\n            const creds = Buffer.from(token, \"base64\").toString().split(\":\");\r\n            const login = creds[0];\r\n            const password = creds[1];\r\n\r\n            if (!(await this.validate(request, login, password))) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        if (request.session && request.session.username) {\r\n            //Si hay sesion almacenada\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Método encargado de realizar la validación de un usuario. Utiliza IUserDao como interfaz para la realización de la query a BD.\r\n     *\r\n     * @param {*} username\r\n     * @param {*} password\r\n     */\r\n    async validate(request, username, password) {\r\n        const user = await this.userDao.findByUsername(username);\r\n\r\n        if (user && user.username === username && user.password === Utils.encrypt(password)) {\r\n            request.session = { ...request.session, ...lodash.omit(user, [\"password\"]) };\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} request\r\n     */\r\n    logout(request) {\r\n        return new Promise((resolve) => {\r\n            if (request.session) {\r\n                request.session.destroy(resolve);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import Knex from 'knex'\r\n\r\nclass KnexConnector {\r\n\r\n\r\n    init(config) {\r\n\r\n        /**\r\n         * References the current connection of the app\r\n         * @type {Knex}\r\n         * @public\r\n         */\r\n        this.connection = Knex(config)\r\n    }\r\n\r\n    /**\r\n     * Configura de forma global los aliases de las columnas para utilizar en FQL.\r\n     * \r\n     * La estructura es \r\n     * {\r\n            \"table1\": {\r\n                \"alias1\": \"column1\",\r\n                \"alias2\": \"column2\"\r\n            },\r\n            \"table2\": {\r\n                \"alias1\": \"column1\"\r\n            }\r\n        }\r\n     *\r\n     * @param {*} aliases \r\n     */\r\n    setColumnAliases(aliases) {\r\n        this.columnAliases = aliases;\r\n    }\r\n    \r\n\r\n\r\n    test() {\r\n        return this.connection.raw('select 1+1 as result');\r\n    }\r\n}\r\n\r\n\r\nexport default new KnexConnector();","import { Utils } from \"../../../common/index.js\";\r\n\r\nimport { FQLParser, KnexParser } from \"@landra_sistemas/fql-parser\";\r\nimport KnexConnector from \"../KnexConnector.js\";\r\n\r\nexport default class KnexFilterParser {\r\n    /**\r\n     *\r\n     * @param {*} builder\r\n     * @param {*} string\r\n     * @returns\r\n     */\r\n    static parseQueryString(builder, string, tableName) {\r\n        const options = {\r\n            allowGlobalSearch: true,\r\n            caseInsensitive: true,\r\n        };\r\n        //Agregar los aliases en caso de que se hayan configurado de forma global\r\n        if (KnexConnector.columnAliases && KnexConnector.columnAliases[tableName]) {\r\n            options.aliases = KnexConnector.columnAliases[tableName];\r\n        }\r\n        //Options\r\n        if (KnexConnector.caseInsensitive !== undefined) {\r\n            options.caseInsensitive = KnexConnector.caseInsensitive;\r\n        }\r\n        if (KnexConnector.allowGlobalSearch !== undefined) {\r\n            options.allowGlobalSearch = KnexConnector.allowGlobalSearch;\r\n        }\r\n        const parser = new FQLParser(options);\r\n        const data = parser.parse(string);\r\n\r\n        return new KnexParser(tableName).toKnex(builder, data);\r\n    }\r\n\r\n    /**\r\n     * Convierte un objeto clave valor en un conjunto de filtros.\r\n     *\r\n     * - Filtro estandar:\r\n     *    filters: {\r\n     *       \"column\": \"value\" -> filtro generico exact\r\n     *    }\r\n     * - Filtro Objeto:\r\n     *    filters:{\r\n     *       \"column\": {\r\n     *       \"type\": \"date|between|exists|notexists|greater|greaterEq|less|lessEq|exact|exactI|not|null|notnull|like|likeI\"\r\n     *       \"start\": \"xxx\", //inicio de rango para el filtro de date y between\r\n     *       \"end\": \"xxx\", //fin de rango para el filtro date y between\r\n     *       \"value\": \"xxx\" //valor a utilizar para el resto de filtros\r\n     *     }\r\n     * }\r\n     *  - Filtro Lista:\r\n     *     filters: {\r\n     *       \"column\": [1, 2, 3]\r\n     *     }\r\n     *    Filtro de tipo IN, todos los elementos que coincidan\r\n     *\r\n     * - Definicion de tipos:\r\n     *    date: filtro de fechas desde y hasta\r\n     *    between: filtro entre dos valores concretos\r\n     *    exists: busca si existe la propiedad\r\n     *    notexists: busca si existe la propiedad\r\n     *    greater: mayor que\r\n     *    greaterEq: mayor o igual que\r\n     *    less: menor que\r\n     *    lessEq: menor o igual que\r\n     *    exact: valor exacto\r\n     *    exactI: valor exacto ignorando mayusculas y minusculas\r\n     *    not: distinto de\r\n     *    null: igual a null\r\n     *    notnull: distinto de null\r\n     *    like: filtro like\r\n     *    likeI: filtro like ignorando mayusculas y minusculas\r\n     */\r\n    static parseFilters(builder, filter, tableName) {\r\n        let query = builder;\r\n\r\n        for (let prop in filter) {\r\n            let elm = filter[prop];\r\n\r\n            if (typeof elm === \"object\") {\r\n                switch (elm.type) {\r\n                    case \"fql\":\r\n                        query = KnexFilterParser.parseQueryString(query, elm.value, tableName);\r\n                        break;\r\n                    case \"date\":\r\n                    case \"between\":\r\n                        if (elm.start && elm.end) {\r\n                            query = query.whereBetween(prop, [elm.start, elm.end]);\r\n                        }\r\n                        if (elm.start && !elm.end) {\r\n                            query = query.where(prop, \">=\", elm.start);\r\n                        }\r\n                        if (!elm.start && elm.end) {\r\n                            query = query.where(prop, \">=\", elm.end);\r\n                        }\r\n                        break;\r\n                    case \"dateraw\":\r\n                    case \"betweenraw\":\r\n                        if (elm.start && elm.end) {\r\n                            query = query.whereRaw(`${prop} BETWEEN ? AND ?`, [elm.start, elm.end]);\r\n                        }\r\n                        if (elm.start && !elm.end) {\r\n                            query = query.whereRaw(`${prop} >= ?`, [elm.start]);\r\n                        }\r\n                        if (!elm.start && elm.end) {\r\n                            query = query.whereRaw(`${prop} >= ?`, [elm.end]);\r\n                        }\r\n                        break;\r\n                    case \"jsonb\":\r\n                        query = query.whereRaw(`${prop} ILIKE ?`, [\"%\" + elm.value + \"%\"]);\r\n                        break;\r\n                    case \"full-text-psql\":\r\n                        query = query.whereRaw(`to_tsvector(${prop}::text) @@ to_tsquery(?)`, [elm.value]);\r\n                        break;\r\n\r\n                    case \"greater\":\r\n                    case \"greaterraw\":\r\n                        query = query.whereRaw(`${prop} > ?`, [elm.value]);\r\n                        break;\r\n                    case \"greaterEq\":\r\n                    case \"greaterEqraw\":\r\n                        query = query.whereRaw(`${prop} >= ?`, [elm.value]);\r\n                        break;\r\n                    case \"less\":\r\n                    case \"lessraw\":\r\n                        query = query.whereRaw(`${prop} < ?`, [elm.value]);\r\n                        break;\r\n                    case \"lessEq\":\r\n                    case \"lessEqraw\":\r\n                        query = query.whereRaw(`${prop} <= ?`, [elm.value]);\r\n                        break;\r\n                    case \"exists\":\r\n                        query = query.whereExists(prop);\r\n                        break;\r\n                    case \"notexists\":\r\n                        query = query.whereNotExists(prop);\r\n                        break;\r\n                    case \"exact\":\r\n                    case \"exactraw\":\r\n                        query = query.whereRaw(`${prop} = ?`, [elm.value]);\r\n                        break;\r\n                    case \"in\":\r\n                        let propComplex = prop;\r\n                        if (propComplex.includes(\",\")) {\r\n                            propComplex = prop.split(\",\");\r\n                        }\r\n                        if (!Array.isArray(elm.value) && elm.value != undefined) {\r\n                            query = query.whereIn(propComplex, elm.value.split(\",\"));\r\n                        } else {\r\n                            if (elm.value != undefined) {\r\n                                query = query.whereIn(propComplex, elm.value);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"inraw\":\r\n                        if (!Array.isArray(elm.value) && elm.value != undefined) {\r\n                            query = query.whereRaw(`${prop} IN (?)`, [\r\n                                elm.value\r\n                                    .split(\",\")\r\n                                    .map((e) => `'${e}'`)\r\n                                    .join(\",\"),\r\n                            ]);\r\n                        } else {\r\n                            if (elm.value != undefined) {\r\n                                query = query.whereRaw(`${prop} IN (?)`, [elm.value.map((e) => `'${e}'`).join(\",\")]);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"not\":\r\n                    case \"notraw\":\r\n                        query = query.whereRaw(`${prop} != ?`, [elm.value]);\r\n                        break;\r\n                    case \"like\":\r\n                    case \"likeraw\":\r\n                        let value_likeraw = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n                        query = query.whereRaw(` ${prop} LIKE ?`, [value_likeraw]);\r\n                        break;\r\n                    case \"notlike\":\r\n                    case \"notlikeraw\":\r\n                        let value_nolikeraw = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n                        query = query.whereRaw(` ${prop} NOT LIKE ?`, [value_nolikeraw]);\r\n                        break;\r\n                    case \"likeI\":\r\n                        let value_rawilike = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n                        query = query.whereRaw(` ${prop} ILIKE ?`, [value_rawilike]);\r\n                        break;\r\n                    case \"notlikeI\":\r\n                        let value_notrawilike = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n                        query = query.whereRaw(` ${prop} NOT ILIKE ?`, [value_notrawilike]);\r\n                        break;\r\n                    case \"null\":\r\n                    case \"nullraw\":\r\n                        query = query.whereRaw(`${prop} is NULL`);\r\n                        break;\r\n                    case \"notnull\":\r\n                    case \"notnullraw\":\r\n                        query = query.whereRaw(`${prop} is not NULL`);\r\n                        break;\r\n                }\r\n            } else {\r\n                //Si el valor no es un objeto se devuelve\r\n                query = query.where(prop, elm);\r\n            }\r\n        }\r\n\r\n        // console.log(query.toSQL());\r\n        return query;\r\n    }\r\n\r\n    /**\r\n     * Conversion de un objeto {property: XX, direction: ASC|DESC - ascend|descend} a un ORDER BY\r\n     *\r\n     * @param {*} sorts\r\n     */\r\n    static parseSort(sort) {\r\n        if (!sort.field || !sort.direction) {\r\n            return 1;\r\n        }\r\n\r\n        let direction = \"ASC\";\r\n        if (sort.direction === \"descend\") {\r\n            direction = \"DESC\";\r\n        }\r\n\r\n        return sort.field + \" \" + direction;\r\n    }\r\n}\r\n","import KnexFilterParser from \"../filters/KnexFilterParser.js\";\r\nimport KnexConnector from \"../KnexConnector.js\";\r\n\r\nimport lodash from \"lodash\";\r\n\r\n/**\r\n * Crear un dao con los métodos básicos\r\n */\r\nexport default class BaseKnexDao {\r\n    constructor() {\r\n        this.tableName = \"\";\r\n    }\r\n\r\n    loadAllData(start, limit) {\r\n        return KnexConnector.connection\r\n            .select(\"*\")\r\n            .from(this.tableName)\r\n            .limit(limit || 10000)\r\n            .offset(start);\r\n    }\r\n\r\n    async loadFilteredData(filters, start, limit) {\r\n        let sorts = 1;\r\n        if (filters.sort) {\r\n            sorts = KnexFilterParser.parseSort(filters.sort);\r\n        }\r\n\r\n        return KnexConnector.connection\r\n            .from(this.tableName)\r\n            .where((builder) => KnexFilterParser.parseFilters(builder, lodash.omit(filters, [\"sort\", \"start\", \"limit\"]), this.tableName))\r\n            .orderByRaw(sorts)\r\n            .limit(limit)\r\n            .offset(start);\r\n    }\r\n\r\n    async countFilteredData(filters) {\r\n        let data = await KnexConnector.connection\r\n            .from(this.tableName)\r\n            .where((builder) => KnexFilterParser.parseFilters(builder, lodash.omit(filters, [\"sort\", \"start\", \"limit\"]), this.tableName))\r\n            .count(\"id\", { as: \"total\" });\r\n\r\n        return data && data[0].total;\r\n    }\r\n\r\n    async loadById(objectId) {\r\n        const data = await KnexConnector.connection.from(this.tableName).where(\"id\", objectId);\r\n\r\n        if (data && data[0]) {\r\n            return data[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    save(object) {\r\n        return KnexConnector.connection.from(this.tableName).insert(object).returning(\"*\");\r\n    }\r\n    update(objectId, newObject) {\r\n        return KnexConnector.connection.from(this.tableName).where(\"id\", objectId).update(newObject).returning(\"*\");\r\n    }\r\n    async delete(objectId) {\r\n        const existing = await this.loadById(objectId);\r\n        if (!existing) {\r\n            throw \"NotFound\";\r\n        }\r\n        return KnexConnector.connection.from(this.tableName).where(\"id\", objectId).delete();\r\n    }\r\n}\r\n","import BaseKnexDao from \"./knex/dao/BaseKnexDao.js\";\r\n\r\nexport default class IUserDao extends BaseKnexDao {\r\n    constructor(tableName) {\r\n        super(tableName);\r\n\r\n        if (!this.findByUsername) {\r\n            throw new Error(\"AuthHandler must have 'findByUsername' method\");\r\n        }\r\n    }\r\n}\r\n","import express from \"express\";\r\nimport { JsonResponse, Utils } from \"../common/index.js\";\r\n\r\nexport class BaseController {\r\n    constructor() {\r\n        this.router = express.Router();\r\n        this.routes = {};\r\n        //Example routes shorthand\r\n        /*\r\n         {\r\n            \"/\": {\r\n                \"get\": this.listEntidad.bind(this),\r\n                \"post\": this.listEntidad.bind(this)\r\n            }\r\n         } \r\n         */\r\n    }\r\n\r\n    configure(entity, config) {\r\n        if (!entity) {\r\n            return this.router;\r\n        }\r\n\r\n        const exAsync = Utils.expressHandler();\r\n        this.router.get(\r\n            `/${entity}`,\r\n            exAsync((...args) => this.listEntidad(...args))\r\n        );\r\n        this.router.post(\r\n            `/${entity}/list`,\r\n            exAsync((...args) => this.listEntidad(...args))\r\n        );\r\n        this.router.get(\r\n            `/${entity}/:id`,\r\n            exAsync((...args) => this.getEntidad(...args))\r\n        );\r\n        this.router.post(\r\n            `/${entity}`,\r\n            exAsync((...args) => this.saveEntidad(...args))\r\n        );\r\n        this.router.put(\r\n            `/${entity}/:id`,\r\n            exAsync((...args) => this.updateEntidad(...args))\r\n        );\r\n        this.router.delete(\r\n            `/${entity}/:id`,\r\n            exAsync((...args) => this.deleteEntidad(...args))\r\n        );\r\n\r\n        this.service = config.service;\r\n        this.table = config.table;\r\n\r\n        return this.router;\r\n    }\r\n\r\n    /**\r\n     * Lista entidades en la aplicacion, es posible enviarle parametros de filtrado.\r\n     *\r\n     *\r\n     * @api {post} /:entidad/list Listar entidades\r\n     * @apiName Listar entidades\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async listEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n            let filters = request.method === \"POST\" ? request.body : request.query && request.query.filters ? JSON.parse(request.query.filters) : {};\r\n\r\n            let data = await service.list(filters, filters.start, filters.limit);\r\n            let jsRes = new JsonResponse(true, data.data, null, data.total);\r\n\r\n            response.json(jsRes.toJson());\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    }\r\n    /**\r\n     *Obtiene un elemento concreto mediante su identificador\r\n     *\r\n     *\r\n     * @api {get} /:entidad/:id Obtener entidad\r\n     * @apiName Obtener entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async getEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n            let data = await service.loadById(request.params.id);\r\n            let jsRes = new JsonResponse(true, data);\r\n            let code = 200;\r\n            if (data == null) {\r\n                code = 404;\r\n                let message = \"Element not found\";\r\n                jsRes = new JsonResponse(false, null, message, 0);\r\n            }\r\n\r\n            response.status(code).json(jsRes.toJson());\r\n        } catch (e) {\r\n            console.error(e);\r\n            let message = \"\";\r\n            if (e.code == \"22P02\") {\r\n                //PostgreSQL error Code form string_to_UUID\r\n                message = \"Expected uiid\";\r\n            }\r\n            let jsRes = new JsonResponse(false, null, message, 0);\r\n            response.status(400).json(jsRes.toJson());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Almacena un elemento en BD\r\n     *\r\n     *\r\n     * @api {post} /:entidad/:id Crear entidad\r\n     * @apiName Crear entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async saveEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n\r\n            let data = await service.save(request.body);\r\n            let jsRes = new JsonResponse(true, (data && data[0]) || { id: request.body.id });\r\n\r\n            response.setHeader(\"Location\", `/entity/${jsRes.data.id}`);\r\n            response.status(201).json(jsRes.toJson());\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Almacena un elemento en BD\r\n     *\r\n     *\r\n     * @api {put} /:entidad/:id Actualizar entidad\r\n     * @apiName Actualizar entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async updateEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n\r\n            let data = await service.update(request.params.id, request.body);\r\n            let jsRes = new JsonResponse(true, (data && data[0]) || { id: request.body.id });\r\n\r\n            response.json(jsRes.toJson());\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Elimina un elemento correspondiente al identificador recibido\r\n     *\r\n     *\r\n     * @api {delete} /:entidad/:id/delete Delete entidad\r\n     * @apiName Eliminar entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async deleteEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n            let data = await service.delete(request.params.id);\r\n            let jsRes = new JsonResponse(true, data);\r\n\r\n            response.status(204).json(jsRes.toJson());\r\n        } catch (e) {\r\n            console.error(e);\r\n            if (e == \"NotFound\") {\r\n                let message = \"Element not found\";\r\n                let jsRes = new JsonResponse(false, null, message, 0);\r\n                response.status(404).json(jsRes.toJson());\r\n            } else {\r\n                next(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { BaseKnexDao } from \"../db/index.js\";\r\n\r\nexport class BaseService {\r\n    constructor(cls, table) {\r\n        if (cls) {\r\n            this.dao = new cls();\r\n        } else {\r\n            this.dao = new BaseKnexDao(); //El sistema por defecto utiliza knex, si se pasa un dao personalizado se puede sobreescribir este comportamiento\r\n        }\r\n        if (table) {\r\n            this.dao.tableName = table;\r\n        }\r\n    }\r\n    /**\r\n     * Obtencion de una lista de elementos.\r\n     *\r\n     * filters, es opcional. Si no se pasan se devuelve lo que hay ;\r\n     */\r\n    async list(filters, start, limit) {\r\n        //Pagination\r\n        const st = start || 0;\r\n        const lm = limit || 1000; //Default limit\r\n\r\n        let response = {};\r\n        response.total = await this.dao.countFilteredData(filters, st, lm);\r\n\r\n        if (filters && Object.keys(filters).length !== 0) {\r\n            let filteredData = await this.dao.loadFilteredData(filters, st, lm);\r\n            response.data = filteredData;\r\n            return response;\r\n        }\r\n\r\n        response.data = await this.dao.loadAllData(start, limit);\r\n        return response;\r\n    }\r\n\r\n    /**\r\n     * Obtencion de un elemento mediante su identificador\r\n     */\r\n    loadById(id) {\r\n        return this.dao.loadById(id);\r\n    }\r\n    /**\r\n     * Metodo de creacion.\r\n     *\r\n     * Si el identificador se pasa como undefined se creara un nuevo elemento,\r\n     * sino se modifica el correspondiente.\r\n     */\r\n    save(data) {\r\n        //Create\r\n        return this.dao.save(data);\r\n    }\r\n    /**\r\n     * Metodo de creacion.\r\n     *\r\n     * Si el identificador se pasa como undefined se creara un nuevo elemento,\r\n     * sino se modifica el correspondiente.\r\n     */\r\n    update(id, data) {\r\n        if (id) {\r\n            //Update\r\n            return this.dao.update(id, data);\r\n        }\r\n    }\r\n    /**\r\n     * Metodo de eliminado.\r\n     *\r\n     * El identificador es obligatorio para poder localizar el elemento a eliminar.\r\n     */\r\n    delete(id) {\r\n        if (id) {\r\n            return this.dao.delete(id);\r\n        }\r\n    }\r\n}\r\n","import Utils from \"./Utils.js\";\r\n\r\nimport yargs from \"yargs/yargs\";\r\nimport { hideBin } from \"yargs/helpers\";\r\n\r\n/**\r\n * Extra puede ser un array de objetos con la siguiente estructura:\r\n *\r\n * {\r\n *  \"key\": \"c\",\r\n *  \"alias\": \"config\",\r\n *  \"describe\": \"Configuración\",\r\n *  \"fn\": function(argv) { },\r\n *  \"nargs\": 0,\r\n *  \"required\": true\r\n * }\r\n * @param {*} extra\r\n * @returns\r\n */\r\nexport default async function Runtime(extra) {\r\n    const cfg = yargs(hideBin(process.argv))\r\n        .usage(\r\n            `Como usar: \r\n            node $0 [options] \r\n            \r\n            ** Si no se especifican parámetros el servidor arrancará normalmente. **`\r\n        )\r\n        .alias(\"g\", \"generateKeys\")\r\n        .describe(\"g\", \"Genera unas claves para la aplicación\")\r\n        .alias(\"c\", \"encrypt\")\r\n        .describe(\"c\", \"Codifica el String proporcionado en base a la contraseña de .env\")\r\n        .nargs(\"c\", 1)\r\n        .help(\"h\")\r\n        .alias(\"h\", \"help\");\r\n\r\n    let demand = [];\r\n    if (extra) {\r\n        for (const param of extra) {\r\n            cfg.alias(param.key, param.alias);\r\n            if (param.describe) {\r\n                cfg.describe(param.key, param.describe);\r\n            }\r\n            if (param.nargs !== 0) {\r\n                cfg.nargs(param.key, param.nargs);\r\n            }\r\n            if (param.boolean) {\r\n                cfg.boolean(param.key);\r\n            }\r\n            if (param.choices) {\r\n                cfg.choices(param.key, param.choices);\r\n            }\r\n            if (param.required) {\r\n                demand.push(param.key);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (demand.length !== 0) {\r\n        cfg.demandOption(demand);\r\n    }\r\n\r\n    const argv = cfg.argv;\r\n    //Parámetro para no arrancar el servidor y generar las claves JWT\r\n    if (argv.generateKeys) {\r\n        console.log(\"Generando claves para encriptación:\");\r\n        console.log(Utils.generateKeys());\r\n        return process.exit(1);\r\n    }\r\n\r\n    if (argv.encrypt) {\r\n        console.log(\"Resultado encryptación:\");\r\n        console.log(Utils.encrypt(argv.encrypt));\r\n        return process.exit(1);\r\n    }\r\n\r\n    if (extra) {\r\n        for (const param of extra) {\r\n            if (argv[param.key]) {\r\n                await param.fn(argv);\r\n                return process.exit(1);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { I18nLoader, Utils } from \"./common/index.js\";\r\nimport { EventHandler } from \"./events/index.js\";\r\nimport { ClusterServer, Server } from \"./server/index.js\";\r\nimport { Logger } from \"./logger/index.js\";\r\n\r\nimport net from \"net\";\r\nimport repl from \"repl\";\r\nimport { KnexConnector } from \"./db/index.js\";\r\nimport Runtime from \"./common/Runtime.js\";\r\n\r\nclass App {\r\n    constructor() {\r\n        this.serverClass = Server;\r\n        this.clusterClass = ClusterServer;\r\n    }\r\n\r\n    /**\r\n     * Inicializa la runtime de la aplicación para poder recibir parámetros por consola y generar claves.\r\n     * @returns\r\n     */\r\n    runtime(extra) {\r\n        return Runtime(extra);\r\n    }\r\n\r\n    /**\r\n     * Initializa las configuraciones para la app\r\n     *\r\n     */\r\n    async init(serverConfig) {\r\n        if (process.env.DISABLE_LOGGER != \"true\") {\r\n            await Logger.configure();\r\n        }\r\n\r\n        //Instanciar la clase server\r\n        const server = new this.serverClass(serverConfig, this.statics, this.routes);\r\n        if (this.customizeExpress) {\r\n            server.customizeExpress = this.customizeExpress;\r\n        }\r\n        if (this.beforeListen) {\r\n            server.beforeListen = this.beforeListen;\r\n        }\r\n        if (this.afterListen) {\r\n            server.afterListen = this.afterListen;\r\n        }\r\n\r\n        /**\r\n         * Gestor de eventos\r\n         * @type {EventHandler}\r\n         * @public\r\n         */\r\n        this.events = new EventHandler(this);\r\n\r\n        /**\r\n         * Gestor de traducciones\r\n         * @type {I18nLoader}\r\n         * @public\r\n         */\r\n        this.i18n = new I18nLoader();\r\n        await this.i18n.load();\r\n        /**\r\n         * Servidor actual\r\n         * @type {ClusterServer}\r\n         * @public\r\n         */\r\n        this.server = new this.clusterClass(this);\r\n\r\n        this.server.setServerCls(server);\r\n        this.server.executeOnlyMain = () => {\r\n            if (this.executeOnlyMain) this.executeOnlyMain();\r\n\r\n            if (process.env.REPL_ENABLED == \"true\") {\r\n                this.startRepl();\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Ejecuta el servidor con la configuracion de #init()\r\n     */\r\n    async start() {\r\n        if (!this.server) {\r\n            throw new Error(\"Call init first\");\r\n        }\r\n        await this.server.start();\r\n    }\r\n\r\n    /**\r\n     * Inicia el server replify para poder conectar terminales remotas\r\n     *\r\n     *\r\n     * Para que arranque es necesario especificar REPL_ENABLED en el archivo .env\r\n     */\r\n    startRepl() {\r\n        try {\r\n            net.createServer((socket) => {\r\n                const remote = repl.start({\r\n                    prompt: \"lisco::remote> \",\r\n                    input: socket,\r\n                    output: socket,\r\n                    terminal: true,\r\n                    useColors: true,\r\n                    preview: false,\r\n                });\r\n                remote.context.app = this;\r\n                remote.context.Utils = Utils;\r\n                remote.context.db = KnexConnector.connection;\r\n                remote.on(\"exit\", socket.end.bind(socket));\r\n            }).listen(process.env.REPL_PORT || 5001);\r\n        } catch (e) {\r\n            console.log(\"Remote REPL Conn: \" + e);\r\n        }\r\n\r\n        console.log(`Remote REPL started on port ${process.env.REPL_PORT || 5001}`);\r\n    }\r\n}\r\n\r\nexport default new App();\r\n"],"names":["Utils","arrayToLower","mcArray","tmp","join","toLowerCase","split","replaceAll","str","find","replace","RegExp","encrypt","text","algorithm","secret","Buffer","from","process","env","CRYPT_SECRET","iv","CRYPT_IV","cipher","crypto","createCipheriv","encrypted","update","concat","final","toString","decrypt","encryptedText","decipher","createDecipheriv","decrypted","sleep","ms","promise_sleep","util","promisify","setTimeout","generateKeys","key","randomBytes","flattenObject","ob","toReturn","flatObject","i","hasOwnProperty","Array","constructor","x","isNaN","unflatten","data","result","keys","reduce","r","e","j","Number","length","expressHandler","fn","asyncUtilWrap","args","fnReturn","next","Promise","resolve","catch","I18nLoader","watcher","load","custom","lang","DEFAULT_LANG","currentData","currentDataFlat","file","cwd","chokidar","watch","ignored","persistent","on","path","loadFile","readfile","fs","readFile","parsedData","JSON","parse","ex","code","console","log","error","translate","JsonResponse","success","message","total","toJson","TokenGenerator","privateKey","options","sign","payload","jwtSignOptions","jwtid","uuid","v4","jsonwebtoken","verify","token","refresh","sub","iss","aud","iat","exp","nbf","jti","Server","config","statics","routes","app","express","express_config","lodash","defaultsDeep","helmet","json","urlencoded","compression","cors","origin","credentials","fileupload","socketio","transports","traceRequests","initialize","customizeExpress","configureRoutes","errorHandler","use","isObject","extended","fileUpload","idx","static","DISABLE_LOGGER","request","response","requestTime","Date","now","pathname","url","end","user","session","user_id","debug","pid","method","stringify","body","router","Router","loadRoutes","route","warn","configure","entity","service","table","isEmpty","exAsync","cfg","handler","isArray","err","req","res","jsRes","status","ClusterServer","EventEmitter","PORT","port","normalizePort","clustered","CLUSTERED","workers","executeOnlyMain","setServerCls","cls","server","start","initClustered","configureSocketIO","initUnclustered","io","listen","cluster","isPrimary","messages","ClusterMessages","msg","callback","event","DEBUG_EVENTS","props","owner","events","emit","cpuCount","os","cpus","initWorker","worker","id","fork","push","http","beforeListen","afterListen","handleErrors","SSL","SSL_KEY","SSL_CERT","SSL_PASS","exit","readFileSync","cert","passphrase","SSL_PORT","sslPort","serverSsl","https","createServer","val","parseInt","syscall","bind","EventHandler","isWorker","evt","send","getLogger","log4js","Logger","log_logger","error_logger","debug_logger","prototype","slice","call","arguments","info","logger","level","custom_logger","AuthController","publicPathsList","AuthHandler","check","post","loginPost","logout","expr","pathToRegexp","exec","username","validate","password","IAuthHandler","Error","JwtAuthHandler","UserDao","tokenGenerator","JWT_SECRET","audience","JWT_AUDIENCE","issuer","JWT_ISSUER","subject","JWT_SUBJECT","JWT_ALGORITHM","expiresIn","JWT_EXPIRES","userDao","headers","authorization","decoded","moment","isAfter","findByUsername","omit","CookieAuthHandler","creds","login","destroy","KnexConnector","init","connection","Knex","setColumnAliases","aliases","columnAliases","test","raw","KnexFilterParser","parseQueryString","builder","string","tableName","allowGlobalSearch","caseInsensitive","undefined","parser","FQLParser","KnexParser","toKnex","parseFilters","filter","query","prop","elm","type","value","whereBetween","where","whereRaw","whereExists","whereNotExists","propComplex","includes","whereIn","map","value_likeraw","value_nolikeraw","value_rawilike","value_notrawilike","parseSort","sort","field","direction","BaseKnexDao","loadAllData","limit","select","offset","loadFilteredData","filters","sorts","orderByRaw","countFilteredData","count","as","loadById","objectId","save","object","insert","returning","newObject","delete","existing","IUserDao","BaseController","get","listEntidad","getEntidad","saveEntidad","put","updateEntidad","deleteEntidad","list","params","setHeader","BaseService","dao","st","lm","Object","filteredData","Runtime","extra","yargs","hideBin","argv","usage","alias","describe","nargs","help","demand","param","boolean","choices","required","demandOption","App","serverClass","clusterClass","runtime","serverConfig","i18n","REPL_ENABLED","startRepl","net","socket","remote","repl","prompt","input","output","terminal","useColors","preview","context","db","REPL_PORT"],"mappings":"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"}