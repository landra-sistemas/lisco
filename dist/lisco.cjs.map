{"version":3,"file":"lisco.cjs","sources":["../src/common/Utils.js","../src/common/I18nLoader.js","../src/common/JsonResponse.js","../src/common/TokenGenerator.js","../src/server/Server.js","../node_modules/uuid4/index.js","../node_modules/cluster-messages/index.js","../src/server/ClusterServer.js","../src/events/EventHandler.js","../src/logger/Logger.js","../src/auth/AuthController.js","../src/auth/IAuthHandler.js","../src/auth/jwt/JwtAuthHandler.js","../src/auth/cookie/CookieAuthHandler.js","../node_modules/xregexp/src/xregexp.js","../node_modules/xregexp/src/addons/build.js","../node_modules/xregexp/src/addons/matchrecursive.js","../node_modules/xregexp/src/addons/unicode-base.js","../node_modules/xregexp/tools/output/categories.js","../node_modules/xregexp/src/addons/unicode-categories.js","../node_modules/xregexp/tools/output/properties.js","../node_modules/xregexp/src/addons/unicode-properties.js","../node_modules/xregexp/tools/output/scripts.js","../node_modules/xregexp/src/addons/unicode-scripts.js","../node_modules/xregexp/src/index.js","../node_modules/@landra_sistemas/fql-parser/dist/parser.modern.js","../src/db/knex/filters/KnexFilterParser.js","../src/db/knex/KnexConnector.js","../src/db/knex/dao/BaseKnexDao.js","../src/db/IUserDao.js","../src/base/BaseController.js","../src/base/BaseService.js","../src/App.js"],"sourcesContent":["import crypto from 'crypto';\r\nimport util from 'util';\r\n\r\nexport default class Utils {\r\n    static arrayToLower(mcArray) {\r\n        let tmp = mcArray.join('~').toLowerCase();\r\n        return tmp.split('~');\r\n    }\r\n\r\n    static replaceAll(str, find, replace) {\r\n        return str.replace(new RegExp(find.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replace);\r\n    }\r\n\r\n    /**\r\n     * Metodo de encript para las contraseñas y demas.\r\n     * \r\n     * @param {*} text \r\n     */\r\n    static encrypt(text) {\r\n        const algorithm = 'aes-256-cbc';\r\n        const secret = Buffer.from(process.env.CRYPT_SECRET, 'hex');\r\n        const iv = Buffer.from(process.env.CRYPT_IV, 'hex');\r\n\r\n        const cipher = crypto.createCipheriv(algorithm, secret, iv);\r\n        let encrypted = cipher.update(text);\r\n        encrypted = Buffer.concat([encrypted, cipher.final()]);\r\n        return encrypted.toString('hex');\r\n    }\r\n\r\n    /**\r\n     * Metodo de decrypt para las contraseñas y demas\r\n     * @param {*} text \r\n     */\r\n    static decrypt(text) {\r\n        const algorithm = 'aes-256-cbc';\r\n        const secret = Buffer.from(process.env.CRYPT_SECRET, 'hex');\r\n        const iv = Buffer.from(process.env.CRYPT_IV, 'hex');\r\n\r\n        const encryptedText = Buffer.from(text, 'hex');\r\n\r\n        const decipher = crypto.createDecipheriv(algorithm, secret, iv);\r\n        let decrypted = decipher.update(encryptedText);\r\n        decrypted = Buffer.concat([decrypted, decipher.final()]);\r\n        return decrypted.toString();\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * Utiliza una promise para ejecutar un setTimeout y hacer un falso sleep.\r\n     * \r\n     * @param {*} ms \r\n     */\r\n    static sleep(ms) {\r\n        let promise_sleep = util.promisify(setTimeout);\r\n\r\n        return promise_sleep(ms);\r\n    }\r\n\r\n    /**\r\n     * Genera dos claves para los metodos crypt y decrypt\r\n     */\r\n    static generateKeys() {\r\n        return {\r\n            key: crypto.randomBytes(32).toString('hex'),\r\n            iv: crypto.randomBytes(16).toString('hex')\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \"aplana\" un objeto jerarquico en una estructura clave-valor.\r\n     * \r\n     * @param {*} ob \r\n     * @returns \r\n     */\r\n    static flattenObject(ob) {\r\n        let toReturn = {};\r\n        let flatObject;\r\n        for (let i in ob) {\r\n            if (!ob.hasOwnProperty(i)) {\r\n                continue;\r\n            }\r\n            //Devolver los arrays tal cual\r\n            if (ob[i] && Array === ob[i].constructor) {\r\n                toReturn[i] = ob[i];\r\n                continue;\r\n            }\r\n            if ((typeof ob[i]) === 'object') {\r\n                flatObject = Utils.flattenObject(ob[i]);\r\n                for (let x in flatObject) {\r\n                    if (!flatObject.hasOwnProperty(x)) {\r\n                        continue;\r\n                    }\r\n                    //Exclude arrays from the final result\r\n                    if (flatObject[x] && Array === flatObject.constructor) {\r\n                        continue;\r\n                    }\r\n                    toReturn[i + (!!isNaN(x) ? '.' + x : '')] = flatObject[x];\r\n                }\r\n            } else {\r\n                toReturn[i] = ob[i];\r\n            }\r\n        }\r\n        return toReturn;\r\n    }\r\n\r\n    /**\r\n     * Invierte un objeto aplanado recuperando su forma original\r\n     * \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static unflatten(data) {\r\n        var result = {}\r\n        for (var i in data) {\r\n            var keys = i.split('.')\r\n            keys.reduce(function (r, e, j) {\r\n                return r[e] || (r[e] = isNaN(Number(keys[j + 1])) ? (keys.length - 1 == j ? data[i] : {}) : [])\r\n            }, result)\r\n        }\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    static expressHandler() {\r\n\r\n        return (fn) => {\r\n            return function asyncUtilWrap(...args) {\r\n                const fnReturn = fn(...args);\r\n                const next = args[args.length - 1];\r\n                return Promise.resolve(fnReturn).catch((e) => {\r\n                    return next(e);\r\n                });\r\n            };\r\n        };\r\n    }\r\n}\r\n\r\n","import fs from 'fs';\r\nimport path from 'path';\r\nimport util from 'util';\r\nimport Utils from './Utils';\r\n\r\nexport default class I18nLoader {\r\n\r\n    /**\r\n     *\r\n     * @param lang\r\n     * @param callback\r\n     */\r\n    async load(custom) {\r\n        const readfile = util.promisify(fs.readFile);\r\n        const lang = custom || process.env.DEFAULT_LANG;\r\n\r\n        if (!this.currentData) {\r\n            this.currentData = {};\r\n        }\r\n        if (!this.currentDataFlat) {\r\n            this.currentDataFlat = {};\r\n        }\r\n        //TODO mejorar el sistema cargando todas las traducciones del directorio i18n con chokidar esperando modificaciones\r\n\r\n        let file = path.resolve(process.cwd(), \"i18n/lang_\" + lang + \".json\")\r\n        try {\r\n            const data = await readfile(file, 'utf8');\r\n            var parsedData = JSON.parse(data);\r\n\r\n            this.currentDataFlat[lang] = Utils.flattenObject(parsedData);\r\n            this.currentData[lang] = parsedData;\r\n        } catch (ex) {\r\n            console.log(\"Lang file does not exist. Create it on ./i18n/lang_{xx}.json\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} key \r\n     */\r\n    async translate(key, lang) {\r\n        if (!lang) lang = process.env.DEFAULT_LANG\r\n\r\n        if (this.currentDataFlat && this.currentDataFlat[lang] && this.currentDataFlat[lang][key]) {\r\n            return this.currentData[lang][key]\r\n        }\r\n\r\n        if (!this.currentDataFlat || !this.currentDataFlat[lang]) {\r\n            await this.load(lang);\r\n            if (this.currentDataFlat && this.currentDataFlat[lang] && this.currentDataFlat[key]) {\r\n                return this.currentDataFlat[lang][key]\r\n            }\r\n        }\r\n        return \"undefined.\" + key;\r\n    }\r\n}\r\n\r\n","export default class JsonResponse {\r\n    constructor(success, data, message, total) {\r\n        this.data = data;\r\n        this.success = success;\r\n        this.total = total;\r\n        this.message = message || '';\r\n    }\r\n\r\n    toJson() {\r\n        return (this);\r\n    }\r\n}\r\n","/**\r\n * Example to refresh tokens using https://github.com/auth0/node-jsonwebtoken\r\n * It was requested to be introduced at as part of the jsonwebtoken library,\r\n * since we feel it does not add too much value but it will add code to mantain\r\n * we won't include it.\r\n *\r\n * I create this gist just to help those who want to auto-refresh JWTs.\r\n */\r\nimport jsonwebtoken from 'jsonwebtoken';\r\nimport * as uuid from 'uuid';\r\n\r\nexport default class TokenGenerator {\r\n\r\n    constructor(privateKey, options) {\r\n        this.privateKey = privateKey;\r\n        this.options = options;\r\n    }\r\n\r\n    sign(payload) {\r\n        const jwtSignOptions = { ...this.options, jwtid: uuid.v4() };\r\n        return jsonwebtoken.sign(payload, this.privateKey, jwtSignOptions);\r\n    }\r\n\r\n    verify(token) {\r\n        return jsonwebtoken.verify(token, this.privateKey, this.options);\r\n    }\r\n\r\n    refresh(token) {\r\n        const payload = jsonwebtoken.verify(token, this.privateKey, this.options);\r\n        delete payload.sub;\r\n        delete payload.iss;\r\n        delete payload.aud;\r\n        delete payload.iat;\r\n        delete payload.exp;\r\n        delete payload.nbf;\r\n        delete payload.jti; //We are generating a new token, if you are using jwtid during signing, pass it in refreshOptions\r\n        const jwtSignOptions = { ...this.options, jwtid: uuid.v4() };\r\n        // The first signing converted all needed options into claims, they are already in the payload\r\n        return jsonwebtoken.sign(payload, this.privateKey, jwtSignOptions);\r\n    }\r\n}\r\n","import helmet from 'helmet';\r\nimport express from 'express';\r\nimport compression from 'compression';\r\nimport cors from 'cors';\r\nimport fileUpload from 'express-fileupload';\r\nimport url from 'url';\r\nimport lodash from 'lodash';\r\nimport { JsonResponse } from '../common';\r\n\r\n\r\n/**\r\n * Clase servidor encargada de configurar las rutas.\r\n *\r\n * que el codigo se disperse entre diferentes proyectos.\r\n */\r\nexport default class Server {\r\n\r\n    /**\r\n     * \r\n     * @param {*} config \r\n     * @param {*} statics \r\n     * @param {*} routes \r\n     */\r\n    constructor(config, statics, routes) {\r\n        this.app = express();\r\n        this.express_config = lodash.defaultsDeep(config, {\r\n            helmet: true,\r\n            json: true,\r\n            urlencoded: true,\r\n            compression: true,\r\n            cors: { origin: true, credentials: true },\r\n            fileupload: true,\r\n            socketio: { transports: [\"websocket\"] },\r\n            traceRequests: false\r\n        });\r\n        this.statics = statics;\r\n        this.routes = routes;\r\n    }\r\n\r\n\r\n    /**\r\n     * Inicializa el servidor\r\n     */\r\n    async initialize() {\r\n        this.config(this.express_config);\r\n        if (this.customizeExpress) {\r\n            await this.customizeExpress(this.app)\r\n        }\r\n        this.configureRoutes(this.routes);\r\n        this.errorHandler();\r\n    }\r\n\r\n    /**\r\n     * Funcion sobreescribible para personalizar los componentes cargados en Express\r\n     * \r\n     * Aqui se pueden poner cosas como:\r\n     * \r\n     * this.app.use(cookieParser())... etc\r\n     */\r\n    customizeExpress() { }\r\n\r\n    /**\r\n     * Se encarga de realizar la configuración inicial del servidor\r\n     * \r\n     */\r\n    config(config) {\r\n\r\n        if (config && config.helmet) {\r\n            //Security\r\n            this.app.use(helmet(config && lodash.isObject(config.helmet) && config.helmet));\r\n        }\r\n        if (config && config.json) {\r\n            //mount json form parser\r\n            this.app.use(express.json());\r\n        }\r\n\r\n        if (config && config.urlencoded) {\r\n            //mount query string parser\r\n            this.app.use(express.urlencoded({ extended: true }));\r\n        }\r\n        if (config && config.compression) {\r\n            // compress responses\r\n            this.app.use(compression());\r\n        }\r\n        if (config && config.cors) {\r\n            //Enable cors to allow external references\r\n            this.app.options('*', cors(config && lodash.isObject(config.cors) && config.cors));\r\n            this.app.use(cors(config && lodash.isObject(config.cors) && config.cors));\r\n        }\r\n        if (config && config.fileupload) {\r\n            // upload middleware\r\n            this.app.use(fileUpload());\r\n        }\r\n\r\n        if (this.statics) {\r\n            //add static paths\r\n            for (const idx in this.statics) {\r\n                this.app.use(idx, express.static(this.statics[idx]));\r\n            }\r\n        }\r\n\r\n        //Logging\r\n        if ((config && config.traceRequests === true) && process.env.DISABLE_LOGGER != \"true\") {\r\n            this.app.use((request, response, next) => {\r\n                request.requestTime = Date.now();\r\n                response.on(\"finish\", () => {\r\n                    let pathname = url.parse(request.url).pathname;\r\n                    let end = Date.now() - request.requestTime;\r\n                    let user = (request && request.session && request.session.user_id) || \"\";\r\n\r\n                    console.debug('APIRequest[' + process.pid + ']::. [' + request.method + '] (user:' + user + ')  ' + pathname + ' |-> took: ' + end + ' ms');\r\n                    console.debug(JSON.stringify(request.body));\r\n                });\r\n                next();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Crea el cargador automatico de rutas\r\n     */\r\n    configureRoutes(routes) {\r\n        const router = express.Router();\r\n        this.app.use(router);\r\n\r\n        //create controllers\r\n        this.loadRoutes(this.app, routes)\r\n    }\r\n\r\n    /**\r\n     * Instancia la lista de rutas disponibles\r\n     * @param apps\r\n     * @returns {*}\r\n     */\r\n    loadRoutes(app, routes) {\r\n        if (!routes) return;\r\n\r\n        for (const route of routes) {\r\n            if (!route) continue;\r\n            //TODO -> FIXME traze if null?\r\n            const router = route.configure();\r\n            if (router) {\r\n                app.use(router);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Errores\r\n     */\r\n    errorHandler() {\r\n        // error handler\r\n        this.app.use((err, req, res, next) => {\r\n            let jsRes = new JsonResponse();\r\n            jsRes.success = false;\r\n            jsRes.message = err.message; //!FIXME protect error displaying in REST Responses\r\n            console.error(err);\r\n\r\n            res.status(500).json(jsRes.toJson());\r\n        });\r\n    }\r\n}\r\n","\"use strict\";\n\nvar crypto = require(\"crypto\"),\n  uuidPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n\nexports = module.exports = genUUID;\nexports.valid = isUUID;\n\nfunction genUUID(callback) {\n  if (typeof callback !== \"function\") {\n    var rnd = crypto.randomBytes(16);\n    rnd[6] = (rnd[6] & 0x0f) | 0x40;\n    rnd[8] = (rnd[8] & 0x3f) | 0x80;\n    rnd = rnd.toString(\"hex\").match(/(.{8})(.{4})(.{4})(.{4})(.{12})/);\n    rnd.shift();\n    return rnd.join(\"-\");\n  }\n  crypto.randomBytes(16, function(err, rnd) {\n    if (err) return callback(err);\n    try {\n      rnd[6] = (rnd[6] & 0x0f) | 0x40;\n      rnd[8] = (rnd[8] & 0x3f) | 0x80;\n      rnd = rnd.toString(\"hex\").match(/(.{8})(.{4})(.{4})(.{4})(.{12})/);\n      rnd.shift();\n      return callback(null, rnd.join(\"-\"));\n    } catch (err2) {\n      return callback(err2);\n    }\n  });\n}\n\nfunction isUUID(uuid) {\n  return uuidPattern.test(uuid);\n}\n","const cluster = require('cluster');\r\nconst uuid = require('uuid4');\r\n\r\nconst has = Object.prototype.hasOwnProperty;\r\n\r\nclass ClusterMessages {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n\r\n    this.metaKey = this.options.metaKey || '__meta__';\r\n    this.callbackTimeout = this.options.callbackTimeout || 1000 * 60 * 10;\r\n    this.listeners = {};\r\n    this.callbacks = {};\r\n\r\n    this.initialise();\r\n  }\r\n\r\n  send(eventName, data, callback) {\r\n    if (arguments.length === 2 && typeof data === 'function') {\r\n      // eslint-disable-next-line\r\n      callback = data;\r\n    }\r\n\r\n    /* Every message will have a meta data property, the name of this key is defined by\r\n    * `metaKey`, any event that does not have this property is ignored. */\r\n    const metaData = { eventName };\r\n\r\n    if (cluster.isMaster) {\r\n      metaData.fromMaster = true;\r\n    } else {\r\n      metaData.workerid = cluster.worker.id;\r\n    }\r\n\r\n    const message = {\r\n      [this.metaKey]: metaData,\r\n      data,\r\n    };\r\n\r\n    /* If the event being sent contains a function, generate a unique id\r\n    * and save the function to be called at a later date. */\r\n    if (typeof callback === 'function') {\r\n      const id = uuid();\r\n      this.callbacks[id] = callback;\r\n      message[this.metaKey].id = id;\r\n\r\n      /* This should not actually be needed, but to be 100% safe in case\r\n       * messages between the master and worker processes are lost,\r\n       * delete the callback function after a set timeout to prevent permanent memory hogging. */\r\n      setTimeout(() => {\r\n        if (has.call(this.callbacks, id)) {\r\n          delete this.callbacks[id];\r\n        }\r\n      }, this.callbackTimeout);\r\n    }\r\n\r\n    if (cluster.isMaster) {\r\n      // eslint-disable-next-line\r\n      for (const id in cluster.workers) {\r\n        cluster.workers[id].send(message);\r\n      }\r\n    } else {\r\n      cluster.worker.send(message);\r\n    }\r\n  }\r\n\r\n  on(eventName, callback) {\r\n    /* If this event has not been defined before, make a new array,\r\n     * if it has add the function to the array.\r\n     * All functions are called to allow for multiple events to be set up under the same name. */\r\n    if (!has.call(this.listeners, eventName)) {\r\n      this.listeners[eventName] = [callback];\r\n    } else {\r\n      this.listeners[eventName].push(callback);\r\n    }\r\n  }\r\n\r\n  initialise() {\r\n    if (cluster.isMaster) {\r\n      cluster.on('message', (worker, message) => {\r\n        // Ignore any messages that didn't originate from this module.\r\n        if (!has.call(message, this.metaKey)) {\r\n          return;\r\n        }\r\n\r\n        if (message[this.metaKey].fromMaster) {\r\n          this.emitCallbacks(message);\r\n        }\r\n\r\n        // Ignore any messages that don't have an event listener.\r\n        if (!has.call(this.listeners, message[this.metaKey].eventName)) {\r\n          return;\r\n        }\r\n\r\n        this.emitMasterEvents(message);\r\n      });\r\n    }\r\n\r\n    if (cluster.isWorker) {\r\n      process.on('message', (message) => {\r\n        // Ignore any messages that didn't originate from this module.\r\n        if (!has.call(message, this.metaKey)) {\r\n          return;\r\n        }\r\n\r\n        if (message[this.metaKey].fromMaster) {\r\n          this.emitWorkerEvents(message);\r\n        }\r\n\r\n        this.emitCallbacks(message);\r\n      });\r\n    }\r\n  }\r\n\r\n  emitWorkerEvents(message) {\r\n    const { eventName } = message[this.metaKey];\r\n\r\n    // Loop over all listeners that are set up and call them.\r\n    this.listeners[eventName].forEach((callback, index, array) => {\r\n      /* Callback is the actual event listener function `.on(name, callback)`, we call it\r\n      * for all `onMasterEvent` listeners.\r\n      *\r\n      * The callback function itself takes a callback parameter that allows the master\r\n      * to send back a response to the worker. */\r\n      callback(message.data, (response) => {\r\n        // If there is no callback, don't do anything.\r\n        if (!has.call(message[this.metaKey], 'id')) {\r\n          return;\r\n        }\r\n\r\n        // Strip the original message of properties we don't need (data)\r\n        const responseMessage = {\r\n          id: message[this.metaKey].id,\r\n          eventName: message[this.metaKey].eventName,\r\n          fromMaster: true,\r\n          response,\r\n        };\r\n\r\n        // When all event listeners have been called, tell the worker to dispose of the callback.\r\n        if (index === array.length - 1) {\r\n          // responseMessage.deleteCallback = true\r\n        }\r\n\r\n        cluster.worker.send({\r\n          [this.metaKey]: responseMessage,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  emitMasterEvents(message) {\r\n    const { eventName } = message[this.metaKey];\r\n\r\n    // Loop over all listeners that are set up and call them.\r\n    this.listeners[eventName].forEach((callback, index, array) => {\r\n      /* Callback is the actual event listener function `.on(name, callback)`, we call it\r\n      * for all `onMasterEvent` listeners.\r\n      *\r\n      * The callback function itself takes a callback parameter that allows the master\r\n      * to send back a response to the worker. */\r\n      callback(message.data, (response) => {\r\n        // If there is no callback, don't do anything.\r\n        if (!has.call(message[this.metaKey], 'id')) {\r\n          return;\r\n        }\r\n\r\n        // Worker (workerid) is an index for `cluster.workers`\r\n        const { workerid } = message[this.metaKey];\r\n\r\n        // As forks can die, ensure we can emit a message back to this worker.\r\n        if (!cluster.workers[workerid]) {\r\n          return;\r\n        }\r\n\r\n        // Strip the original message of properties we don't need (eventName, data, workerid)\r\n        const responseMessage = {\r\n          id: message[this.metaKey].id,\r\n          response,\r\n        };\r\n\r\n        // When all event listeners have been called, tell the worker to dispose of the callback.\r\n        if (index === array.length - 1) {\r\n          responseMessage.deleteCallback = true;\r\n        }\r\n\r\n        cluster.workers[workerid].send({\r\n          [this.metaKey]: responseMessage,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  emitCallbacks(message) {\r\n    const { id } = message[this.metaKey];\r\n\r\n    if (!has.call(this.callbacks, id)) {\r\n      return;\r\n    }\r\n\r\n    const { response } = message[this.metaKey];\r\n    this.callbacks[id](response);\r\n\r\n    if (message[this.metaKey].deleteCallback) {\r\n      delete this.callbacks[id];\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = ClusterMessages;\r\n","import http from 'http';\r\nimport https from 'https';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport cluster from 'cluster';\r\nimport { Server } from \"socket.io\";\r\nimport os from 'os'\r\nimport { EventEmitter } from 'events';\r\n\r\nimport ClusterMessages from 'cluster-messages';\r\n\r\n/**\r\n * Inicializa la escucha del server en modo cluster\r\n */\r\nexport default class ClusterServer extends EventEmitter {\r\n    constructor(app) {\r\n        super();\r\n\r\n        if (!process.env.PORT) {\r\n            console.log('Using 3000 as default port. Customize via env PORT.')\r\n        }\r\n        this.port = this.normalizePort(process.env.PORT || 3000);\r\n        this.clustered = process.env.CLUSTERED;\r\n        this.workers = [];\r\n        this.app = app;\r\n\r\n        this.executeOnlyMain = () => { };\r\n    }\r\n\r\n    setServerCls(cls) {\r\n        this.cls = cls;\r\n    }\r\n\r\n\r\n    /**\r\n     * Iniciar el servidor en el puerto y con la configuración seleccionadas.\r\n     */\r\n    async start() {\r\n        if (this.clustered == \"true\") {\r\n            this.initClustered();\r\n        } else {\r\n\r\n            this.configureSocketIO();\r\n            this.executeOnlyMain();\r\n\r\n            await this.initUnclustered();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} server \r\n     */\r\n    configureSocketIO() {\r\n        this.app.io = new Server(this.cls.express_config && this.cls.express_config.socketio);\r\n        this.app.io.listen(this.port + 1);\r\n    }\r\n\r\n    /**\r\n     * Inicializa la clase server encargada del control de las solicitudes en forma multiproceso.\r\n     *\r\n     */\r\n    async initClustered() {\r\n        //Launch cluster\r\n        if (cluster.isPrimary) {\r\n            this.configureSocketIO();\r\n\r\n            this.executeOnlyMain();\r\n\r\n\r\n            let messages = new ClusterMessages();\r\n            messages.on('event', (msg, callback) => {\r\n                if (msg && msg.event) {\r\n                    if (process.env.DEBUG_EVENTS == true) {\r\n                        console.debug(`Received '${msg.event}' from ${msg.props.owner} at Master`)\r\n                    }\r\n                    //Desencadenar en el proceso principal tambien\r\n                    this.app.events.emit(msg.event, msg.props, callback);\r\n                }\r\n            });\r\n\r\n            //Count the machine's CPUs\r\n            const cpuCount = os.cpus().length;\r\n\r\n            //Create a worker for each CPU\r\n            for (let idx = 0; idx < cpuCount; idx += 1) {\r\n                this.initWorker();\r\n            }\r\n\r\n            //Listen for dying workers\r\n            cluster.on('exit', (worker) => {\r\n\r\n                //Replace the dead worker, we're not sentimental\r\n                console.log('Worker ' + worker.id + ' died :(');\r\n                this.initWorker();\r\n\r\n            });\r\n        } else {\r\n            await this.initUnclustered();\r\n            console.log(`Worker ${process.pid} started`);\r\n        }\r\n    }\r\n    /**\r\n     * Inicia un worker\r\n     */\r\n    initWorker() {\r\n        let worker = cluster.fork();\r\n        console.log(`Running worker ${worker.process.pid}`)\r\n\r\n        this.workers.push(worker);\r\n    }\r\n\r\n    /**\r\n     * Inicializa la clase server encargada del control de las solicitudes en un unico proceso.\r\n     *\r\n     */\r\n    async initUnclustered() {\r\n        //Initialize clustered servers\r\n        this.server = this.cls;\r\n\r\n        this.server.port = this.port;\r\n        //create http server\r\n        let server = http.Server(this.server.app);\r\n\r\n        await this.server.initialize();\r\n\r\n        if (this.server.beforeListen) await this.server.beforeListen();\r\n        //listen on provided ports\r\n        server.listen(this.server.port);\r\n\r\n        if (this.server.afterListen) await this.server.afterListen();\r\n\r\n        //add error handler\r\n        server.on(\"error\", (err) => {\r\n            this.handleErrors(err, this.server.port);\r\n        });\r\n        //start listening on port\r\n        server.on(\"listening\", () => {\r\n            console.log('Server Worker running on port: ' + this.port + '!');\r\n            this.emit('listening', this.port);\r\n        });\r\n\r\n        if (process.env.SSL && process.env.SSL == \"true\") {\r\n            if (!process.env.SSL_KEY || !process.env.SSL_CERT || !process.env.SSL_PASS) {\r\n                console.error('Invalid SSL configuration. SLL_KEY, SSL_CERT and SSL_PASS needed');\r\n                process.exit(0);\r\n            }\r\n\r\n            var key = fs.readFileSync(path.resolve(process.cwd(), process.env.SSL_KEY || 'key.pem'));\r\n            var cert = fs.readFileSync(path.resolve(process.cwd(), process.env.SSL_CERT || 'cert.pem'));\r\n\r\n            var options = {\r\n                key: key,\r\n                cert: cert,\r\n                passphrase: process.env.SSL_PASS,\r\n            };\r\n\r\n            if (!process.env.SSL_PORT) {\r\n                console.log('Using 3443 as ssl default port. Customize via env SSL_PORT.')\r\n            }\r\n            var sslPort = this.normalizePort(process.env.SSL_PORT || 3443);\r\n            var serverSsl = https.createServer(options, this.server.app);\r\n            serverSsl.listen(sslPort);\r\n            //add error handler\r\n            serverSsl.on(\"error\", function (err) {\r\n                self.handleErrors(err, sslPort);\r\n            });\r\n            //start listening on port\r\n            serverSsl.on(\"listening\", function () {\r\n                console.log('Server Worker running on port: ' + sslPort + '!');\r\n                this.emit('listening_ssl', sslPort);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Controla los posibles errores de formato en el puerto\r\n     * @param val\r\n     * @returns {*}\r\n     */\r\n    normalizePort(val) {\r\n        let port = parseInt(val, 10);\r\n\r\n        if (isNaN(port)) {\r\n            //named pipe\r\n            return val;\r\n        }\r\n\r\n        if (port >= 0) {\r\n            //port number\r\n            return port;\r\n        }\r\n\r\n        return false;\r\n    }\r\n    /**\r\n     * Gestiona los errores en el listen del servidor\r\n     */\r\n    handleErrors(error, port) {\r\n        if (error.syscall !== \"listen\") {\r\n            throw error;\r\n        }\r\n\r\n        let bind = typeof port === \"string\"\r\n            ? \"Pipe \" + port\r\n            : \"Port \" + port;\r\n\r\n        //handle specific listen errors with friendly messages\r\n        switch (error.code) {\r\n            case \"EACCES\":\r\n                console.error(bind + \" requires elevated privileges\");\r\n                process.exit(1);\r\n                break;\r\n            case \"EADDRINUSE\":\r\n                console.error(bind + \" is already in use\");\r\n                process.exit(1);\r\n                break;\r\n            default:\r\n                throw error;\r\n        }\r\n    }\r\n}","import cluster from 'cluster';\r\nimport { EventEmitter } from 'events';\r\nimport ClusterMessages from 'cluster-messages';\r\n\r\n/**\r\n * Clase encargada de la generacion de eventos.\r\n */\r\nexport default class EventHandler extends EventEmitter {\r\n\r\n    constructor(app) {\r\n        super();\r\n        this.messages = new ClusterMessages();\r\n\r\n        this.app = app; //Se recibe el singleton App para evitar referencias cruzadas\r\n\r\n        if (cluster.isWorker) {\r\n            // Levanto, en los worker, la escucha para recibir los eventos en broadcast de los demas hilos\r\n            this.messages.on('event', (msg, callback) => {\r\n                if (msg && msg.event && process.pid !== msg.props.owner) {\r\n                    if (process.env.DEBUG_EVENTS == true) {\r\n                        console.debug(`Receiving broadcast ${msg.event} - ${process.pid}`);\r\n                    }\r\n                    super.emit(msg.event, { ...msg.props }, callback);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sobreescribir el emitter para notificar a los hijos\r\n     * \r\n     * @param {*} evt \r\n     * @param {*} props \r\n     */\r\n    emit(evt, props, callback) {\r\n        //Desencadenar en local\r\n        super.emit(evt, props, callback);\r\n\r\n        if (evt && props && cluster.isWorker && process.pid !== props.owner) {\r\n            if (process.env.DEBUG_EVENTS == true) {\r\n                console.debug(`${evt} -> Firing from ${process.pid} to master`);\r\n            }\r\n            if (!props) {\r\n                props = {};\r\n            }\r\n            props.owner = process.pid\r\n            this.messages.send(\"event\", { event: evt, props: { ...props } }, callback);\r\n        }\r\n\r\n        if (evt && props && cluster.isPrimary && this.app && this.app.server && this.app.server.workers) {\r\n            if (process.env.DEBUG_EVENTS == true) {\r\n                console.debug(`${evt} -> Firing from master to workers`);\r\n            }\r\n            this.messages.send(\"event\", { event: evt, props: { ...props } }, callback);\r\n        }\r\n    }\r\n}\r\n","import log4js from \"log4js\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport util from \"util\";\r\n\r\nconst { configure, getLogger } = log4js;\r\n/**\r\n *\r\n */\r\nexport default class Logger {\r\n    static async configure() {\r\n        const readfile = util.promisify(fs.readFile);\r\n\r\n        const json = await readfile(path.resolve(process.cwd(), \"./log4js.json\"), \"utf8\");\r\n\r\n        configure(JSON.parse(json));\r\n\r\n        //Nota para el futuro:\r\n        // Esto sobreescribe los metodos de console.log\r\n        // Es necesario que la sitaxis se mantenga tal cual....\r\n        (() => {\r\n            const log = console.log;\r\n            const error = console.error;\r\n            const info = console.info;\r\n            const debug = console.debug;\r\n\r\n            const log_logger = getLogger(\"log\");\r\n            const error_logger = getLogger(\"error\");\r\n            const debug_logger = getLogger(\"debug\");\r\n            console.log = function () {\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // log.apply(this, args);\r\n                log_logger.log(\"info\", args[0]);\r\n            };\r\n            console.error = function () {\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // error.apply(this, args);\r\n                error_logger.log(\"error\", args[0]);\r\n            };\r\n            console.info = function () {\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // info.apply(this, args);\r\n                log_logger.log(\"info\", args[0]);\r\n            };\r\n            console.debug = function () {\r\n                /*if (global.settings.debug.value) {*/\r\n                let args = Array.prototype.slice.call(arguments);\r\n                // debug.apply(this, [args[1], args[2]]);\r\n                debug_logger.log(\"debug\", args[0]);\r\n            };\r\n\r\n            console.custom = function (logger, message) {\r\n                const custom_logger = getLogger(logger);\r\n                custom_logger.log(logger, message);\r\n            };\r\n        })();\r\n    }\r\n}\r\n","\r\nimport express from 'express';\r\nimport url from 'url';\r\nimport { JsonResponse, Utils } from '../common';\r\n\r\n\r\nimport { pathToRegexp } from 'path-to-regexp';\r\n\r\nexport default class AuthController {\r\n\r\n    constructor(publicPathsList, AuthHandler) {\r\n        this.router = express.Router();\r\n        this.publicPathsList = [...publicPathsList, '/login'];\r\n\r\n        this.AuthHandler = AuthHandler;\r\n    }\r\n\r\n\r\n    configure() {\r\n        const exAsync = Utils.expressHandler();\r\n        this.router.use(exAsync((res, req, next) => { this.check(res, req, next); }));\r\n        this.router.post('/login', exAsync((res, req, next) => { this.loginPost(res, req, next); }));\r\n        this.router.post('/logout', exAsync((res, req, next) => { this.logout(res, req, next); }));\r\n\r\n        return this.router;\r\n    }\r\n\r\n    /**\r\n     * Controla que los usuarios tengan sesion para acceder a los metodos privados de la API\r\n     * \r\n     * @param {*} request \r\n     * @param {*} response \r\n     * @param {*} next \r\n     */\r\n    async check(request, response, next) {\r\n        try {\r\n            //Rutas ublicas \r\n            for (let path of this.publicPathsList) {\r\n                const expr = pathToRegexp(path);\r\n                if (expr.exec(url.parse(request.url).pathname) !== null) {\r\n                    return next();\r\n                }\r\n            }\r\n\r\n            if (await this.AuthHandler.check(request)) {\r\n                return next()\r\n            }\r\n\r\n            return response.status(403).json(new JsonResponse(false, null, 'Forbidden').toJson());\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return response.status(403).json(new JsonResponse(false, null, 'Forbidden').toJson());\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Valida los credenciales de un usuario\r\n     * \r\n     * TODO logger console.custom(\"access\", INFO);\r\n     * \r\n     * @param {*} request \r\n     * @param {*} response \r\n     */\r\n    async loginPost(request, response) {\r\n        if (request.body.username) {\r\n            try {\r\n                let data = await this.AuthHandler.validate(request, request.body.username, request.body.password)\r\n                if (data) {\r\n                    return response.status(200).json(new JsonResponse(true, data).toJson());\r\n                }\r\n                return response.status(401).json(new JsonResponse(false, null, 'Unauthorized - Incorrect credentials').toJson());\r\n            } catch (ex) {\r\n                console.error(ex);\r\n                return response.status(401).json(new JsonResponse(false, null, \"Unauthorized - Error, check log\").toJson());\r\n            }\r\n        }\r\n        return response.status(401).json(new JsonResponse(false, null, \"Unauthorized - Missing parameters\").toJson());\r\n    }\r\n\r\n    /**\r\n     * Cierra la sesion del usuario\r\n     * \r\n     * @param {*} request \r\n     * @param {*} response \r\n     */\r\n    async logout(request, response) {\r\n        if (this.AuthHandler.logout) { //Depende de que el authHandler implementado pueda realizar esta accion\r\n            try {\r\n                await this.AuthHandler.logout(request)\r\n                return response.status(200).json(new JsonResponse(true).toJson());\r\n            } catch (ex) {\r\n                console.error(ex);\r\n                return response.status(500).json(new JsonResponse(false, null, ex).toJson());\r\n            }\r\n        }\r\n        return response.status(200).json(new JsonResponse(true).toJson());\r\n    }\r\n\r\n\r\n}","export default class IAuthHandler {\r\n    constructor() {\r\n        if (!this.check) {\r\n            throw new Error(\"AuthHandler must have 'check' vethod\");\r\n        }\r\n        if (!this.validate) {\r\n            throw new Error(\"AuthHandler must have 'validate' vethod\");\r\n        }\r\n        // logout method is optional\r\n    }\r\n}\r\n\r\n","import { TokenGenerator, Utils } from '../../common';\r\nimport IAuthHandler from '../IAuthHandler'\r\nimport lodash from 'lodash';\r\nimport moment from 'moment';\r\n\r\nexport default class JwtAuthHandler extends IAuthHandler {\r\n    constructor(UserDao) {\r\n        super();\r\n\r\n        this.tokenGenerator = new TokenGenerator(process.env.JWT_SECRET, { audience: process.env.JWT_AUDIENCE, issuer: process.env.JWT_ISSUER, subject: process.env.JWT_SUBJECT, algorithm: process.env.JWT_ALGORITHM, expiresIn: process.env.JWT_EXPIRES })\r\n\r\n        if (!UserDao) {\r\n            throw new Error(\"Need 'UserDao' for user validation. Create 'UserDao' class extending 'IUserDao'\");\r\n        }\r\n        this.userDao = UserDao;\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de realizar la comprobacion para validar si la sesion del usuario es válida\r\n     * \r\n     * @param {*} request \r\n     */\r\n    async check(request) {\r\n        if (request.headers.authorization) {\r\n            const token = (request.headers.authorization || '').split(' ')[1] || '';\r\n\r\n            if (!token) {\r\n                console.error(\"Token needed\");\r\n                return false;\r\n            }\r\n            try {\r\n                var decoded = this.tokenGenerator.verify(token);\r\n                const { sub, username, exp } = decoded;\r\n\r\n                if (!sub || !username || moment(exp).isAfter(new Date())) {\r\n                    return false;\r\n                }\r\n\r\n                //Si la sesion es valida, lo introducimos en el contexto de la solicitud\r\n                request.session = { ...request.session, ...decoded };\r\n                return true;\r\n            } catch (ex) {\r\n                console.error(ex);\r\n                return false;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Método encargado de realizar la validación de un usuario. Utiliza IUserDao como interfaz para la realización de la query a BD.\r\n     * \r\n     * @param {*} username \r\n     * @param {*} password \r\n     */\r\n    async validate(request, username, password) {\r\n\r\n        const user = await this.userDao.findByUsername(username);\r\n\r\n        if (user && user.username === username && user.password === Utils.encrypt(password)) {\r\n            return this.tokenGenerator.sign(lodash.omit(user, ['password']));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n}","import { Utils } from '../../common';\r\nimport IAuthHandler from '../IAuthHandler'\r\nimport lodash from 'lodash';\r\n\r\n\r\n/**\r\n * Necesario:\r\n *  Instalar -->   express-session y algun session store\r\n * \r\n *  Mas info: https://www.npmjs.com/package/express-session\r\n * \r\n *  App.customizeExpress = () => {\r\n       this.app.use(session({\r\n            secret: 'keyboard cat',\r\n            resave: false,\r\n            saveUninitialized: true,\r\n            cookie: { secure: true }\r\n        }));\r\n    }\r\n */\r\n\r\nexport default class CookieAuthHandler extends IAuthHandler {\r\n    constructor(UserDao) {\r\n        super();\r\n\r\n        if (!UserDao) {\r\n            throw new Error(\"Need 'UserDao' for user validation. Create 'UserDao' class extending 'IUserDao'\");\r\n        }\r\n        this.userDao = UserDao;\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de realizar la comprobacion para validar si la sesion del usuario es válida\r\n     * \r\n     * @param {*} request \r\n     */\r\n    async check(request) {\r\n        if (request.headers.authorization) { //Si se recibe por Auth Basic\r\n            const token = (request.headers.authorization || '').split(' ')[1] || '';\r\n\r\n            const creds = Buffer.from(token, 'base64').toString().split(':');\r\n            const login = creds[0];\r\n            const password = creds[1];\r\n\r\n            if (!await this.validate(request, login, password)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        if (request.session && request.session.username) {//Si hay sesion almacenada\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Método encargado de realizar la validación de un usuario. Utiliza IUserDao como interfaz para la realización de la query a BD.\r\n     * \r\n     * @param {*} username \r\n     * @param {*} password \r\n     */\r\n    async validate(request, username, password) {\r\n\r\n        const user = await this.userDao.findByUsername(username);\r\n\r\n        if (user && user.username === username && user.password === Utils.encrypt(password)) {\r\n            request.session = { ...request.session, ...lodash.omit(user, ['password']) };\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {*} request \r\n     */\r\n    logout(request) {\r\n        return new Promise((resolve) => {\r\n            if (request.session) {\r\n                request.session.destroy(resolve);\r\n            }\r\n        })\r\n    }\r\n\r\n}","/*!\n * XRegExp 5.1.0\n * <xregexp.com>\n * Steven Levithan (c) 2007-present MIT License\n */\n\n/**\n * XRegExp provides augmented, extensible regular expressions. You get additional regex syntax and\n * flags, beyond what browsers support natively. XRegExp is also a regex utility belt with tools to\n * make your client-side grepping simpler and more powerful, while freeing you from related\n * cross-browser inconsistencies.\n */\n\n// ==--------------------------==\n// Private stuff\n// ==--------------------------==\n\n// Property name used for extended regex instance data\nconst REGEX_DATA = 'xregexp';\n// Optional features that can be installed and uninstalled\nconst features = {\n    astral: false,\n    namespacing: true\n};\n// Storage for fixed/extended native methods\nconst fixed = {};\n// Storage for regexes cached by `XRegExp.cache`\nlet regexCache = {};\n// Storage for pattern details cached by the `XRegExp` constructor\nlet patternCache = {};\n// Storage for regex syntax tokens added internally or by `XRegExp.addToken`\nconst tokens = [];\n// Token scopes\nconst defaultScope = 'default';\nconst classScope = 'class';\n// Regexes that match native regex syntax, including octals\nconst nativeTokens = {\n    // Any native multicharacter token in default scope, or any single character\n    'default': /\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|\\(\\?(?:[:=!]|<[=!])|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]/,\n    // Any native multicharacter token in character class scope, or any single character\n    'class': /\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|[\\s\\S]/\n};\n// Any backreference or dollar-prefixed character in replacement strings\nconst replacementToken = /\\$(?:\\{([^\\}]+)\\}|<([^>]+)>|(\\d\\d?|[\\s\\S]?))/g;\n// Check for correct `exec` handling of nonparticipating capturing groups\nconst correctExecNpcg = /()??/.exec('')[1] === undefined;\n// Check for ES6 `flags` prop support\nconst hasFlagsProp = /x/.flags !== undefined;\n\nfunction hasNativeFlag(flag) {\n    // Can't check based on the presence of properties/getters since browsers might support such\n    // properties even when they don't support the corresponding flag in regex construction (tested\n    // in Chrome 48, where `'unicode' in /x/` is true but trying to construct a regex with flag `u`\n    // throws an error)\n    let isSupported = true;\n    try {\n        // Can't use regex literals for testing even in a `try` because regex literals with\n        // unsupported flags cause a compilation error in IE\n        new RegExp('', flag);\n\n        // Work around a broken/incomplete IE11 polyfill for sticky introduced in core-js 3.6.0\n        if (flag === 'y') {\n            // Using function to avoid babel transform to regex literal\n            const gy = (() => 'gy')();\n            const incompleteY = '.a'.replace(new RegExp('a', gy), '.') === '..';\n            if (incompleteY) {\n                isSupported = false;\n            }\n        }\n    } catch (exception) {\n        isSupported = false;\n    }\n    return isSupported;\n}\n// Check for ES2018 `s` flag support\nconst hasNativeS = hasNativeFlag('s');\n// Check for ES6 `u` flag support\nconst hasNativeU = hasNativeFlag('u');\n// Check for ES6 `y` flag support\nconst hasNativeY = hasNativeFlag('y');\n// Tracker for known flags, including addon flags\nconst registeredFlags = {\n    g: true,\n    i: true,\n    m: true,\n    s: hasNativeS,\n    u: hasNativeU,\n    y: hasNativeY\n};\n// Flags to remove when passing to native `RegExp` constructor\nconst nonnativeFlags = hasNativeS ? /[^gimsuy]+/g : /[^gimuy]+/g;\n\n/**\n * Attaches extended data and `XRegExp.prototype` properties to a regex object.\n *\n * @private\n * @param {RegExp} regex Regex to augment.\n * @param {Array} captureNames Array with capture names, or `null`.\n * @param {String} xSource XRegExp pattern used to generate `regex`, or `null` if N/A.\n * @param {String} xFlags XRegExp flags used to generate `regex`, or `null` if N/A.\n * @param {Boolean} [isInternalOnly=false] Whether the regex will be used only for internal\n *   operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *   skipping some operations like attaching `XRegExp.prototype` properties.\n * @returns {!RegExp} Augmented regex.\n */\nfunction augment(regex, captureNames, xSource, xFlags, isInternalOnly) {\n    regex[REGEX_DATA] = {\n        captureNames\n    };\n\n    if (isInternalOnly) {\n        return regex;\n    }\n\n    // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\n    if (regex.__proto__) {\n        regex.__proto__ = XRegExp.prototype;\n    } else {\n        for (const p in XRegExp.prototype) {\n            // An `XRegExp.prototype.hasOwnProperty(p)` check wouldn't be worth it here, since this\n            // is performance sensitive, and enumerable `Object.prototype` or `RegExp.prototype`\n            // extensions exist on `regex.prototype` anyway\n            regex[p] = XRegExp.prototype[p];\n        }\n    }\n\n    regex[REGEX_DATA].source = xSource;\n    // Emulate the ES6 `flags` prop by ensuring flags are in alphabetical order\n    regex[REGEX_DATA].flags = xFlags ? xFlags.split('').sort().join('') : xFlags;\n\n    return regex;\n}\n\n/**\n * Removes any duplicate characters from the provided string.\n *\n * @private\n * @param {String} str String to remove duplicate characters from.\n * @returns {string} String with any duplicate characters removed.\n */\nfunction clipDuplicates(str) {\n    return str.replace(/([\\s\\S])(?=[\\s\\S]*\\1)/g, '');\n}\n\n/**\n * Copies a regex object while preserving extended data and augmenting with `XRegExp.prototype`\n * properties. The copy has a fresh `lastIndex` property (set to zero). Allows adding and removing\n * flags g and y while copying the regex.\n *\n * @private\n * @param {RegExp} regex Regex to copy.\n * @param {Object} [options] Options object with optional properties:\n *   - `addG` {Boolean} Add flag g while copying the regex.\n *   - `addY` {Boolean} Add flag y while copying the regex.\n *   - `removeG` {Boolean} Remove flag g while copying the regex.\n *   - `removeY` {Boolean} Remove flag y while copying the regex.\n *   - `isInternalOnly` {Boolean} Whether the copied regex will be used only for internal\n *     operations, and never exposed to users. For internal-only regexes, we can improve perf by\n *     skipping some operations like attaching `XRegExp.prototype` properties.\n *   - `source` {String} Overrides `<regex>.source`, for special cases.\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\n */\nfunction copyRegex(regex, options) {\n    if (!XRegExp.isRegExp(regex)) {\n        throw new TypeError('Type RegExp expected');\n    }\n\n    const xData = regex[REGEX_DATA] || {};\n    let flags = getNativeFlags(regex);\n    let flagsToAdd = '';\n    let flagsToRemove = '';\n    let xregexpSource = null;\n    let xregexpFlags = null;\n\n    options = options || {};\n\n    if (options.removeG) {flagsToRemove += 'g';}\n    if (options.removeY) {flagsToRemove += 'y';}\n    if (flagsToRemove) {\n        flags = flags.replace(new RegExp(`[${flagsToRemove}]+`, 'g'), '');\n    }\n\n    if (options.addG) {flagsToAdd += 'g';}\n    if (options.addY) {flagsToAdd += 'y';}\n    if (flagsToAdd) {\n        flags = clipDuplicates(flags + flagsToAdd);\n    }\n\n    if (!options.isInternalOnly) {\n        if (xData.source !== undefined) {\n            xregexpSource = xData.source;\n        }\n        // null or undefined; don't want to add to `flags` if the previous value was null, since\n        // that indicates we're not tracking original precompilation flags\n        if (xData.flags != null) {\n            // Flags are only added for non-internal regexes by `XRegExp.globalize`. Flags are never\n            // removed for non-internal regexes, so don't need to handle it\n            xregexpFlags = flagsToAdd ? clipDuplicates(xData.flags + flagsToAdd) : xData.flags;\n        }\n    }\n\n    // Augment with `XRegExp.prototype` properties, but use the native `RegExp` constructor to avoid\n    // searching for special tokens. That would be wrong for regexes constructed by `RegExp`, and\n    // unnecessary for regexes constructed by `XRegExp` because the regex has already undergone the\n    // translation to native regex syntax\n    regex = augment(\n        new RegExp(options.source || regex.source, flags),\n        hasNamedCapture(regex) ? xData.captureNames.slice(0) : null,\n        xregexpSource,\n        xregexpFlags,\n        options.isInternalOnly\n    );\n\n    return regex;\n}\n\n/**\n * Converts hexadecimal to decimal.\n *\n * @private\n * @param {String} hex\n * @returns {number}\n */\nfunction dec(hex) {\n    return parseInt(hex, 16);\n}\n\n/**\n * Returns a pattern that can be used in a native RegExp in place of an ignorable token such as an\n * inline comment or whitespace with flag x. This is used directly as a token handler function\n * passed to `XRegExp.addToken`.\n *\n * @private\n * @param {String} match Match arg of `XRegExp.addToken` handler\n * @param {String} scope Scope arg of `XRegExp.addToken` handler\n * @param {String} flags Flags arg of `XRegExp.addToken` handler\n * @returns {string} Either '' or '(?:)', depending on which is needed in the context of the match.\n */\nfunction getContextualTokenSeparator(match, scope, flags) {\n    const matchEndPos = match.index + match[0].length;\n    const precedingChar = match.input[match.index - 1];\n    const followingChar = match.input[matchEndPos];\n    if (\n        // No need to separate tokens if at the beginning or end of a group, before or after a\n        // group, or before or after a `|`\n        /^[()|]$/.test(precedingChar) ||\n        /^[()|]$/.test(followingChar) ||\n        // No need to separate tokens if at the beginning or end of the pattern\n        match.index === 0 ||\n        matchEndPos === match.input.length ||\n        // No need to separate tokens if at the beginning of a noncapturing group or lookaround.\n        // Looks only at the last 4 chars (at most) for perf when constructing long regexes.\n        /\\(\\?(?:[:=!]|<[=!])$/.test(match.input.substring(match.index - 4, match.index)) ||\n        // Avoid separating tokens when the following token is a quantifier\n        isQuantifierNext(match.input, matchEndPos, flags)\n    ) {\n        return '';\n    }\n    // Keep tokens separated. This avoids e.g. inadvertedly changing `\\1 1` or `\\1(?#)1` to `\\11`.\n    // This also ensures all tokens remain as discrete atoms, e.g. it prevents converting the\n    // syntax error `(? :` into `(?:`.\n    return '(?:)';\n}\n\n/**\n * Returns native `RegExp` flags used by a regex object.\n *\n * @private\n * @param {RegExp} regex Regex to check.\n * @returns {string} Native flags in use.\n */\nfunction getNativeFlags(regex) {\n    return hasFlagsProp ?\n        regex.flags :\n        // Explicitly using `RegExp.prototype.toString` (rather than e.g. `String` or concatenation\n        // with an empty string) allows this to continue working predictably when\n        // `XRegExp.proptotype.toString` is overridden\n        /\\/([a-z]*)$/i.exec(RegExp.prototype.toString.call(regex))[1];\n}\n\n/**\n * Determines whether a regex has extended instance data used to track capture names.\n *\n * @private\n * @param {RegExp} regex Regex to check.\n * @returns {boolean} Whether the regex uses named capture.\n */\nfunction hasNamedCapture(regex) {\n    return !!(regex[REGEX_DATA] && regex[REGEX_DATA].captureNames);\n}\n\n/**\n * Converts decimal to hexadecimal.\n *\n * @private\n * @param {Number|String} dec\n * @returns {string}\n */\nfunction hex(dec) {\n    return parseInt(dec, 10).toString(16);\n}\n\n/**\n * Checks whether the next nonignorable token after the specified position is a quantifier.\n *\n * @private\n * @param {String} pattern Pattern to search within.\n * @param {Number} pos Index in `pattern` to search at.\n * @param {String} flags Flags used by the pattern.\n * @returns {Boolean} Whether the next nonignorable token is a quantifier.\n */\nfunction isQuantifierNext(pattern, pos, flags) {\n    const inlineCommentPattern = '\\\\(\\\\?#[^)]*\\\\)';\n    const lineCommentPattern = '#[^#\\\\n]*';\n    const quantifierPattern = '[?*+]|{\\\\d+(?:,\\\\d*)?}';\n    const regex = flags.includes('x') ?\n        // Ignore any leading whitespace, line comments, and inline comments\n        new RegExp(`^(?:\\\\s|${lineCommentPattern}|${inlineCommentPattern})*(?:${quantifierPattern})`) :\n        // Ignore any leading inline comments\n        new RegExp(`^(?:${inlineCommentPattern})*(?:${quantifierPattern})`);\n    return regex.test(pattern.slice(pos));\n}\n\n/**\n * Determines whether a value is of the specified type, by resolving its internal [[Class]].\n *\n * @private\n * @param {*} value Object to check.\n * @param {String} type Type to check for, in TitleCase.\n * @returns {boolean} Whether the object matches the type.\n */\nfunction isType(value, type) {\n    return Object.prototype.toString.call(value) === `[object ${type}]`;\n}\n\n/**\n * Returns the object, or throws an error if it is `null` or `undefined`. This is used to follow\n * the ES5 abstract operation `ToObject`.\n *\n * @private\n * @param {*} value Object to check and return.\n * @returns {*} The provided object.\n */\nfunction nullThrows(value) {\n    // null or undefined\n    if (value == null) {\n        throw new TypeError('Cannot convert null or undefined to object');\n    }\n\n    return value;\n}\n\n/**\n * Adds leading zeros if shorter than four characters. Used for fixed-length hexadecimal values.\n *\n * @private\n * @param {String} str\n * @returns {string}\n */\nfunction pad4(str) {\n    while (str.length < 4) {\n        str = `0${str}`;\n    }\n    return str;\n}\n\n/**\n * Checks for flag-related errors, and strips/applies flags in a leading mode modifier. Offloads\n * the flag preparation logic from the `XRegExp` constructor.\n *\n * @private\n * @param {String} pattern Regex pattern, possibly with a leading mode modifier.\n * @param {String} flags Any combination of flags.\n * @returns {!Object} Object with properties `pattern` and `flags`.\n */\nfunction prepareFlags(pattern, flags) {\n    // Recent browsers throw on duplicate flags, so copy this behavior for nonnative flags\n    if (clipDuplicates(flags) !== flags) {\n        throw new SyntaxError(`Invalid duplicate regex flag ${flags}`);\n    }\n\n    // Strip and apply a leading mode modifier with any combination of flags except g or y\n    pattern = pattern.replace(/^\\(\\?([\\w$]+)\\)/, ($0, $1) => {\n        if (/[gy]/.test($1)) {\n            throw new SyntaxError(`Cannot use flag g or y in mode modifier ${$0}`);\n        }\n        // Allow duplicate flags within the mode modifier\n        flags = clipDuplicates(flags + $1);\n        return '';\n    });\n\n    // Throw on unknown native or nonnative flags\n    for (const flag of flags) {\n        if (!registeredFlags[flag]) {\n            throw new SyntaxError(`Unknown regex flag ${flag}`);\n        }\n    }\n\n    return {\n        pattern,\n        flags\n    };\n}\n\n/**\n * Prepares an options object from the given value.\n *\n * @private\n * @param {String|Object} value Value to convert to an options object.\n * @returns {Object} Options object.\n */\nfunction prepareOptions(value) {\n    const options = {};\n\n    if (isType(value, 'String')) {\n        XRegExp.forEach(value, /[^\\s,]+/, (match) => {\n            options[match] = true;\n        });\n\n        return options;\n    }\n\n    return value;\n}\n\n/**\n * Registers a flag so it doesn't throw an 'unknown flag' error.\n *\n * @private\n * @param {String} flag Single-character flag to register.\n */\nfunction registerFlag(flag) {\n    if (!/^[\\w$]$/.test(flag)) {\n        throw new Error('Flag must be a single character A-Za-z0-9_$');\n    }\n\n    registeredFlags[flag] = true;\n}\n\n/**\n * Runs built-in and custom regex syntax tokens in reverse insertion order at the specified\n * position, until a match is found.\n *\n * @private\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\n * @param {String} flags Flags being used to construct the regex.\n * @param {Number} pos Position to search for tokens within `pattern`.\n * @param {Number} scope Regex scope to apply: 'default' or 'class'.\n * @param {Object} context Context object to use for token handler functions.\n * @returns {Object} Object with properties `matchLength`, `output`, and `reparse`; or `null`.\n */\nfunction runTokens(pattern, flags, pos, scope, context) {\n    let i = tokens.length;\n    const leadChar = pattern[pos];\n    let result = null;\n    let match;\n    let t;\n\n    // Run in reverse insertion order\n    while (i--) {\n        t = tokens[i];\n        if (\n            (t.leadChar && t.leadChar !== leadChar) ||\n            (t.scope !== scope && t.scope !== 'all') ||\n            (t.flag && !flags.includes(t.flag))\n        ) {\n            continue;\n        }\n\n        match = XRegExp.exec(pattern, t.regex, pos, 'sticky');\n        if (match) {\n            result = {\n                matchLength: match[0].length,\n                output: t.handler.call(context, match, scope, flags),\n                reparse: t.reparse\n            };\n            // Finished with token tests\n            break;\n        }\n    }\n\n    return result;\n}\n\n/**\n * Enables or disables implicit astral mode opt-in. When enabled, flag A is automatically added to\n * all new regexes created by XRegExp. This causes an error to be thrown when creating regexes if\n * the Unicode Base addon is not available, since flag A is registered by that addon.\n *\n * @private\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\nfunction setAstral(on) {\n    features.astral = on;\n}\n\n/**\n * Adds named capture groups to the `groups` property of match arrays. See here for details:\n * https://github.com/tc39/proposal-regexp-named-groups\n *\n * @private\n * @param {Boolean} on `true` to enable; `false` to disable.\n */\nfunction setNamespacing(on) {\n    features.namespacing = on;\n}\n\n// ==--------------------------==\n// Constructor\n// ==--------------------------==\n\n/**\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\n * native regular expression in that additional syntax and flags are supported. The returned object\n * is in fact a native `RegExp` and works with all native methods.\n *\n * @class XRegExp\n * @constructor\n * @param {String|RegExp} pattern Regex pattern string, or an existing regex object to copy.\n * @param {String} [flags] Any combination of flags.\n *   Native flags:\n *     - `g` - global\n *     - `i` - ignore case\n *     - `m` - multiline anchors\n *     - `u` - unicode (ES6)\n *     - `y` - sticky (Firefox 3+, ES6)\n *   Additional XRegExp flags:\n *     - `n` - explicit capture\n *     - `s` - dot matches all (aka singleline) - works even when not natively supported\n *     - `x` - free-spacing and line comments (aka extended)\n *     - `A` - astral (requires the Unicode Base addon)\n *   Flags cannot be provided when constructing one `RegExp` from another.\n * @returns {RegExp} Extended regular expression object.\n * @example\n *\n * // With named capture and flag x\n * XRegExp(`(?<year>  [0-9]{4} ) -?  # year\n *          (?<month> [0-9]{2} ) -?  # month\n *          (?<day>   [0-9]{2} )     # day`, 'x');\n *\n * // Providing a regex object copies it. Native regexes are recompiled using native (not XRegExp)\n * // syntax. Copies maintain extended data, are augmented with `XRegExp.prototype` properties, and\n * // have fresh `lastIndex` properties (set to zero).\n * XRegExp(/regex/);\n */\nfunction XRegExp(pattern, flags) {\n    if (XRegExp.isRegExp(pattern)) {\n        if (flags !== undefined) {\n            throw new TypeError('Cannot supply flags when copying a RegExp');\n        }\n        return copyRegex(pattern);\n    }\n\n    // Copy the argument behavior of `RegExp`\n    pattern = pattern === undefined ? '' : String(pattern);\n    flags = flags === undefined ? '' : String(flags);\n\n    if (XRegExp.isInstalled('astral') && !flags.includes('A')) {\n        // This causes an error to be thrown if the Unicode Base addon is not available\n        flags += 'A';\n    }\n\n    if (!patternCache[pattern]) {\n        patternCache[pattern] = {};\n    }\n\n    if (!patternCache[pattern][flags]) {\n        const context = {\n            hasNamedCapture: false,\n            captureNames: []\n        };\n        let scope = defaultScope;\n        let output = '';\n        let pos = 0;\n        let result;\n\n        // Check for flag-related errors, and strip/apply flags in a leading mode modifier\n        const applied = prepareFlags(pattern, flags);\n        let appliedPattern = applied.pattern;\n        const appliedFlags = applied.flags;\n\n        // Use XRegExp's tokens to translate the pattern to a native regex pattern.\n        // `appliedPattern.length` may change on each iteration if tokens use `reparse`\n        while (pos < appliedPattern.length) {\n            do {\n                // Check for custom tokens at the current position\n                result = runTokens(appliedPattern, appliedFlags, pos, scope, context);\n                // If the matched token used the `reparse` option, splice its output into the\n                // pattern before running tokens again at the same position\n                if (result && result.reparse) {\n                    appliedPattern = appliedPattern.slice(0, pos) +\n                        result.output +\n                        appliedPattern.slice(pos + result.matchLength);\n                }\n            } while (result && result.reparse);\n\n            if (result) {\n                output += result.output;\n                pos += (result.matchLength || 1);\n            } else {\n                // Get the native token at the current position\n                const [token] = XRegExp.exec(appliedPattern, nativeTokens[scope], pos, 'sticky');\n                output += token;\n                pos += token.length;\n                if (token === '[' && scope === defaultScope) {\n                    scope = classScope;\n                } else if (token === ']' && scope === classScope) {\n                    scope = defaultScope;\n                }\n            }\n        }\n\n        patternCache[pattern][flags] = {\n            // Use basic cleanup to collapse repeated empty groups like `(?:)(?:)` to `(?:)`. Empty\n            // groups are sometimes inserted during regex transpilation in order to keep tokens\n            // separated. However, more than one empty group in a row is never needed.\n            pattern: output.replace(/(?:\\(\\?:\\))+/g, '(?:)'),\n            // Strip all but native flags\n            flags: appliedFlags.replace(nonnativeFlags, ''),\n            // `context.captureNames` has an item for each capturing group, even if unnamed\n            captures: context.hasNamedCapture ? context.captureNames : null\n        };\n    }\n\n    const generated = patternCache[pattern][flags];\n    return augment(\n        new RegExp(generated.pattern, generated.flags),\n        generated.captures,\n        pattern,\n        flags\n    );\n}\n\n// Add `RegExp.prototype` to the prototype chain\nXRegExp.prototype = new RegExp();\n\n// ==--------------------------==\n// Public properties\n// ==--------------------------==\n\n/**\n * The XRegExp version number as a string containing three dot-separated parts. For example,\n * '2.0.0-beta-3'.\n *\n * @static\n * @memberOf XRegExp\n * @type String\n */\nXRegExp.version = '5.1.0';\n\n// ==--------------------------==\n// Public methods\n// ==--------------------------==\n\n// Intentionally undocumented; used in tests and addons\nXRegExp._clipDuplicates = clipDuplicates;\nXRegExp._hasNativeFlag = hasNativeFlag;\nXRegExp._dec = dec;\nXRegExp._hex = hex;\nXRegExp._pad4 = pad4;\n\n/**\n * Extends XRegExp syntax and allows custom flags. This is used internally and can be used to\n * create XRegExp addons. If more than one token can match the same string, the last added wins.\n *\n * @memberOf XRegExp\n * @param {RegExp} regex Regex object that matches the new token.\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\n *   properties of the regex being built, through `this`. Invoked with three arguments:\n *   - The match array, with named backreference properties.\n *   - The regex scope where the match was found: 'default' or 'class'.\n *   - The flags used by the regex, including any flags in a leading mode modifier.\n *   The handler function becomes part of the XRegExp construction process, so be careful not to\n *   construct XRegExps within the function or you will trigger infinite recursion.\n * @param {Object} [options] Options object with optional properties:\n *   - `scope` {String} Scope where the token applies: 'default', 'class', or 'all'.\n *   - `flag` {String} Single-character flag that triggers the token. This also registers the\n *     flag, which prevents XRegExp from throwing an 'unknown flag' error when the flag is used.\n *   - `optionalFlags` {String} Any custom flags checked for within the token `handler` that are\n *     not required to trigger the token. This registers the flags, to prevent XRegExp from\n *     throwing an 'unknown flag' error when any of the flags are used.\n *   - `reparse` {Boolean} Whether the `handler` function's output should not be treated as\n *     final, and instead be reparseable by other tokens (including the current token). Allows\n *     token chaining or deferring.\n *   - `leadChar` {String} Single character that occurs at the beginning of any successful match\n *     of the token (not always applicable). This doesn't change the behavior of the token unless\n *     you provide an erroneous value. However, providing it can increase the token's performance\n *     since the token can be skipped at any positions where this character doesn't appear.\n * @example\n *\n * // Basic usage: Add \\a for the ALERT control code\n * XRegExp.addToken(\n *   /\\\\a/,\n *   () => '\\\\x07',\n *   {scope: 'all'}\n * );\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\n *\n * // Add the U (ungreedy) flag from PCRE and RE2, which reverses greedy and lazy quantifiers.\n * // Since `scope` is not specified, it uses 'default' (i.e., transformations apply outside of\n * // character classes only)\n * XRegExp.addToken(\n *   /([?*+]|{\\d+(?:,\\d*)?})(\\??)/,\n *   (match) => `${match[1]}${match[2] ? '' : '?'}`,\n *   {flag: 'U'}\n * );\n * XRegExp('a+', 'U').exec('aaa')[0]; // -> 'a'\n * XRegExp('a+?', 'U').exec('aaa')[0]; // -> 'aaa'\n */\nXRegExp.addToken = (regex, handler, options) => {\n    options = options || {};\n    let {optionalFlags} = options;\n\n    if (options.flag) {\n        registerFlag(options.flag);\n    }\n\n    if (optionalFlags) {\n        optionalFlags = optionalFlags.split('');\n        for (const flag of optionalFlags) {\n            registerFlag(flag);\n        }\n    }\n\n    // Add to the private list of syntax tokens\n    tokens.push({\n        regex: copyRegex(regex, {\n            addG: true,\n            addY: hasNativeY,\n            isInternalOnly: true\n        }),\n        handler,\n        scope: options.scope || defaultScope,\n        flag: options.flag,\n        reparse: options.reparse,\n        leadChar: options.leadChar\n    });\n\n    // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and flags\n    // might now produce different results\n    XRegExp.cache.flush('patterns');\n};\n\n/**\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\n * the same pattern and flag combination, the cached copy of the regex is returned.\n *\n * @memberOf XRegExp\n * @param {String} pattern Regex pattern string.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @returns {RegExp} Cached XRegExp object.\n * @example\n *\n * let match;\n * while (match = XRegExp.cache('.', 'gs').exec('abc')) {\n *   // The regex is compiled once only\n * }\n */\nXRegExp.cache = (pattern, flags) => {\n    if (!regexCache[pattern]) {\n        regexCache[pattern] = {};\n    }\n    return regexCache[pattern][flags] || (\n        regexCache[pattern][flags] = XRegExp(pattern, flags)\n    );\n};\n\n// Intentionally undocumented; used in tests\nXRegExp.cache.flush = (cacheName) => {\n    if (cacheName === 'patterns') {\n        // Flush the pattern cache used by the `XRegExp` constructor\n        patternCache = {};\n    } else {\n        // Flush the regex cache populated by `XRegExp.cache`\n        regexCache = {};\n    }\n};\n\n/**\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\n * can safely be used at any position within a regex that uses any flags.\n *\n * @memberOf XRegExp\n * @param {String} str String to escape.\n * @returns {string} String with regex metacharacters escaped.\n * @example\n *\n * XRegExp.escape('Escaped? <.>');\n * // -> 'Escaped\\?\\u0020<\\.>'\n */\n// Following are the contexts where each metacharacter needs to be escaped because it would\n// otherwise have a special meaning, change the meaning of surrounding characters, or cause an\n// error. Context 'default' means outside character classes only.\n// - `\\` - context: all\n// - `[()*+?.$|` - context: default\n// - `]` - context: default with flag u or if forming the end of a character class\n// - `{}` - context: default with flag u or if part of a valid/complete quantifier pattern\n// - `,` - context: default if in a position that causes an unescaped `{` to turn into a quantifier.\n//   Ex: `/^a{1\\,2}$/` matches `'a{1,2}'`, but `/^a{1,2}$/` matches `'a'` or `'aa'`\n// - `#` and <whitespace> - context: default with flag x\n// - `^` - context: default, and context: class if it's the first character in the class\n// - `-` - context: class if part of a valid character class range\nXRegExp.escape = (str) => String(nullThrows(str)).\n    // Escape most special chars with a backslash\n    replace(/[\\\\\\[\\]{}()*+?.^$|]/g, '\\\\$&').\n    // Convert to \\uNNNN for special chars that can't be escaped when used with ES6 flag `u`\n    replace(/[\\s#\\-,]/g, (match) => `\\\\u${pad4(hex(match.charCodeAt(0)))}`);\n\n/**\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\n * regex uses named capture, named capture properties are included on the match array's `groups`\n * property. Optional `pos` and `sticky` arguments specify the search start position, and whether\n * the match must start at the specified position only. The `lastIndex` property of the provided\n * regex is not used, but is updated for compatibility. Also fixes browser bugs compared to the\n * native `RegExp.prototype.exec` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {Array} Match array with named capture properties on the `groups` object, or `null`. If\n *   the `namespacing` feature is off, named capture properties are directly on the match array.\n * @example\n *\n * // Basic use, with named capturing group\n * let match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\n * match.groups.hex; // -> '2620'\n *\n * // With pos and sticky, in a loop\n * let pos = 2, result = [], match;\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\n *   result.push(match[1]);\n *   pos = match.index + match[0].length;\n * }\n * // result -> ['2', '3', '4']\n */\nXRegExp.exec = (str, regex, pos, sticky) => {\n    let cacheKey = 'g';\n    let addY = false;\n    let fakeY = false;\n    let match;\n\n    addY = hasNativeY && !!(sticky || (regex.sticky && sticky !== false));\n    if (addY) {\n        cacheKey += 'y';\n    } else if (sticky) {\n        // Simulate sticky matching by appending an empty capture to the original regex. The\n        // resulting regex will succeed no matter what at the current index (set with `lastIndex`),\n        // and will not search the rest of the subject string. We'll know that the original regex\n        // has failed if that last capture is `''` rather than `undefined` (i.e., if that last\n        // capture participated in the match).\n        fakeY = true;\n        cacheKey += 'FakeY';\n    }\n\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n    // Shares cached copies with `XRegExp.match`/`replace`\n    const r2 = regex[REGEX_DATA][cacheKey] || (\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n            addG: true,\n            addY,\n            source: fakeY ? `${regex.source}|()` : undefined,\n            removeY: sticky === false,\n            isInternalOnly: true\n        })\n    );\n\n    pos = pos || 0;\n    r2.lastIndex = pos;\n\n    // Fixed `exec` required for `lastIndex` fix, named backreferences, etc.\n    match = fixed.exec.call(r2, str);\n\n    // Get rid of the capture added by the pseudo-sticky matcher if needed. An empty string means\n    // the original regexp failed (see above).\n    if (fakeY && match && match.pop() === '') {\n        match = null;\n    }\n\n    if (regex.global) {\n        regex.lastIndex = match ? r2.lastIndex : 0;\n    }\n\n    return match;\n};\n\n/**\n * Executes a provided function once per regex match. Searches always start at the beginning of the\n * string and continue until the end, regardless of the state of the regex's `global` property and\n * initial `lastIndex`.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\n *   - The match array, with named backreference properties.\n *   - The zero-based match index.\n *   - The string being traversed.\n *   - The regex object being used to traverse the string.\n * @example\n *\n * // Extracts every other digit from a string\n * const evens = [];\n * XRegExp.forEach('1a2345', /\\d/, (match, i) => {\n *   if (i % 2) evens.push(+match[0]);\n * });\n * // evens -> [2, 4]\n */\nXRegExp.forEach = (str, regex, callback) => {\n    let pos = 0;\n    let i = -1;\n    let match;\n\n    while ((match = XRegExp.exec(str, regex, pos))) {\n        // Because `regex` is provided to `callback`, the function could use the deprecated/\n        // nonstandard `RegExp.prototype.compile` to mutate the regex. However, since `XRegExp.exec`\n        // doesn't use `lastIndex` to set the search position, this can't lead to an infinite loop,\n        // at least. Actually, because of the way `XRegExp.exec` caches globalized versions of\n        // regexes, mutating the regex will not have any effect on the iteration or matched strings,\n        // which is a nice side effect that brings extra safety.\n        callback(match, ++i, str, regex);\n\n        pos = match.index + (match[0].length || 1);\n    }\n};\n\n/**\n * Copies a regex object and adds flag `g`. The copy maintains extended data, is augmented with\n * `XRegExp.prototype` properties, and has a fresh `lastIndex` property (set to zero). Native\n * regexes are not recompiled using XRegExp syntax.\n *\n * @memberOf XRegExp\n * @param {RegExp} regex Regex to globalize.\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\n * @example\n *\n * const globalCopy = XRegExp.globalize(/regex/);\n * globalCopy.global; // -> true\n */\nXRegExp.globalize = (regex) => copyRegex(regex, {addG: true});\n\n/**\n * Installs optional features according to the specified options. Can be undone using\n * `XRegExp.uninstall`.\n *\n * @memberOf XRegExp\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.install({\n *   // Enables support for astral code points in Unicode addons (implicitly sets flag A)\n *   astral: true,\n *\n *   // Adds named capture groups to the `groups` property of matches\n *   namespacing: true\n * });\n *\n * // With an options string\n * XRegExp.install('astral namespacing');\n */\nXRegExp.install = (options) => {\n    options = prepareOptions(options);\n\n    if (!features.astral && options.astral) {\n        setAstral(true);\n    }\n\n    if (!features.namespacing && options.namespacing) {\n        setNamespacing(true);\n    }\n};\n\n/**\n * Checks whether an individual optional feature is installed.\n *\n * @memberOf XRegExp\n * @param {String} feature Name of the feature to check. One of:\n *   - `astral`\n *   - `namespacing`\n * @returns {boolean} Whether the feature is installed.\n * @example\n *\n * XRegExp.isInstalled('astral');\n */\nXRegExp.isInstalled = (feature) => !!(features[feature]);\n\n/**\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\n * created in another frame, when `instanceof` and `constructor` checks would fail.\n *\n * @memberOf XRegExp\n * @param {*} value Object to check.\n * @returns {boolean} Whether the object is a `RegExp` object.\n * @example\n *\n * XRegExp.isRegExp('string'); // -> false\n * XRegExp.isRegExp(/regex/i); // -> true\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\n */\nXRegExp.isRegExp = (value) => Object.prototype.toString.call(value) === '[object RegExp]';\n// Same as `isType(value, 'RegExp')`, but avoiding that function call here for perf since\n// `isRegExp` is used heavily by internals including regex construction\n\n/**\n * Returns the first matched string, or in global mode, an array containing all matched strings.\n * This is essentially a more convenient re-implementation of `String.prototype.match` that gives\n * the result types you actually want (string instead of `exec`-style array in match-first mode,\n * and an empty array instead of `null` when no matches are found in match-all mode). It also lets\n * you override flag g and ignore `lastIndex`, and fixes browser bugs.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {String} [scope='one'] Use 'one' to return the first match as a string. Use 'all' to\n *   return an array of all matched strings. If not explicitly specified and `regex` uses flag g,\n *   `scope` is 'all'.\n * @returns {String|Array} In match-first mode: First match as a string, or `null`. In match-all\n *   mode: Array of all matched strings, or an empty array.\n * @example\n *\n * // Match first\n * XRegExp.match('abc', /\\w/); // -> 'a'\n * XRegExp.match('abc', /\\w/g, 'one'); // -> 'a'\n * XRegExp.match('abc', /x/g, 'one'); // -> null\n *\n * // Match all\n * XRegExp.match('abc', /\\w/g); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /\\w/, 'all'); // -> ['a', 'b', 'c']\n * XRegExp.match('abc', /x/, 'all'); // -> []\n */\nXRegExp.match = (str, regex, scope) => {\n    const global = (regex.global && scope !== 'one') || scope === 'all';\n    const cacheKey = ((global ? 'g' : '') + (regex.sticky ? 'y' : '')) || 'noGY';\n\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\n\n    // Shares cached copies with `XRegExp.exec`/`replace`\n    const r2 = regex[REGEX_DATA][cacheKey] || (\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\n            addG: !!global,\n            removeG: scope === 'one',\n            isInternalOnly: true\n        })\n    );\n\n    const result = String(nullThrows(str)).match(r2);\n\n    if (regex.global) {\n        regex.lastIndex = (\n            (scope === 'one' && result) ?\n                // Can't use `r2.lastIndex` since `r2` is nonglobal in this case\n                (result.index + result[0].length) : 0\n        );\n    }\n\n    return global ? (result || []) : (result && result[0]);\n};\n\n/**\n * Retrieves the matches from searching a string using a chain of regexes that successively search\n * within previous matches. The provided `chain` array can contain regexes and or objects with\n * `regex` and `backref` properties. When a backreference is specified, the named or numbered\n * backreference is passed forward to the next regex or returned.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {Array} chain Regexes that each search for matches within preceding results.\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\n * @example\n *\n * // Basic usage; matches numbers within <b> tags\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\n *   XRegExp('(?is)<b>.*?</b>'),\n *   /\\d+/\n * ]);\n * // -> ['2', '4', '56']\n *\n * // Passing forward and returning specific backreferences\n * const html = `<a href=\"http://xregexp.com/api/\">XRegExp</a>\n *               <a href=\"http://www.google.com/\">Google</a>`;\n * XRegExp.matchChain(html, [\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\n * ]);\n * // -> ['xregexp.com', 'www.google.com']\n */\nXRegExp.matchChain = (str, chain) => (function recurseChain(values, level) {\n    const item = chain[level].regex ? chain[level] : {regex: chain[level]};\n    const matches = [];\n\n    function addMatch(match) {\n        if (item.backref) {\n            const ERR_UNDEFINED_GROUP = `Backreference to undefined group: ${item.backref}`;\n            const isNamedBackref = isNaN(item.backref);\n\n            if (isNamedBackref && XRegExp.isInstalled('namespacing')) {\n                // `groups` has `null` as prototype, so using `in` instead of `hasOwnProperty`\n                if (!(match.groups && item.backref in match.groups)) {\n                    throw new ReferenceError(ERR_UNDEFINED_GROUP);\n                }\n            } else if (!match.hasOwnProperty(item.backref)) {\n                throw new ReferenceError(ERR_UNDEFINED_GROUP);\n            }\n\n            const backrefValue = isNamedBackref && XRegExp.isInstalled('namespacing') ?\n                match.groups[item.backref] :\n                match[item.backref];\n\n            matches.push(backrefValue || '');\n        } else {\n            matches.push(match[0]);\n        }\n    }\n\n    for (const value of values) {\n        XRegExp.forEach(value, item.regex, addMatch);\n    }\n\n    return ((level === chain.length - 1) || !matches.length) ?\n        matches :\n        recurseChain(matches, level + 1);\n}([str], 0));\n\n/**\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\n * or regex, and the replacement can be a string or a function to be called for each match. To\n * perform a global search and replace, use the optional `scope` argument or include flag g if using\n * a regex. Replacement strings can use `$<n>` or `${n}` for named and numbered backreferences.\n * Replacement functions can use named backreferences via the last argument. Also fixes browser bugs\n * compared to the native `String.prototype.replace` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n *   Replacement strings can include special replacement syntax:\n *     - $$ - Inserts a literal $ character.\n *     - $&, $0 - Inserts the matched substring.\n *     - $` - Inserts the string that precedes the matched substring (left context).\n *     - $' - Inserts the string that follows the matched substring (right context).\n *     - $n, $nn - Where n/nn are digits referencing an existing capturing group, inserts\n *       backreference n/nn.\n *     - $<n>, ${n} - Where n is a name or any number of digits that reference an existing capturing\n *       group, inserts backreference n.\n *   Replacement functions are invoked with three or more arguments:\n *     - args[0] - The matched substring (corresponds to `$&` above). If the `namespacing` feature\n *       is off, named backreferences are accessible as properties of this argument.\n *     - args[1..n] - One argument for each backreference (corresponding to `$1`, `$2`, etc. above).\n *       If the regex has no capturing groups, no arguments appear in this position.\n *     - args[n+1] - The zero-based index of the match within the entire search string.\n *     - args[n+2] - The total string being searched.\n *     - args[n+3] - If the the search pattern is a regex with named capturing groups, the last\n *       argument is the groups object. Its keys are the backreference names and its values are the\n *       backreference values. If the `namespacing` feature is off, this argument is not present.\n * @param {String} [scope] Use 'one' to replace the first match only, or 'all'. Defaults to 'one'.\n *   Defaults to 'all' if using a regex with flag g.\n * @returns {String} New string with one or all matches replaced.\n * @example\n *\n * // Regex search, using named backreferences in replacement string\n * const name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\n * XRegExp.replace('John Smith', name, '$<last>, $<first>');\n * // -> 'Smith, John'\n *\n * // Regex search, using named backreferences in replacement function\n * XRegExp.replace('John Smith', name, (...args) => {\n *   const groups = args[args.length - 1];\n *   return `${groups.last}, ${groups.first}`;\n * });\n * // -> 'Smith, John'\n *\n * // String search, with replace-all\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\n * // -> 'XRegExp builds XRegExps'\n */\nXRegExp.replace = (str, search, replacement, scope) => {\n    const isRegex = XRegExp.isRegExp(search);\n    const global = (search.global && scope !== 'one') || scope === 'all';\n    const cacheKey = ((global ? 'g' : '') + (search.sticky ? 'y' : '')) || 'noGY';\n    let s2 = search;\n\n    if (isRegex) {\n        search[REGEX_DATA] = search[REGEX_DATA] || {};\n\n        // Shares cached copies with `XRegExp.exec`/`match`. Since a copy is used, `search`'s\n        // `lastIndex` isn't updated *during* replacement iterations\n        s2 = search[REGEX_DATA][cacheKey] || (\n            search[REGEX_DATA][cacheKey] = copyRegex(search, {\n                addG: !!global,\n                removeG: scope === 'one',\n                isInternalOnly: true\n            })\n        );\n    } else if (global) {\n        s2 = new RegExp(XRegExp.escape(String(search)), 'g');\n    }\n\n    // Fixed `replace` required for named backreferences, etc.\n    const result = fixed.replace.call(nullThrows(str), s2, replacement);\n\n    if (isRegex && search.global) {\n        // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n        search.lastIndex = 0;\n    }\n\n    return result;\n};\n\n/**\n * Performs batch processing of string replacements. Used like `XRegExp.replace`, but accepts an\n * array of replacement details. Later replacements operate on the output of earlier replacements.\n * Replacement details are accepted as an array with a regex or string to search for, the\n * replacement string or function, and an optional scope of 'one' or 'all'. Uses the XRegExp\n * replacement text syntax, which supports named backreference properties via `$<name>` or\n * `${name}`.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {Array} replacements Array of replacement detail arrays.\n * @returns {String} New string with all replacements.\n * @example\n *\n * str = XRegExp.replaceEach(str, [\n *   [XRegExp('(?<name>a)'), 'z$<name>'],\n *   [/b/gi, 'y'],\n *   [/c/g, 'x', 'one'], // scope 'one' overrides /g\n *   [/d/, 'w', 'all'],  // scope 'all' overrides lack of /g\n *   ['e', 'v', 'all'],  // scope 'all' allows replace-all for strings\n *   [/f/g, (match) => match.toUpperCase()]\n * ]);\n */\nXRegExp.replaceEach = (str, replacements) => {\n    for (const r of replacements) {\n        str = XRegExp.replace(str, r[0], r[1], r[2]);\n    }\n\n    return str;\n};\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * XRegExp.split('a b c', ' ');\n * // -> ['a', 'b', 'c']\n *\n * // With limit\n * XRegExp.split('a b c', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', '..']\n */\nXRegExp.split = (str, separator, limit) => fixed.split.call(nullThrows(str), separator, limit);\n\n/**\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\n * `sticky` arguments specify the search start position, and whether the match must start at the\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\n * updated for compatibility. Also fixes browser bugs compared to the native\n * `RegExp.prototype.test` and can be used reliably cross-browser.\n *\n * @memberOf XRegExp\n * @param {String} str String to search.\n * @param {RegExp} regex Regex to search with.\n * @param {Number} [pos=0] Zero-based index at which to start the search.\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\n * @returns {boolean} Whether the regex matched the provided value.\n * @example\n *\n * // Basic use\n * XRegExp.test('abc', /c/); // -> true\n *\n * // With pos and sticky\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\n * XRegExp.test('abc', /c/, 2, 'sticky'); // -> true\n */\n// Do this the easy way :-)\nXRegExp.test = (str, regex, pos, sticky) => !!XRegExp.exec(str, regex, pos, sticky);\n\n/**\n * Uninstalls optional features according to the specified options. Used to undo the actions of\n * `XRegExp.install`.\n *\n * @memberOf XRegExp\n * @param {Object|String} options Options object or string.\n * @example\n *\n * // With an options object\n * XRegExp.uninstall({\n *   // Disables support for astral code points in Unicode addons (unless enabled per regex)\n *   astral: true,\n *\n *   // Don't add named capture groups to the `groups` property of matches\n *   namespacing: true\n * });\n *\n * // With an options string\n * XRegExp.uninstall('astral namespacing');\n */\nXRegExp.uninstall = (options) => {\n    options = prepareOptions(options);\n\n    if (features.astral && options.astral) {\n        setAstral(false);\n    }\n\n    if (features.namespacing && options.namespacing) {\n        setNamespacing(false);\n    }\n};\n\n/**\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\n * Backreferences in provided regex objects are automatically renumbered to work correctly within\n * the larger combined pattern. Native flags used by provided regexes are ignored in favor of the\n * `flags` argument.\n *\n * @memberOf XRegExp\n * @param {Array} patterns Regexes and strings to combine.\n * @param {String} [flags] Any combination of XRegExp flags.\n * @param {Object} [options] Options object with optional properties:\n *   - `conjunction` {String} Type of conjunction to use: 'or' (default) or 'none'.\n * @returns {RegExp} Union of the provided regexes and strings.\n * @example\n *\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\n *\n * XRegExp.union([/man/, /bear/, /pig/], 'i', {conjunction: 'none'});\n * // -> /manbearpig/i\n */\nXRegExp.union = (patterns, flags, options) => {\n    options = options || {};\n    const conjunction = options.conjunction || 'or';\n    let numCaptures = 0;\n    let numPriorCaptures;\n    let captureNames;\n\n    function rewrite(match, paren, backref) {\n        const name = captureNames[numCaptures - numPriorCaptures];\n\n        // Capturing group\n        if (paren) {\n            ++numCaptures;\n            // If the current capture has a name, preserve the name\n            if (name) {\n                return `(?<${name}>`;\n            }\n        // Backreference\n        } else if (backref) {\n            // Rewrite the backreference\n            return `\\\\${+backref + numPriorCaptures}`;\n        }\n\n        return match;\n    }\n\n    if (!(isType(patterns, 'Array') && patterns.length)) {\n        throw new TypeError('Must provide a nonempty array of patterns to merge');\n    }\n\n    const parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/g;\n    const output = [];\n    for (const pattern of patterns) {\n        if (XRegExp.isRegExp(pattern)) {\n            numPriorCaptures = numCaptures;\n            captureNames = (pattern[REGEX_DATA] && pattern[REGEX_DATA].captureNames) || [];\n\n            // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns are\n            // independently valid; helps keep this simple. Named captures are put back\n            output.push(XRegExp(pattern.source).source.replace(parts, rewrite));\n        } else {\n            output.push(XRegExp.escape(pattern));\n        }\n    }\n\n    const separator = conjunction === 'none' ? '' : '|';\n    return XRegExp(output.join(separator), flags);\n};\n\n// ==--------------------------==\n// Fixed/extended native methods\n// ==--------------------------==\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `RegExp.prototype.exec`. Use via `XRegExp.exec`.\n *\n * @memberOf RegExp\n * @param {String} str String to search.\n * @returns {Array} Match array with named backreference properties, or `null`.\n */\nfixed.exec = function(str) {\n    const origLastIndex = this.lastIndex;\n    const match = RegExp.prototype.exec.apply(this, arguments);\n\n    if (match) {\n        // Fix browsers whose `exec` methods don't return `undefined` for nonparticipating capturing\n        // groups. This fixes IE 5.5-8, but not IE 9's quirks mode or emulation of older IEs. IE 9\n        // in standards mode follows the spec.\n        if (!correctExecNpcg && match.length > 1 && match.includes('')) {\n            const r2 = copyRegex(this, {\n                removeG: true,\n                isInternalOnly: true\n            });\n            // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\n            // matching due to characters outside the match\n            String(str).slice(match.index).replace(r2, (...args) => {\n                const len = args.length;\n                // Skip index 0 and the last 2\n                for (let i = 1; i < len - 2; ++i) {\n                    if (args[i] === undefined) {\n                        match[i] = undefined;\n                    }\n                }\n            });\n        }\n\n        // Attach named capture properties\n        if (this[REGEX_DATA] && this[REGEX_DATA].captureNames) {\n            let groupsObject = match;\n            if (XRegExp.isInstalled('namespacing')) {\n                // https://tc39.github.io/proposal-regexp-named-groups/#sec-regexpbuiltinexec\n                match.groups = Object.create(null);\n                groupsObject = match.groups;\n            }\n            // Skip index 0\n            for (let i = 1; i < match.length; ++i) {\n                const name = this[REGEX_DATA].captureNames[i - 1];\n                if (name) {\n                    groupsObject[name] = match[i];\n                }\n            }\n        // Preserve any existing `groups` obj that came from native ES2018 named capture\n        } else if (!match.groups && XRegExp.isInstalled('namespacing')) {\n            match.groups = undefined;\n        }\n\n        // Fix browsers that increment `lastIndex` after zero-length matches\n        if (this.global && !match[0].length && (this.lastIndex > match.index)) {\n            this.lastIndex = match.index;\n        }\n    }\n\n    if (!this.global) {\n        // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n        this.lastIndex = origLastIndex;\n    }\n\n    return match;\n};\n\n/**\n * Fixes browser bugs in the native `RegExp.prototype.test`.\n *\n * @memberOf RegExp\n * @param {String} str String to search.\n * @returns {boolean} Whether the regex matched the provided value.\n */\nfixed.test = function(str) {\n    // Do this the easy way :-)\n    return !!fixed.exec.call(this, str);\n};\n\n/**\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\n * bugs in the native `String.prototype.match`.\n *\n * @memberOf String\n * @param {RegExp|*} regex Regex to search with. If not a regex object, it is passed to `RegExp`.\n * @returns {Array} If `regex` uses flag g, an array of match strings or `null`. Without flag g,\n *   the result of calling `regex.exec(this)`.\n */\nfixed.match = function(regex) {\n    if (!XRegExp.isRegExp(regex)) {\n        // Use the native `RegExp` rather than `XRegExp`\n        regex = new RegExp(regex);\n    } else if (regex.global) {\n        const result = String.prototype.match.apply(this, arguments);\n        // Fixes IE bug\n        regex.lastIndex = 0;\n\n        return result;\n    }\n\n    return fixed.exec.call(regex, nullThrows(this));\n};\n\n/**\n * Adds support for `${n}` (or `$<n>`) tokens for named and numbered backreferences in replacement\n * text, and provides named backreferences to replacement functions as `arguments[0].name`. Also\n * fixes browser bugs in replacement text syntax when performing a replacement using a nonregex\n * search value, and the value of a replacement regex's `lastIndex` property during replacement\n * iterations and upon completion. Note that this doesn't support SpiderMonkey's proprietary third\n * (`flags`) argument. Use via `XRegExp.replace`.\n *\n * @memberOf String\n * @param {RegExp|String} search Search pattern to be replaced.\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\n * @returns {string} New string with one or all matches replaced.\n */\nfixed.replace = function(search, replacement) {\n    const isRegex = XRegExp.isRegExp(search);\n    let origLastIndex;\n    let captureNames;\n    let result;\n\n    if (isRegex) {\n        if (search[REGEX_DATA]) {\n            ({captureNames} = search[REGEX_DATA]);\n        }\n        // Only needed if `search` is nonglobal\n        origLastIndex = search.lastIndex;\n    } else {\n        search += ''; // Type-convert\n    }\n\n    // Don't use `typeof`; some older browsers return 'function' for regex objects\n    if (isType(replacement, 'Function')) {\n        // Stringifying `this` fixes a bug in IE < 9 where the last argument in replacement\n        // functions isn't type-converted to a string\n        result = String(this).replace(search, (...args) => {\n            if (captureNames) {\n                let groupsObject;\n\n                if (XRegExp.isInstalled('namespacing')) {\n                    // https://tc39.github.io/proposal-regexp-named-groups/#sec-regexpbuiltinexec\n                    groupsObject = Object.create(null);\n                    args.push(groupsObject);\n                } else {\n                    // Change the `args[0]` string primitive to a `String` object that can store\n                    // properties. This really does need to use `String` as a constructor\n                    args[0] = new String(args[0]);\n                    [groupsObject] = args;\n                }\n\n                // Store named backreferences\n                for (let i = 0; i < captureNames.length; ++i) {\n                    if (captureNames[i]) {\n                        groupsObject[captureNames[i]] = args[i + 1];\n                    }\n                }\n            }\n            // ES6 specs the context for replacement functions as `undefined`\n            return replacement(...args);\n        });\n    } else {\n        // Ensure that the last value of `args` will be a string when given nonstring `this`,\n        // while still throwing on null or undefined context\n        result = String(nullThrows(this)).replace(search, (...args) => {\n            return String(replacement).replace(replacementToken, replacer);\n\n            function replacer($0, bracketed, angled, dollarToken) {\n                bracketed = bracketed || angled;\n\n                // ES2018 added a new trailing `groups` arg that's passed to replacement functions\n                // when the search regex uses native named capture\n                const numNonCaptureArgs = isType(args[args.length - 1], 'Object') ? 4 : 3;\n                const numCaptures = args.length - numNonCaptureArgs;\n\n                // Handle named or numbered backreference with curly or angled braces: ${n}, $<n>\n                if (bracketed) {\n                    // Handle backreference to numbered capture, if `bracketed` is an integer. Use\n                    // `0` for the entire match. Any number of leading zeros may be used.\n                    if (/^\\d+$/.test(bracketed)) {\n                        // Type-convert and drop leading zeros\n                        const n = +bracketed;\n                        if (n <= numCaptures) {\n                            return args[n] || '';\n                        }\n                    }\n\n                    // Handle backreference to named capture. If the name does not refer to an\n                    // existing capturing group, it's an error. Also handles the error for numbered\n                    // backference that does not refer to an existing group.\n                    // Using `indexOf` since having groups with the same name is already an error,\n                    // otherwise would need `lastIndexOf`.\n                    const n = captureNames ? captureNames.indexOf(bracketed) : -1;\n                    if (n < 0) {\n                        throw new SyntaxError(`Backreference to undefined group ${$0}`);\n                    }\n                    return args[n + 1] || '';\n                }\n\n                // Handle `$`-prefixed variable\n                // Handle space/blank first because type conversion with `+` drops space padding\n                // and converts spaces and empty strings to `0`\n                if (dollarToken === '' || dollarToken === ' ') {\n                    throw new SyntaxError(`Invalid token ${$0}`);\n                }\n                if (dollarToken === '&' || +dollarToken === 0) { // $&, $0 (not followed by 1-9), $00\n                    return args[0];\n                }\n                if (dollarToken === '$') { // $$\n                    return '$';\n                }\n                if (dollarToken === '`') { // $` (left context)\n                    return args[args.length - 1].slice(0, args[args.length - 2]);\n                }\n                if (dollarToken === \"'\") { // $' (right context)\n                    return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\n                }\n\n                // Handle numbered backreference without braces\n                // Type-convert and drop leading zero\n                dollarToken = +dollarToken;\n                // XRegExp behavior for `$n` and `$nn`:\n                // - Backrefs end after 1 or 2 digits. Use `${..}` or `$<..>` for more digits.\n                // - `$1` is an error if no capturing groups.\n                // - `$10` is an error if less than 10 capturing groups. Use `${1}0` or `$<1>0`\n                //   instead.\n                // - `$01` is `$1` if at least one capturing group, else it's an error.\n                // - `$0` (not followed by 1-9) and `$00` are the entire match.\n                // Native behavior, for comparison:\n                // - Backrefs end after 1 or 2 digits. Cannot reference capturing group 100+.\n                // - `$1` is a literal `$1` if no capturing groups.\n                // - `$10` is `$1` followed by a literal `0` if less than 10 capturing groups.\n                // - `$01` is `$1` if at least one capturing group, else it's a literal `$01`.\n                // - `$0` is a literal `$0`.\n                if (!isNaN(dollarToken)) {\n                    if (dollarToken > numCaptures) {\n                        throw new SyntaxError(`Backreference to undefined group ${$0}`);\n                    }\n                    return args[dollarToken] || '';\n                }\n\n                // `$` followed by an unsupported char is an error, unlike native JS\n                throw new SyntaxError(`Invalid token ${$0}`);\n            }\n        });\n    }\n\n    if (isRegex) {\n        if (search.global) {\n            // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\n            search.lastIndex = 0;\n        } else {\n            // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\n            search.lastIndex = origLastIndex;\n        }\n    }\n\n    return result;\n};\n\n/**\n * Fixes browser bugs in the native `String.prototype.split`. Use via `XRegExp.split`.\n *\n * @memberOf String\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {!Array} Array of substrings.\n */\nfixed.split = function(separator, limit) {\n    if (!XRegExp.isRegExp(separator)) {\n        // Browsers handle nonregex split correctly, so use the faster native method\n        return String.prototype.split.apply(this, arguments);\n    }\n\n    const str = String(this);\n    const output = [];\n    const origLastIndex = separator.lastIndex;\n    let lastLastIndex = 0;\n    let lastLength;\n\n    // Values for `limit`, per the spec:\n    // If undefined: pow(2,32) - 1\n    // If 0, Infinity, or NaN: 0\n    // If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\n    // If negative number: pow(2,32) - floor(abs(limit))\n    // If other: Type-convert, then use the above rules\n    // This line fails in very strange ways for some values of `limit` in Opera 10.5-10.63, unless\n    // Opera Dragonfly is open (go figure). It works in at least Opera 9.5-10.1 and 11+\n    limit = (limit === undefined ? -1 : limit) >>> 0;\n\n    XRegExp.forEach(str, separator, (match) => {\n        // This condition is not the same as `if (match[0].length)`\n        if ((match.index + match[0].length) > lastLastIndex) {\n            output.push(str.slice(lastLastIndex, match.index));\n            if (match.length > 1 && match.index < str.length) {\n                Array.prototype.push.apply(output, match.slice(1));\n            }\n            lastLength = match[0].length;\n            lastLastIndex = match.index + lastLength;\n        }\n    });\n\n    if (lastLastIndex === str.length) {\n        if (!separator.test('') || lastLength) {\n            output.push('');\n        }\n    } else {\n        output.push(str.slice(lastLastIndex));\n    }\n\n    separator.lastIndex = origLastIndex;\n    return output.length > limit ? output.slice(0, limit) : output;\n};\n\n// ==--------------------------==\n// Built-in syntax/flag tokens\n// ==--------------------------==\n\n/*\n * Letter escapes that natively match literal characters: `\\a`, `\\A`, etc. These should be\n * SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-browser\n * consistency and to reserve their syntax, but lets them be superseded by addons.\n */\nXRegExp.addToken(\n    /\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|x(?![\\dA-Fa-f]{2}))/,\n    (match, scope) => {\n        // \\B is allowed in default scope only\n        if (match[1] === 'B' && scope === defaultScope) {\n            return match[0];\n        }\n        throw new SyntaxError(`Invalid escape ${match[0]}`);\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Unicode code point escape with curly braces: `\\u{N..}`. `N..` is any one or more digit\n * hexadecimal number from 0-10FFFF, and can include leading zeros. Requires the native ES6 `u` flag\n * to support code points greater than U+FFFF. Avoids converting code points above U+FFFF to\n * surrogate pairs (which could be done without flag `u`), since that could lead to broken behavior\n * if you follow a `\\u{N..}` token that references a code point above U+FFFF with a quantifier, or\n * if you use the same in a character class.\n */\nXRegExp.addToken(\n    /\\\\u{([\\dA-Fa-f]+)}/,\n    (match, scope, flags) => {\n        const code = dec(match[1]);\n        if (code > 0x10FFFF) {\n            throw new SyntaxError(`Invalid Unicode code point ${match[0]}`);\n        }\n        if (code <= 0xFFFF) {\n            // Converting to \\uNNNN avoids needing to escape the literal character and keep it\n            // separate from preceding tokens\n            return `\\\\u${pad4(hex(code))}`;\n        }\n        // If `code` is between 0xFFFF and 0x10FFFF, require and defer to native handling\n        if (hasNativeU && flags.includes('u')) {\n            return match[0];\n        }\n        throw new SyntaxError('Cannot use Unicode code point above \\\\u{FFFF} without flag u');\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Comment pattern: `(?# )`. Inline comments are an alternative to the line comments allowed in\n * free-spacing mode (flag x).\n */\nXRegExp.addToken(\n    /\\(\\?#[^)]*\\)/,\n    getContextualTokenSeparator,\n    {leadChar: '('}\n);\n\n/*\n * Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\n */\nXRegExp.addToken(\n    /\\s+|#[^\\n]*\\n?/,\n    getContextualTokenSeparator,\n    {flag: 'x'}\n);\n\n/*\n * Dot, in dotAll mode (aka singleline mode, flag s) only.\n */\nif (!hasNativeS) {\n    XRegExp.addToken(\n        /\\./,\n        () => '[\\\\s\\\\S]',\n        {\n            flag: 's',\n            leadChar: '.'\n        }\n    );\n}\n\n/*\n * Named backreference: `\\k<name>`. Backreference names can use RegExpIdentifierName characters\n * only. Also allows numbered backreferences as `\\k<n>`.\n */\nXRegExp.addToken(\n    /\\\\k<([^>]+)>/,\n    function(match) {\n        // Groups with the same name is an error, else would need `lastIndexOf`\n        const index = isNaN(match[1]) ? (this.captureNames.indexOf(match[1]) + 1) : +match[1];\n        const endIndex = match.index + match[0].length;\n        if (!index || index > this.captureNames.length) {\n            throw new SyntaxError(`Backreference to undefined group ${match[0]}`);\n        }\n        // Keep backreferences separate from subsequent literal numbers. This avoids e.g.\n        // inadvertedly changing `(?<n>)\\k<n>1` to `()\\11`.\n        return `\\\\${index}${\n            endIndex === match.input.length || isNaN(match.input[endIndex]) ?\n                '' : '(?:)'\n        }`;\n    },\n    {leadChar: '\\\\'}\n);\n\n/*\n * Numbered backreference or octal, plus any following digits: `\\0`, `\\11`, etc. Octals except `\\0`\n * not followed by 0-9 and backreferences to unopened capture groups throw an error. Other matches\n * are returned unaltered. IE < 9 doesn't support backreferences above `\\99` in regex syntax.\n */\nXRegExp.addToken(\n    /\\\\(\\d+)/,\n    function(match, scope) {\n        if (\n            !(\n                scope === defaultScope &&\n                /^[1-9]/.test(match[1]) &&\n                +match[1] <= this.captureNames.length\n            ) &&\n            match[1] !== '0'\n        ) {\n            throw new SyntaxError(`Cannot use octal escape or backreference to undefined group ${match[0]}`);\n        }\n        return match[0];\n    },\n    {\n        scope: 'all',\n        leadChar: '\\\\'\n    }\n);\n\n/*\n * Named capturing group; match the opening delimiter only: `(?<name>`. Capture names can use the\n * RegExpIdentifierName characters only. Names can't be integers. Supports Python-style\n * `(?P<name>` as an alternate syntax to avoid issues in some older versions of Opera which natively\n * supported the Python-style syntax. Otherwise, XRegExp might treat numbered backreferences to\n * Python-style named capture as octals.\n */\nXRegExp.addToken(\n    /\\(\\?P?<([\\p{ID_Start}$_][\\p{ID_Continue}$_\\u200C\\u200D]*)>/u,\n    function(match) {\n        if (!XRegExp.isInstalled('namespacing') && (match[1] === 'length' || match[1] === '__proto__')) {\n            throw new SyntaxError(`Cannot use reserved word as capture name ${match[0]}`);\n        }\n        if (this.captureNames.includes(match[1])) {\n            throw new SyntaxError(`Cannot use same name for multiple groups ${match[0]}`);\n        }\n        this.captureNames.push(match[1]);\n        this.hasNamedCapture = true;\n        return '(';\n    },\n    {leadChar: '('}\n);\n\n/*\n * Capturing group; match the opening parenthesis only. Required for support of named capturing\n * groups. Also adds explicit capture mode (flag n).\n */\nXRegExp.addToken(\n    /\\((?!\\?)/,\n    function(match, scope, flags) {\n        if (flags.includes('n')) {\n            return '(?:';\n        }\n        this.captureNames.push(null);\n        return '(';\n    },\n    {\n        optionalFlags: 'n',\n        leadChar: '('\n    }\n);\n\nexport default XRegExp;\n","/*!\n * XRegExp.build 5.1.0\n * <xregexp.com>\n * Steven Levithan (c) 2012-present MIT License\n */\n\nexport default (XRegExp) => {\n    const REGEX_DATA = 'xregexp';\n    const subParts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/g;\n    const parts = XRegExp.union([/\\({{([\\w$]+)}}\\)|{{([\\w$]+)}}/, subParts], 'g', {\n        conjunction: 'or'\n    });\n\n    /**\n     * Strips a leading `^` and trailing unescaped `$`, if both are present.\n     *\n     * @private\n     * @param {String} pattern Pattern to process.\n     * @returns {String} Pattern with edge anchors removed.\n     */\n    function deanchor(pattern) {\n        // Allow any number of empty noncapturing groups before/after anchors, because regexes\n        // built/generated by XRegExp sometimes include them\n        const leadingAnchor = /^(?:\\(\\?:\\))*\\^/;\n        const trailingAnchor = /\\$(?:\\(\\?:\\))*$/;\n\n        if (\n            leadingAnchor.test(pattern) &&\n            trailingAnchor.test(pattern) &&\n            // Ensure that the trailing `$` isn't escaped\n            trailingAnchor.test(pattern.replace(/\\\\[\\s\\S]/g, ''))\n        ) {\n            return pattern.replace(leadingAnchor, '').replace(trailingAnchor, '');\n        }\n\n        return pattern;\n    }\n\n    /**\n     * Converts the provided value to an XRegExp. Native RegExp flags are not preserved.\n     *\n     * @private\n     * @param {String|RegExp} value Value to convert.\n     * @param {Boolean} [addFlagX] Whether to apply the `x` flag in cases when `value` is not\n     *   already a regex generated by XRegExp\n     * @returns {RegExp} XRegExp object with XRegExp syntax applied.\n     */\n    function asXRegExp(value, addFlagX) {\n        const flags = addFlagX ? 'x' : '';\n        return XRegExp.isRegExp(value) ?\n            (value[REGEX_DATA] && value[REGEX_DATA].captureNames ?\n                // Don't recompile, to preserve capture names\n                value :\n                // Recompile as XRegExp\n                XRegExp(value.source, flags)\n            ) :\n            // Compile string as XRegExp\n            XRegExp(value, flags);\n    }\n\n    function interpolate(substitution) {\n        return substitution instanceof RegExp ? substitution : XRegExp.escape(substitution);\n    }\n\n    function reduceToSubpatternsObject(subpatterns, interpolated, subpatternIndex) {\n        subpatterns[`subpattern${subpatternIndex}`] = interpolated;\n        return subpatterns;\n    }\n\n    function embedSubpatternAfter(raw, subpatternIndex, rawLiterals) {\n        const hasSubpattern = subpatternIndex < rawLiterals.length - 1;\n        return raw + (hasSubpattern ? `{{subpattern${subpatternIndex}}}` : '');\n    }\n\n    /**\n     * Provides tagged template literals that create regexes with XRegExp syntax and flags. The\n     * provided pattern is handled as a raw string, so backslashes don't need to be escaped.\n     *\n     * Interpolation of strings and regexes shares the features of `XRegExp.build`. Interpolated\n     * patterns are treated as atomic units when quantified, interpolated strings have their special\n     * characters escaped, a leading `^` and trailing unescaped `$` are stripped from interpolated\n     * regexes if both are present, and any backreferences within an interpolated regex are\n     * rewritten to work within the overall pattern.\n     *\n     * @memberOf XRegExp\n     * @param {String} [flags] Any combination of XRegExp flags.\n     * @returns {Function} Handler for template literals that construct regexes with XRegExp syntax.\n     * @example\n     *\n     * XRegExp.tag()`\\b\\w+\\b`.test('word'); // -> true\n     *\n     * const hours = /1[0-2]|0?[1-9]/;\n     * const minutes = /(?<minutes>[0-5][0-9])/;\n     * const time = XRegExp.tag('x')`\\b ${hours} : ${minutes} \\b`;\n     * time.test('10:59'); // -> true\n     * XRegExp.exec('10:59', time).groups.minutes; // -> '59'\n     *\n     * const backref1 = /(a)\\1/;\n     * const backref2 = /(b)\\1/;\n     * XRegExp.tag()`${backref1}${backref2}`.test('aabb'); // -> true\n     */\n    XRegExp.tag = (flags) => (literals, ...substitutions) => {\n        const subpatterns = substitutions.map(interpolate).reduce(reduceToSubpatternsObject, {});\n        const pattern = literals.raw.map(embedSubpatternAfter).join('');\n        return XRegExp.build(pattern, subpatterns, flags);\n    };\n\n    /**\n     * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in\n     * the outer pattern and provided subpatterns are automatically renumbered to work correctly.\n     * Native flags used by provided subpatterns are ignored in favor of the `flags` argument.\n     *\n     * @memberOf XRegExp\n     * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows\n     *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within\n     *   character classes.\n     * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A\n     *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.\n     * @param {String} [flags] Any combination of XRegExp flags.\n     * @returns {RegExp} Regex with interpolated subpatterns.\n     * @example\n     *\n     * const time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {\n     *   hours: XRegExp.build('{{h12}} : | {{h24}}', {\n     *     h12: /1[0-2]|0?[1-9]/,\n     *     h24: /2[0-3]|[01][0-9]/\n     *   }, 'x'),\n     *   minutes: /^[0-5][0-9]$/\n     * });\n     * time.test('10:59'); // -> true\n     * XRegExp.exec('10:59', time).groups.minutes; // -> '59'\n     */\n    XRegExp.build = (pattern, subs, flags) => {\n        flags = flags || '';\n        // Used with `asXRegExp` calls for `pattern` and subpatterns in `subs`, to work around how\n        // some browsers convert `RegExp('\\n')` to a regex that contains the literal characters `\\`\n        // and `n`. See more details at <https://github.com/slevithan/xregexp/pull/163>.\n        const addFlagX = flags.includes('x');\n        const inlineFlags = /^\\(\\?([\\w$]+)\\)/.exec(pattern);\n        // Add flags within a leading mode modifier to the overall pattern's flags\n        if (inlineFlags) {\n            flags = XRegExp._clipDuplicates(flags + inlineFlags[1]);\n        }\n\n        const data = {};\n        for (const p in subs) {\n            if (subs.hasOwnProperty(p)) {\n                // Passing to XRegExp enables extended syntax and ensures independent validity,\n                // lest an unescaped `(`, `)`, `[`, or trailing `\\` breaks the `(?:)` wrapper. For\n                // subpatterns provided as native regexes, it dies on octals and adds the property\n                // used to hold extended regex instance data, for simplicity.\n                const sub = asXRegExp(subs[p], addFlagX);\n                data[p] = {\n                    // Deanchoring allows embedding independently useful anchored regexes. If you\n                    // really need to keep your anchors, double them (i.e., `^^...$$`).\n                    pattern: deanchor(sub.source),\n                    names: sub[REGEX_DATA].captureNames || []\n                };\n            }\n        }\n\n        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;\n        // helps keep this simple. Named captures will be put back.\n        const patternAsRegex = asXRegExp(pattern, addFlagX);\n\n        // 'Caps' is short for 'captures'\n        let numCaps = 0;\n        let numPriorCaps;\n        let numOuterCaps = 0;\n        const outerCapsMap = [0];\n        const outerCapNames = patternAsRegex[REGEX_DATA].captureNames || [];\n        const output = patternAsRegex.source.replace(parts, ($0, $1, $2, $3, $4) => {\n            const subName = $1 || $2;\n            let capName;\n            let intro;\n            let localCapIndex;\n            // Named subpattern\n            if (subName) {\n                if (!data.hasOwnProperty(subName)) {\n                    throw new ReferenceError(`Undefined property ${$0}`);\n                }\n                // Named subpattern was wrapped in a capturing group\n                if ($1) {\n                    capName = outerCapNames[numOuterCaps];\n                    outerCapsMap[++numOuterCaps] = ++numCaps;\n                    // If it's a named group, preserve the name. Otherwise, use the subpattern name\n                    // as the capture name\n                    intro = `(?<${capName || subName}>`;\n                } else {\n                    intro = '(?:';\n                }\n                numPriorCaps = numCaps;\n                const rewrittenSubpattern = data[subName].pattern.replace(subParts, (match, paren, backref) => {\n                    // Capturing group\n                    if (paren) {\n                        capName = data[subName].names[numCaps - numPriorCaps];\n                        ++numCaps;\n                        // If the current capture has a name, preserve the name\n                        if (capName) {\n                            return `(?<${capName}>`;\n                        }\n                    // Backreference\n                    } else if (backref) {\n                        localCapIndex = +backref - 1;\n                        // Rewrite the backreference\n                        return data[subName].names[localCapIndex] ?\n                            // Need to preserve the backreference name in case using flag `n`\n                            `\\\\k<${data[subName].names[localCapIndex]}>` :\n                            `\\\\${+backref + numPriorCaps}`;\n                    }\n                    return match;\n                });\n                return `${intro}${rewrittenSubpattern})`;\n            }\n            // Capturing group\n            if ($3) {\n                capName = outerCapNames[numOuterCaps];\n                outerCapsMap[++numOuterCaps] = ++numCaps;\n                // If the current capture has a name, preserve the name\n                if (capName) {\n                    return `(?<${capName}>`;\n                }\n            // Backreference\n            } else if ($4) {\n                localCapIndex = +$4 - 1;\n                // Rewrite the backreference\n                return outerCapNames[localCapIndex] ?\n                    // Need to preserve the backreference name in case using flag `n`\n                    `\\\\k<${outerCapNames[localCapIndex]}>` :\n                    `\\\\${outerCapsMap[+$4]}`;\n            }\n            return $0;\n        });\n\n        return XRegExp(output, flags);\n    };\n};\n","/*!\n * XRegExp.matchRecursive 5.1.0\n * <xregexp.com>\n * Steven Levithan (c) 2009-present MIT License\n */\n\nexport default (XRegExp) => {\n\n    /**\n     * Returns a match detail object composed of the provided values.\n     *\n     * @private\n     */\n    function row(name, value, start, end) {\n        return {\n            name,\n            value,\n            start,\n            end\n        };\n    }\n\n    /**\n     * Returns an array of match strings between outermost left and right delimiters, or an array of\n     * objects with detailed match parts and position data. By default, an error is thrown if\n     * delimiters are unbalanced within the subject string.\n     *\n     * @memberOf XRegExp\n     * @param {String} str String to search.\n     * @param {String} left Left delimiter as an XRegExp pattern.\n     * @param {String} right Right delimiter as an XRegExp pattern.\n     * @param {String} [flags] Any combination of XRegExp flags, used for the left and right delimiters.\n     * @param {Object} [options] Options object with optional properties:\n     *   - `valueNames` {Array} Providing `valueNames` changes the return value from an array of\n     *     matched strings to an array of objects that provide the value and start/end positions\n     *     for the matched strings as well as the matched delimiters and unmatched string segments.\n     *     To use this extended information mode, provide an array of 4 strings that name the parts\n     *     to be returned:\n     *     1. String segments outside of (before, between, and after) matches.\n     *     2. Matched outermost left delimiters.\n     *     3. Matched text between the outermost left and right delimiters.\n     *     4. Matched outermost right delimiters.\n     *     Taken together, these parts include the entire subject string if used with flag g.\n     *     Use `null` for any of these values to omit unneeded parts from the returned results.\n     *   - `escapeChar` {String} Single char used to escape delimiters within the subject string.\n     *   - `unbalanced` {String} Handling mode for unbalanced delimiters. Options are:\n     *     - 'error' - throw (default)\n     *     - 'skip' - unbalanced delimiters are treated as part of the text between delimiters, and\n     *       searches continue at the end of the unbalanced delimiter.\n     *     - 'skip-lazy' - unbalanced delimiters are treated as part of the text between delimiters,\n     *       and searches continue one character after the start of the unbalanced delimiter.\n     * @returns {Array} Array of matches, or an empty array.\n     * @example\n     *\n     * // Basic usage\n     * const str1 = '(t((e))s)t()(ing)';\n     * XRegExp.matchRecursive(str1, '\\\\(', '\\\\)', 'g');\n     * // -> ['t((e))s', '', 'ing']\n     *\n     * // Extended information mode with valueNames\n     * const str2 = 'Here is <div> <div>an</div></div> example';\n     * XRegExp.matchRecursive(str2, '<div\\\\s*>', '</div>', 'gi', {\n     *   valueNames: ['between', 'left', 'match', 'right']\n     * });\n     * // -> [\n     * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},\n     * // {name: 'left',    value: '<div>',          start: 8,  end: 13},\n     * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},\n     * // {name: 'right',   value: '</div>',         start: 27, end: 33},\n     * // {name: 'between', value: ' example',       start: 33, end: 41}\n     * // ]\n     *\n     * // Omitting unneeded parts with null valueNames, and using escapeChar\n     * const str3 = '...{1}.\\\\{{function(x,y){return {y:x}}}';\n     * XRegExp.matchRecursive(str3, '{', '}', 'g', {\n     *   valueNames: ['literal', null, 'value', null],\n     *   escapeChar: '\\\\'\n     * });\n     * // -> [\n     * // {name: 'literal', value: '...',  start: 0, end: 3},\n     * // {name: 'value',   value: '1',    start: 4, end: 5},\n     * // {name: 'literal', value: '.\\\\{', start: 6, end: 9},\n     * // {name: 'value',   value: 'function(x,y){return {y:x}}', start: 10, end: 37}\n     * // ]\n     *\n     * // Sticky mode via flag y\n     * const str4 = '<1><<<2>>><3>4<5>';\n     * XRegExp.matchRecursive(str4, '<', '>', 'gy');\n     * // -> ['1', '<<2>>', '3']\n     *\n     * // Skipping unbalanced delimiters instead of erroring\n     * const str5 = 'Here is <div> <div>an</div> unbalanced example';\n     * XRegExp.matchRecursive(str5, '<div\\\\s*>', '</div>', 'gi', {\n     *     unbalanced: 'skip'\n     * });\n     * // -> ['an']\n     */\n    XRegExp.matchRecursive = (str, left, right, flags, options) => {\n        flags = flags || '';\n        options = options || {};\n        const global = flags.includes('g');\n        const sticky = flags.includes('y');\n        // Flag `y` is handled manually\n        const basicFlags = flags.replace(/y/g, '');\n        left = XRegExp(left, basicFlags);\n        right = XRegExp(right, basicFlags);\n\n        let esc;\n        let {escapeChar} = options;\n        if (escapeChar) {\n            if (escapeChar.length > 1) {\n                throw new Error('Cannot use more than one escape character');\n            }\n            escapeChar = XRegExp.escape(escapeChar);\n            // Example of concatenated `esc` regex:\n            // `escapeChar`: '%'\n            // `left`: '<'\n            // `right`: '>'\n            // Regex is: /(?:%[\\S\\s]|(?:(?!<|>)[^%])+)+/\n            esc = new RegExp(\n                `(?:${escapeChar}[\\\\S\\\\s]|(?:(?!${\n                    // Using `XRegExp.union` safely rewrites backreferences in `left` and `right`.\n                    // Intentionally not passing `basicFlags` to `XRegExp.union` since any syntax\n                    // transformation resulting from those flags was already applied to `left` and\n                    // `right` when they were passed through the XRegExp constructor above.\n                    XRegExp.union([left, right], '', {conjunction: 'or'}).source\n                })[^${escapeChar}])+)+`,\n                // Flags `gy` not needed here\n                flags.replace(XRegExp._hasNativeFlag('s') ? /[^imsu]/g : /[^imu]/g, '')\n            );\n        }\n\n        let openTokens = 0;\n        let delimStart = 0;\n        let delimEnd = 0;\n        let lastOuterEnd = 0;\n        let outerStart;\n        let innerStart;\n        let leftMatch;\n        let rightMatch;\n        const vN = options.valueNames;\n        const output = [];\n\n        while (true) {\n            // If using an escape character, advance to the delimiter's next starting position,\n            // skipping any escaped characters in between\n            if (escapeChar) {\n                delimEnd += (XRegExp.exec(str, esc, delimEnd, 'sticky') || [''])[0].length;\n            }\n\n            leftMatch = XRegExp.exec(str, left, delimEnd);\n            rightMatch = XRegExp.exec(str, right, delimEnd);\n            // Keep the leftmost match only\n            if (leftMatch && rightMatch) {\n                if (leftMatch.index <= rightMatch.index) {\n                    rightMatch = null;\n                } else {\n                    leftMatch = null;\n                }\n            }\n\n            // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\n            // LM | RM | OT | Result\n            // 1  | 0  | 1  | loop\n            // 1  | 0  | 0  | loop\n            // 0  | 1  | 1  | loop\n            // 0  | 1  | 0  | throw\n            // 0  | 0  | 1  | throw\n            // 0  | 0  | 0  | break\n            // The paths above don't include the sticky mode special case. The loop ends after the\n            // first completed match if not `global`.\n            if (leftMatch || rightMatch) {\n                delimStart = (leftMatch || rightMatch).index;\n                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\n            } else if (!openTokens) {\n                break;\n            }\n            if (sticky && !openTokens && delimStart > lastOuterEnd) {\n                break;\n            }\n            if (leftMatch) {\n                if (!openTokens) {\n                    outerStart = delimStart;\n                    innerStart = delimEnd;\n                }\n                openTokens += 1;\n            } else if (rightMatch && openTokens) {\n                openTokens -= 1;\n                if (!openTokens) {\n                    if (vN) {\n                        if (vN[0] && outerStart > lastOuterEnd) {\n                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));\n                        }\n                        if (vN[1]) {\n                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));\n                        }\n                        if (vN[2]) {\n                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));\n                        }\n                        if (vN[3]) {\n                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));\n                        }\n                    } else {\n                        output.push(str.slice(innerStart, delimStart));\n                    }\n                    lastOuterEnd = delimEnd;\n                    if (!global) {\n                        break;\n                    }\n                }\n            // Found unbalanced delimiter\n            } else {\n                const unbalanced = options.unbalanced || 'error';\n                if (unbalanced === 'skip' || unbalanced === 'skip-lazy') {\n                    if (rightMatch) {\n                        rightMatch = null;\n                    // No `leftMatch` for unbalanced left delimiter because we've reached the string end\n                    } else {\n                        if (unbalanced === 'skip') {\n                            const outerStartDelimLength = XRegExp.exec(str, left, outerStart, 'sticky')[0].length;\n                            delimEnd = outerStart + (outerStartDelimLength || 1);\n                        } else {\n                            delimEnd = outerStart + 1;\n                        }\n                        openTokens = 0;\n                    }\n                } else if (unbalanced === 'error') {\n                    const delimSide = rightMatch ? 'right' : 'left';\n                    const errorPos = rightMatch ? delimStart : outerStart;\n                    throw new Error(`Unbalanced ${delimSide} delimiter found in string at position ${errorPos}`);\n                } else {\n                    throw new Error(`Unsupported value for unbalanced: ${unbalanced}`);\n                }\n            }\n\n            // If the delimiter matched an empty string, avoid an infinite loop\n            if (delimStart === delimEnd) {\n                delimEnd += 1;\n            }\n        }\n\n        if (global && output.length > 0 && !sticky && vN && vN[0] && str.length > lastOuterEnd) {\n            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));\n        }\n\n        return output;\n    };\n};\n","/*!\n * XRegExp Unicode Base 5.1.0\n * <xregexp.com>\n * Steven Levithan (c) 2008-present MIT License\n */\n\nexport default (XRegExp) => {\n\n    /**\n     * Adds base support for Unicode matching:\n     * - Adds syntax `\\p{..}` for matching Unicode tokens. Tokens can be inverted using `\\P{..}` or\n     *   `\\p{^..}`. Token names ignore case, spaces, hyphens, and underscores. You can omit the\n     *   braces for token names that are a single letter (e.g. `\\pL` or `PL`).\n     * - Adds flag A (astral), which enables 21-bit Unicode support.\n     * - Adds the `XRegExp.addUnicodeData` method used by other addons to provide character data.\n     *\n     * Unicode Base relies on externally provided Unicode character data. Official addons are\n     * available to provide data for Unicode categories, scripts, and properties.\n     *\n     * @requires XRegExp\n     */\n\n    // ==--------------------------==\n    // Private stuff\n    // ==--------------------------==\n\n    // Storage for Unicode data\n    const unicode = {};\n    const unicodeTypes = {};\n\n    // Reuse utils\n    const dec = XRegExp._dec;\n    const hex = XRegExp._hex;\n    const pad4 = XRegExp._pad4;\n\n    // Generates a token lookup name: lowercase, with hyphens, spaces, and underscores removed\n    function normalize(name) {\n        return name.replace(/[- _]+/g, '').toLowerCase();\n    }\n\n    // Gets the decimal code of a literal code unit, \\xHH, \\uHHHH, or a backslash-escaped literal\n    function charCode(chr) {\n        const esc = /^\\\\[xu](.+)/.exec(chr);\n        return esc ?\n            dec(esc[1]) :\n            chr.charCodeAt(chr[0] === '\\\\' ? 1 : 0);\n    }\n\n    // Inverts a list of ordered BMP characters and ranges\n    function invertBmp(range) {\n        let output = '';\n        let lastEnd = -1;\n\n        XRegExp.forEach(\n            range,\n            /(\\\\x..|\\\\u....|\\\\?[\\s\\S])(?:-(\\\\x..|\\\\u....|\\\\?[\\s\\S]))?/,\n            (m) => {\n                const start = charCode(m[1]);\n                if (start > (lastEnd + 1)) {\n                    output += `\\\\u${pad4(hex(lastEnd + 1))}`;\n                    if (start > (lastEnd + 2)) {\n                        output += `-\\\\u${pad4(hex(start - 1))}`;\n                    }\n                }\n                lastEnd = charCode(m[2] || m[1]);\n            }\n        );\n\n        if (lastEnd < 0xFFFF) {\n            output += `\\\\u${pad4(hex(lastEnd + 1))}`;\n            if (lastEnd < 0xFFFE) {\n                output += '-\\\\uFFFF';\n            }\n        }\n\n        return output;\n    }\n\n    // Generates an inverted BMP range on first use\n    function cacheInvertedBmp(slug) {\n        const prop = 'b!';\n        return (\n            unicode[slug][prop] ||\n            (unicode[slug][prop] = invertBmp(unicode[slug].bmp))\n        );\n    }\n\n    // Combines and optionally negates BMP and astral data\n    function buildAstral(slug, isNegated) {\n        const item = unicode[slug];\n        let combined = '';\n\n        if (item.bmp && !item.isBmpLast) {\n            combined = `[${item.bmp}]${item.astral ? '|' : ''}`;\n        }\n        if (item.astral) {\n            combined += item.astral;\n        }\n        if (item.isBmpLast && item.bmp) {\n            combined += `${item.astral ? '|' : ''}[${item.bmp}]`;\n        }\n\n        // Astral Unicode tokens always match a code point, never a code unit\n        return isNegated ?\n            `(?:(?!${combined})(?:[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\0-\\uFFFF]))` :\n            `(?:${combined})`;\n    }\n\n    // Builds a complete astral pattern on first use\n    function cacheAstral(slug, isNegated) {\n        const prop = isNegated ? 'a!' : 'a=';\n        return (\n            unicode[slug][prop] ||\n            (unicode[slug][prop] = buildAstral(slug, isNegated))\n        );\n    }\n\n    // ==--------------------------==\n    // Core functionality\n    // ==--------------------------==\n\n    /*\n     * Add astral mode (flag A) and Unicode token syntax: `\\p{..}`, `\\P{..}`, `\\p{^..}`, `\\pC`.\n     */\n    XRegExp.addToken(\n        // Use `*` instead of `+` to avoid capturing `^` as the token name in `\\p{^}`\n        /\\\\([pP])(?:{(\\^?)(?:(\\w+)=)?([^}]*)}|([A-Za-z]))/,\n        (match, scope, flags) => {\n            const ERR_DOUBLE_NEG = 'Invalid double negation ';\n            const ERR_UNKNOWN_NAME = 'Unknown Unicode token ';\n            const ERR_UNKNOWN_REF = 'Unicode token missing data ';\n            const ERR_ASTRAL_ONLY = 'Astral mode required for Unicode token ';\n            const ERR_ASTRAL_IN_CLASS = 'Astral mode does not support Unicode tokens within character classes';\n            const [\n                fullToken,\n                pPrefix,\n                caretNegation,\n                typePrefix,\n                tokenName,\n                tokenSingleCharName\n            ] = match;\n            // Negated via \\P{..} or \\p{^..}\n            let isNegated = pPrefix === 'P' || !!caretNegation;\n            // Switch from BMP (0-FFFF) to astral (0-10FFFF) mode via flag A\n            const isAstralMode = flags.includes('A');\n            // Token lookup name. Check `tokenSingleCharName` first to avoid passing `undefined`\n            // via `\\p{}`\n            let slug = normalize(tokenSingleCharName || tokenName);\n            // Token data object\n            let item = unicode[slug];\n\n            if (pPrefix === 'P' && caretNegation) {\n                throw new SyntaxError(ERR_DOUBLE_NEG + fullToken);\n            }\n            if (!unicode.hasOwnProperty(slug)) {\n                throw new SyntaxError(ERR_UNKNOWN_NAME + fullToken);\n            }\n\n            if (typePrefix) {\n                if (!(unicodeTypes[typePrefix] && unicodeTypes[typePrefix][slug])) {\n                    throw new SyntaxError(ERR_UNKNOWN_NAME + fullToken);\n                }\n            }\n\n            // Switch to the negated form of the referenced Unicode token\n            if (item.inverseOf) {\n                slug = normalize(item.inverseOf);\n                if (!unicode.hasOwnProperty(slug)) {\n                    throw new ReferenceError(`${ERR_UNKNOWN_REF + fullToken} -> ${item.inverseOf}`);\n                }\n                item = unicode[slug];\n                isNegated = !isNegated;\n            }\n\n            if (!(item.bmp || isAstralMode)) {\n                throw new SyntaxError(ERR_ASTRAL_ONLY + fullToken);\n            }\n            if (isAstralMode) {\n                if (scope === 'class') {\n                    throw new SyntaxError(ERR_ASTRAL_IN_CLASS);\n                }\n\n                return cacheAstral(slug, isNegated);\n            }\n\n            return scope === 'class' ?\n                (isNegated ? cacheInvertedBmp(slug) : item.bmp) :\n                `${(isNegated ? '[^' : '[') + item.bmp}]`;\n        },\n        {\n            scope: 'all',\n            optionalFlags: 'A',\n            leadChar: '\\\\'\n        }\n    );\n\n    /**\n     * Adds to the list of Unicode tokens that XRegExp regexes can match via `\\p` or `\\P`.\n     *\n     * @memberOf XRegExp\n     * @param {Array} data Objects with named character ranges. Each object may have properties\n     *   `name`, `alias`, `isBmpLast`, `inverseOf`, `bmp`, and `astral`. All but `name` are\n     *   optional, although one of `bmp` or `astral` is required (unless `inverseOf` is set). If\n     *   `astral` is absent, the `bmp` data is used for BMP and astral modes. If `bmp` is absent,\n     *   the name errors in BMP mode but works in astral mode. If both `bmp` and `astral` are\n     *   provided, the `bmp` data only is used in BMP mode, and the combination of `bmp` and\n     *   `astral` data is used in astral mode. `isBmpLast` is needed when a token matches orphan\n     *   high surrogates *and* uses surrogate pairs to match astral code points. The `bmp` and\n     *   `astral` data should be a combination of literal characters and `\\xHH` or `\\uHHHH` escape\n     *   sequences, with hyphens to create ranges. Any regex metacharacters in the data should be\n     *   escaped, apart from range-creating hyphens. The `astral` data can additionally use\n     *   character classes and alternation, and should use surrogate pairs to represent astral code\n     *   points. `inverseOf` can be used to avoid duplicating character data if a Unicode token is\n     *   defined as the exact inverse of another token.\n     * @param {String} [typePrefix] Enables optionally using this type as a prefix for all of the\n     *   provided Unicode tokens, e.g. if given `'Type'`, then `\\p{TokenName}` can also be written\n     *   as `\\p{Type=TokenName}`.\n     * @example\n     *\n     * // Basic use\n     * XRegExp.addUnicodeData([{\n     *   name: 'XDigit',\n     *   alias: 'Hexadecimal',\n     *   bmp: '0-9A-Fa-f'\n     * }]);\n     * XRegExp('\\\\p{XDigit}:\\\\p{Hexadecimal}+').test('0:3D'); // -> true\n     */\n    XRegExp.addUnicodeData = (data, typePrefix) => {\n        const ERR_NO_NAME = 'Unicode token requires name';\n        const ERR_NO_DATA = 'Unicode token has no character data ';\n\n        if (typePrefix) {\n            // Case sensitive to match ES2018\n            unicodeTypes[typePrefix] = {};\n        }\n\n        for (const item of data) {\n            if (!item.name) {\n                throw new Error(ERR_NO_NAME);\n            }\n            if (!(item.inverseOf || item.bmp || item.astral)) {\n                throw new Error(ERR_NO_DATA + item.name);\n            }\n\n            const normalizedName = normalize(item.name);\n            unicode[normalizedName] = item;\n            if (typePrefix) {\n                unicodeTypes[typePrefix][normalizedName] = true;\n            }\n\n            if (item.alias) {\n                const normalizedAlias = normalize(item.alias);\n                unicode[normalizedAlias] = item;\n                if (typePrefix) {\n                    unicodeTypes[typePrefix][normalizedAlias] = true;\n                }\n            }\n        }\n\n        // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and\n        // flags might now produce different results\n        XRegExp.cache.flush('patterns');\n    };\n\n    /**\n     * @ignore\n     *\n     * Return a reference to the internal Unicode definition structure for the given Unicode\n     * Property if the given name is a legal Unicode Property for use in XRegExp `\\p` or `\\P` regex\n     * constructs.\n     *\n     * @memberOf XRegExp\n     * @param {String} name Name by which the Unicode Property may be recognized (case-insensitive),\n     *   e.g. `'N'` or `'Number'`. The given name is matched against all registered Unicode\n     *   Properties and Property Aliases.\n     * @returns {Object} Reference to definition structure when the name matches a Unicode Property.\n     *\n     * @note\n     * For more info on Unicode Properties, see also http://unicode.org/reports/tr18/#Categories.\n     *\n     * @note\n     * This method is *not* part of the officially documented API and may change or be removed in\n     * the future. It is meant for userland code that wishes to reuse the (large) internal Unicode\n     * structures set up by XRegExp.\n     */\n    XRegExp._getUnicodeProperty = (name) => {\n        const slug = normalize(name);\n        return unicode[slug];\n    };\n};\n","module.exports = [\n    {\n        'name': 'C',\n        'alias': 'Other',\n        'isBmpLast': true,\n        'bmp': '\\0-\\x1F\\x7F-\\x9F\\xAD\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F5-\\u0605\\u061C\\u06DD\\u070E\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07FB\\u07FC\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F\\u086B-\\u086F\\u088F-\\u0897\\u08E2\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A77-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A\\u0C3B\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B\\u0C5C\\u0C5E\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C76\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDC\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D50-\\u0D53\\u0D64\\u0D65\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u1716-\\u171E\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180E\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ACF-\\u1AFF\\u1B4D-\\u1B4F\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC8-\\u1CCF\\u1CFB-\\u1CFF\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20C1-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E5E-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u3130\\u318F\\u31E4-\\u31EF\\u321F\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7CB-\\uA7CF\\uA7D2\\uA7D4\\uA7DA-\\uA7F1\\uA82D-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C6-\\uA8CD\\uA8DA-\\uA8DF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB6C-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC3-\\uFBD2\\uFD90\\uFD91\\uFDC8-\\uFDCE\\uFDD0-\\uFDEF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD-\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFFB\\uFFFE\\uFFFF',\n        'astral': '\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8F\\uDD9D-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD7B\\uDD8B\\uDD93\\uDD96\\uDDA2\\uDDB2\\uDDBA\\uDDBD-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDF7F\\uDF86\\uDFB1\\uDFBB-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE49-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD28-\\uDD2F\\uDD3A-\\uDE5F\\uDE7F\\uDEAA\\uDEAE\\uDEAF\\uDEB2-\\uDEFF\\uDF28-\\uDF2F\\uDF5A-\\uDF6F\\uDF8A-\\uDFAF\\uDFCC-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC76-\\uDC7E\\uDCBD\\uDCC3-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD48-\\uDD4F\\uDD77-\\uDD7F\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC5C\\uDC62-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE5F\\uDE6D-\\uDE7F\\uDEBA-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF47-\\uDFFF]|\\uD806[\\uDC3C-\\uDC9F\\uDCF3-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD47-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE5-\\uDDFF\\uDE48-\\uDE4F\\uDEA3-\\uDEAF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC46-\\uDC4F\\uDC6D-\\uDC6F\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF9-\\uDFAF\\uDFB1-\\uDFBF\\uDFF2-\\uDFFE]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82A\\uD82D\\uD82E\\uD830-\\uD832\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80B[\\uDC00-\\uDF8F\\uDFF3-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDEBF\\uDECA-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE9B-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82B[\\uDC00-\\uDFEF\\uDFF4\\uDFFC\\uDFFF]|\\uD82C[\\uDD23-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA0-\\uDFFF]|\\uD833[\\uDC00-\\uDEFF\\uDF2E\\uDF2F\\uDF47-\\uDF4F\\uDFC4-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDD73-\\uDD7A\\uDDEB-\\uDDFF\\uDE46-\\uDEDF\\uDEF4-\\uDEFF\\uDF57-\\uDF5F\\uDF79-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD837[\\uDC00-\\uDEFF\\uDF1F-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD50-\\uDE8F\\uDEAF-\\uDEBF\\uDEFA-\\uDEFE\\uDF00-\\uDFFF]|\\uD839[\\uDC00-\\uDFDF\\uDFE7\\uDFEC\\uDFEF\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDD5D\\uDD60-\\uDFFF]|\\uD83B[\\uDC00-\\uDC70\\uDCB5-\\uDD00\\uDD3E-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDDAE-\\uDDE5\\uDE03-\\uDE0F\\uDE3C-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDE5F\\uDE66-\\uDEFF]|\\uD83D[\\uDED8-\\uDEDC\\uDEED-\\uDEEF\\uDEFD-\\uDEFF\\uDF74-\\uDF7F\\uDFD9-\\uDFDF\\uDFEC-\\uDFEF\\uDFF1-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE\\uDCAF\\uDCB2-\\uDCFF\\uDE54-\\uDE5F\\uDE6E\\uDE6F\\uDE75-\\uDE77\\uDE7D-\\uDE7F\\uDE87-\\uDE8F\\uDEAD-\\uDEAF\\uDEBB-\\uDEBF\\uDEC6-\\uDECF\\uDEDA-\\uDEDF\\uDEE8-\\uDEEF\\uDEF7-\\uDEFF\\uDF93\\uDFCB-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEE0-\\uDEFF]|\\uD86D[\\uDF39-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]'\n    },\n    {\n        'name': 'Cc',\n        'alias': 'Control',\n        'bmp': '\\0-\\x1F\\x7F-\\x9F'\n    },\n    {\n        'name': 'Cf',\n        'alias': 'Format',\n        'bmp': '\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB',\n        'astral': '\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC38]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]'\n    },\n    {\n        'name': 'Cn',\n        'alias': 'Unassigned',\n        'bmp': '\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F5-\\u05FF\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB\\u07FC\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F\\u086B-\\u086F\\u088F\\u0892-\\u0897\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A77-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A\\u0C3B\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B\\u0C5C\\u0C5E\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C76\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDC\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D50-\\u0D53\\u0D64\\u0D65\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u1716-\\u171E\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ACF-\\u1AFF\\u1B4D-\\u1B4F\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC8-\\u1CCF\\u1CFB-\\u1CFF\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u2065\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20C1-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E5E-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u3130\\u318F\\u31E4-\\u31EF\\u321F\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7CB-\\uA7CF\\uA7D2\\uA7D4\\uA7DA-\\uA7F1\\uA82D-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C6-\\uA8CD\\uA8DA-\\uA8DF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB6C-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC3-\\uFBD2\\uFD90\\uFD91\\uFDC8-\\uFDCE\\uFDD0-\\uFDEF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD\\uFEFE\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFF8\\uFFFE\\uFFFF',\n        'astral': '\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8F\\uDD9D-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD7B\\uDD8B\\uDD93\\uDD96\\uDDA2\\uDDB2\\uDDBA\\uDDBD-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDF7F\\uDF86\\uDFB1\\uDFBB-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE49-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD28-\\uDD2F\\uDD3A-\\uDE5F\\uDE7F\\uDEAA\\uDEAE\\uDEAF\\uDEB2-\\uDEFF\\uDF28-\\uDF2F\\uDF5A-\\uDF6F\\uDF8A-\\uDFAF\\uDFCC-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC76-\\uDC7E\\uDCC3-\\uDCCC\\uDCCE\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD48-\\uDD4F\\uDD77-\\uDD7F\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC5C\\uDC62-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE5F\\uDE6D-\\uDE7F\\uDEBA-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF47-\\uDFFF]|\\uD806[\\uDC3C-\\uDC9F\\uDCF3-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD47-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE5-\\uDDFF\\uDE48-\\uDE4F\\uDEA3-\\uDEAF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC46-\\uDC4F\\uDC6D-\\uDC6F\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF9-\\uDFAF\\uDFB1-\\uDFBF\\uDFF2-\\uDFFE]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82A\\uD82D\\uD82E\\uD830-\\uD832\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDB7F][\\uDC00-\\uDFFF]|\\uD80B[\\uDC00-\\uDF8F\\uDFF3-\\uDFFF]|\\uD80D[\\uDC2F\\uDC39-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDEBF\\uDECA-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE9B-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82B[\\uDC00-\\uDFEF\\uDFF4\\uDFFC\\uDFFF]|\\uD82C[\\uDD23-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA4-\\uDFFF]|\\uD833[\\uDC00-\\uDEFF\\uDF2E\\uDF2F\\uDF47-\\uDF4F\\uDFC4-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDDEB-\\uDDFF\\uDE46-\\uDEDF\\uDEF4-\\uDEFF\\uDF57-\\uDF5F\\uDF79-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD837[\\uDC00-\\uDEFF\\uDF1F-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD50-\\uDE8F\\uDEAF-\\uDEBF\\uDEFA-\\uDEFE\\uDF00-\\uDFFF]|\\uD839[\\uDC00-\\uDFDF\\uDFE7\\uDFEC\\uDFEF\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDD5D\\uDD60-\\uDFFF]|\\uD83B[\\uDC00-\\uDC70\\uDCB5-\\uDD00\\uDD3E-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDDAE-\\uDDE5\\uDE03-\\uDE0F\\uDE3C-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDE5F\\uDE66-\\uDEFF]|\\uD83D[\\uDED8-\\uDEDC\\uDEED-\\uDEEF\\uDEFD-\\uDEFF\\uDF74-\\uDF7F\\uDFD9-\\uDFDF\\uDFEC-\\uDFEF\\uDFF1-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE\\uDCAF\\uDCB2-\\uDCFF\\uDE54-\\uDE5F\\uDE6E\\uDE6F\\uDE75-\\uDE77\\uDE7D-\\uDE7F\\uDE87-\\uDE8F\\uDEAD-\\uDEAF\\uDEBB-\\uDEBF\\uDEC6-\\uDECF\\uDEDA-\\uDEDF\\uDEE8-\\uDEEF\\uDEF7-\\uDEFF\\uDF93\\uDFCB-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEE0-\\uDEFF]|\\uD86D[\\uDF39-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00\\uDC02-\\uDC1F\\uDC80-\\uDCFF\\uDDF0-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]'\n    },\n    {\n        'name': 'Co',\n        'alias': 'Private_Use',\n        'bmp': '\\uE000-\\uF8FF',\n        'astral': '[\\uDB80-\\uDBBE\\uDBC0-\\uDBFE][\\uDC00-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDC00-\\uDFFD]'\n    },\n    {\n        'name': 'Cs',\n        'alias': 'Surrogate',\n        'bmp': '\\uD800-\\uDFFF'\n    },\n    {\n        'name': 'L',\n        'alias': 'Letter',\n        'bmp': 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]'\n    },\n    {\n        'name': 'LC',\n        'alias': 'Cased_Letter',\n        'bmp': 'A-Za-z\\xB5\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u01BA\\u01BC-\\u01BF\\u01C4-\\u0293\\u0295-\\u02AF\\u0370-\\u0373\\u0376\\u0377\\u037B-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0560-\\u0588\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2134\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C7B\\u2C7E-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA640-\\uA66D\\uA680-\\uA69B\\uA722-\\uA76F\\uA771-\\uA787\\uA78B-\\uA78E\\uA790-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F5\\uA7F6\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A',\n        'astral': '\\uD801[\\uDC00-\\uDC4F\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC]|\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD806[\\uDCA0-\\uDCDF]|\\uD81B[\\uDE40-\\uDE7F]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF09\\uDF0B-\\uDF1E]|\\uD83A[\\uDD00-\\uDD43]'\n    },\n    {\n        'name': 'Ll',\n        'alias': 'Lowercase_Letter',\n        'bmp': 'a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0560-\\u0588\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5F\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7AF\\uA7B5\\uA7B7\\uA7B9\\uA7BB\\uA7BD\\uA7BF\\uA7C1\\uA7C3\\uA7C8\\uA7CA\\uA7D1\\uA7D3\\uA7D5\\uA7D7\\uA7D9\\uA7F6\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n        'astral': '\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD81B[\\uDE60-\\uDE7F]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD837[\\uDF00-\\uDF09\\uDF0B-\\uDF1E]|\\uD83A[\\uDD22-\\uDD43]'\n    },\n    {\n        'name': 'Lm',\n        'alias': 'Modifier_Letter',\n        'bmp': '\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u08C9\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F2-\\uA7F4\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uAB69\\uFF70\\uFF9E\\uFF9F',\n        'astral': '\\uD801[\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD838[\\uDD37-\\uDD3D]|\\uD83A\\uDD4B'\n    },\n    {\n        'name': 'Lo',\n        'alias': 'Other_Letter',\n        'bmp': '\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C8\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1100-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF4A\\uDF50]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD837\\uDF0A|\\uD838[\\uDD00-\\uDD2C\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]'\n    },\n    {\n        'name': 'Lt',\n        'alias': 'Titlecase_Letter',\n        'bmp': '\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC'\n    },\n    {\n        'name': 'Lu',\n        'alias': 'Uppercase_Letter',\n        'bmp': 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2F\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uA7B8\\uA7BA\\uA7BC\\uA7BE\\uA7C0\\uA7C2\\uA7C4-\\uA7C7\\uA7C9\\uA7D0\\uA7D6\\uA7D8\\uA7F5\\uFF21-\\uFF3A',\n        'astral': '\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD81B[\\uDE40-\\uDE5F]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]'\n    },\n    {\n        'name': 'M',\n        'alias': 'Mark',\n        'bmp': '\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n        'astral': '\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD803[\\uDD24-\\uDD27\\uDEAB\\uDEAC\\uDF46-\\uDF50\\uDF82-\\uDF85]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC70\\uDC73\\uDC74\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDCC2\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD45\\uDD46\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDDC9-\\uDDCC\\uDDCE\\uDDCF\\uDE2C-\\uDE37\\uDE3E\\uDEDF-\\uDEEA\\uDF00-\\uDF03\\uDF3B\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC35-\\uDC46\\uDC5E\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDDDC\\uDDDD\\uDE30-\\uDE40\\uDEAB-\\uDEB7\\uDF1D-\\uDF2B]|\\uD806[\\uDC2C-\\uDC3A\\uDD30-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD3E\\uDD40\\uDD42\\uDD43\\uDDD1-\\uDDD7\\uDDDA-\\uDDE0\\uDDE4\\uDE01-\\uDE0A\\uDE33-\\uDE39\\uDE3B-\\uDE3E\\uDE47\\uDE51-\\uDE5B\\uDE8A-\\uDE99]|\\uD807[\\uDC2F-\\uDC36\\uDC38-\\uDC3F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD31-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD45\\uDD47\\uDD8A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD97\\uDEF3-\\uDEF6]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF4F\\uDF51-\\uDF87\\uDF8F-\\uDF92\\uDFE4\\uDFF0\\uDFF1]|\\uD82F[\\uDC9D\\uDC9E]|\\uD833[\\uDF00-\\uDF2D\\uDF30-\\uDF46]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD30-\\uDD36\\uDEAE\\uDEEC-\\uDEEF]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]'\n    },\n    {\n        'name': 'Mc',\n        'alias': 'Spacing_Mark',\n        'bmp': '\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u094F\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u1715\\u1734\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1A19\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF7\\u302E\\u302F\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE\\uAAEF\\uAAF5\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC',\n        'astral': '\\uD804[\\uDC00\\uDC02\\uDC82\\uDCB0-\\uDCB2\\uDCB7\\uDCB8\\uDD2C\\uDD45\\uDD46\\uDD82\\uDDB3-\\uDDB5\\uDDBF\\uDDC0\\uDDCE\\uDE2C-\\uDE2E\\uDE32\\uDE33\\uDE35\\uDEE0-\\uDEE2\\uDF02\\uDF03\\uDF3E\\uDF3F\\uDF41-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63]|\\uD805[\\uDC35-\\uDC37\\uDC40\\uDC41\\uDC45\\uDCB0-\\uDCB2\\uDCB9\\uDCBB-\\uDCBE\\uDCC1\\uDDAF-\\uDDB1\\uDDB8-\\uDDBB\\uDDBE\\uDE30-\\uDE32\\uDE3B\\uDE3C\\uDE3E\\uDEAC\\uDEAE\\uDEAF\\uDEB6\\uDF20\\uDF21\\uDF26]|\\uD806[\\uDC2C-\\uDC2E\\uDC38\\uDD30-\\uDD35\\uDD37\\uDD38\\uDD3D\\uDD40\\uDD42\\uDDD1-\\uDDD3\\uDDDC-\\uDDDF\\uDDE4\\uDE39\\uDE57\\uDE58\\uDE97]|\\uD807[\\uDC2F\\uDC3E\\uDCA9\\uDCB1\\uDCB4\\uDD8A-\\uDD8E\\uDD93\\uDD94\\uDD96\\uDEF5\\uDEF6]|\\uD81B[\\uDF51-\\uDF87\\uDFF0\\uDFF1]|\\uD834[\\uDD65\\uDD66\\uDD6D-\\uDD72]'\n    },\n    {\n        'name': 'Me',\n        'alias': 'Enclosing_Mark',\n        'bmp': '\\u0488\\u0489\\u1ABE\\u20DD-\\u20E0\\u20E2-\\u20E4\\uA670-\\uA672'\n    },\n    {\n        'name': 'Mn',\n        'alias': 'Nonspacing_Mark',\n        'bmp': '\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1ABF-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\n        'astral': '\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD803[\\uDD24-\\uDD27\\uDEAB\\uDEAC\\uDF46-\\uDF50\\uDF82-\\uDF85]|\\uD804[\\uDC01\\uDC38-\\uDC46\\uDC70\\uDC73\\uDC74\\uDC7F-\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDCC2\\uDD00-\\uDD02\\uDD27-\\uDD2B\\uDD2D-\\uDD34\\uDD73\\uDD80\\uDD81\\uDDB6-\\uDDBE\\uDDC9-\\uDDCC\\uDDCF\\uDE2F-\\uDE31\\uDE34\\uDE36\\uDE37\\uDE3E\\uDEDF\\uDEE3-\\uDEEA\\uDF00\\uDF01\\uDF3B\\uDF3C\\uDF40\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC38-\\uDC3F\\uDC42-\\uDC44\\uDC46\\uDC5E\\uDCB3-\\uDCB8\\uDCBA\\uDCBF\\uDCC0\\uDCC2\\uDCC3\\uDDB2-\\uDDB5\\uDDBC\\uDDBD\\uDDBF\\uDDC0\\uDDDC\\uDDDD\\uDE33-\\uDE3A\\uDE3D\\uDE3F\\uDE40\\uDEAB\\uDEAD\\uDEB0-\\uDEB5\\uDEB7\\uDF1D-\\uDF1F\\uDF22-\\uDF25\\uDF27-\\uDF2B]|\\uD806[\\uDC2F-\\uDC37\\uDC39\\uDC3A\\uDD3B\\uDD3C\\uDD3E\\uDD43\\uDDD4-\\uDDD7\\uDDDA\\uDDDB\\uDDE0\\uDE01-\\uDE0A\\uDE33-\\uDE38\\uDE3B-\\uDE3E\\uDE47\\uDE51-\\uDE56\\uDE59-\\uDE5B\\uDE8A-\\uDE96\\uDE98\\uDE99]|\\uD807[\\uDC30-\\uDC36\\uDC38-\\uDC3D\\uDC3F\\uDC92-\\uDCA7\\uDCAA-\\uDCB0\\uDCB2\\uDCB3\\uDCB5\\uDCB6\\uDD31-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD45\\uDD47\\uDD90\\uDD91\\uDD95\\uDD97\\uDEF3\\uDEF4]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF4F\\uDF8F-\\uDF92\\uDFE4]|\\uD82F[\\uDC9D\\uDC9E]|\\uD833[\\uDF00-\\uDF2D\\uDF30-\\uDF46]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD30-\\uDD36\\uDEAE\\uDEEC-\\uDEEF]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]'\n    },\n    {\n        'name': 'N',\n        'alias': 'Number',\n        'bmp': '0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D58-\\u0D5E\\u0D66-\\u0D78\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n        'astral': '\\uD800[\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD801[\\uDCA0-\\uDCA9]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE48\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDF1D-\\uDF26\\uDF51-\\uDF54\\uDFC5-\\uDFCB]|\\uD804[\\uDC52-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDDE1-\\uDDF4\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF3B]|\\uD806[\\uDCE0-\\uDCF2\\uDD50-\\uDD59]|\\uD807[\\uDC50-\\uDC6C\\uDD50-\\uDD59\\uDDA0-\\uDDA9\\uDFC0-\\uDFD4]|\\uD809[\\uDC00-\\uDC6E]|\\uD81A[\\uDE60-\\uDE69\\uDEC0-\\uDEC9\\uDF50-\\uDF59\\uDF5B-\\uDF61]|\\uD81B[\\uDE80-\\uDE96]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDFCE-\\uDFFF]|\\uD838[\\uDD40-\\uDD49\\uDEF0-\\uDEF9]|\\uD83A[\\uDCC7-\\uDCCF\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]'\n    },\n    {\n        'name': 'Nd',\n        'alias': 'Decimal_Number',\n        'bmp': '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\n        'astral': '\\uD801[\\uDCA0-\\uDCA9]|\\uD803[\\uDD30-\\uDD39]|\\uD804[\\uDC66-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF39]|\\uD806[\\uDCE0-\\uDCE9\\uDD50-\\uDD59]|\\uD807[\\uDC50-\\uDC59\\uDD50-\\uDD59\\uDDA0-\\uDDA9]|\\uD81A[\\uDE60-\\uDE69\\uDEC0-\\uDEC9\\uDF50-\\uDF59]|\\uD835[\\uDFCE-\\uDFFF]|\\uD838[\\uDD40-\\uDD49\\uDEF0-\\uDEF9]|\\uD83A[\\uDD50-\\uDD59]|\\uD83E[\\uDFF0-\\uDFF9]'\n    },\n    {\n        'name': 'Nl',\n        'alias': 'Letter_Number',\n        'bmp': '\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF',\n        'astral': '\\uD800[\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD809[\\uDC00-\\uDC6E]'\n    },\n    {\n        'name': 'No',\n        'alias': 'Other_Number',\n        'bmp': '\\xB2\\xB3\\xB9\\xBC-\\xBE\\u09F4-\\u09F9\\u0B72-\\u0B77\\u0BF0-\\u0BF2\\u0C78-\\u0C7E\\u0D58-\\u0D5E\\u0D70-\\u0D78\\u0F2A-\\u0F33\\u1369-\\u137C\\u17F0-\\u17F9\\u19DA\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215F\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA830-\\uA835',\n        'astral': '\\uD800[\\uDD07-\\uDD33\\uDD75-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE48\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E\\uDF1D-\\uDF26\\uDF51-\\uDF54\\uDFC5-\\uDFCB]|\\uD804[\\uDC52-\\uDC65\\uDDE1-\\uDDF4]|\\uD805[\\uDF3A\\uDF3B]|\\uD806[\\uDCEA-\\uDCF2]|\\uD807[\\uDC5A-\\uDC6C\\uDFC0-\\uDFD4]|\\uD81A[\\uDF5B-\\uDF61]|\\uD81B[\\uDE80-\\uDE96]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD83A[\\uDCC7-\\uDCCF]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D]|\\uD83C[\\uDD00-\\uDD0C]'\n    },\n    {\n        'name': 'P',\n        'alias': 'Punctuation',\n        'bmp': '!-#%-\\\\*,-\\\\/:;\\\\?@\\\\[-\\\\]_\\\\{\\\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65',\n        'astral': '\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]'\n    },\n    {\n        'name': 'Pc',\n        'alias': 'Connector_Punctuation',\n        'bmp': '_\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F'\n    },\n    {\n        'name': 'Pd',\n        'alias': 'Dash_Punctuation',\n        'bmp': '\\\\-\\u058A\\u05BE\\u1400\\u1806\\u2010-\\u2015\\u2E17\\u2E1A\\u2E3A\\u2E3B\\u2E40\\u2E5D\\u301C\\u3030\\u30A0\\uFE31\\uFE32\\uFE58\\uFE63\\uFF0D',\n        'astral': '\\uD803\\uDEAD'\n    },\n    {\n        'name': 'Pe',\n        'alias': 'Close_Punctuation',\n        'bmp': '\\\\)\\\\]\\\\}\\u0F3B\\u0F3D\\u169C\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E23\\u2E25\\u2E27\\u2E29\\u2E56\\u2E58\\u2E5A\\u2E5C\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3E\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63'\n    },\n    {\n        'name': 'Pf',\n        'alias': 'Final_Punctuation',\n        'bmp': '\\xBB\\u2019\\u201D\\u203A\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21'\n    },\n    {\n        'name': 'Pi',\n        'alias': 'Initial_Punctuation',\n        'bmp': '\\xAB\\u2018\\u201B\\u201C\\u201F\\u2039\\u2E02\\u2E04\\u2E09\\u2E0C\\u2E1C\\u2E20'\n    },\n    {\n        'name': 'Po',\n        'alias': 'Other_Punctuation',\n        'bmp': '!-#%-\\'\\\\*,\\\\.\\\\/:;\\\\?@\\\\\\xA1\\xA7\\xB6\\xB7\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u166E\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u1805\\u1807-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203B-\\u203E\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205E\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00\\u2E01\\u2E06-\\u2E08\\u2E0B\\u2E0E-\\u2E16\\u2E18\\u2E19\\u2E1B\\u2E1E\\u2E1F\\u2E2A-\\u2E2E\\u2E30-\\u2E39\\u2E3C-\\u2E3F\\u2E41\\u2E43-\\u2E4F\\u2E52-\\u2E54\\u3001-\\u3003\\u303D\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFE10-\\uFE16\\uFE19\\uFE30\\uFE45\\uFE46\\uFE49-\\uFE4C\\uFE50-\\uFE52\\uFE54-\\uFE57\\uFE5F-\\uFE61\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF07\\uFF0A\\uFF0C\\uFF0E\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3C\\uFF61\\uFF64\\uFF65',\n        'astral': '\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]'\n    },\n    {\n        'name': 'Ps',\n        'alias': 'Open_Punctuation',\n        'bmp': '\\\\(\\\\[\\\\{\\u0F3A\\u0F3C\\u169B\\u201A\\u201E\\u2045\\u207D\\u208D\\u2308\\u230A\\u2329\\u2768\\u276A\\u276C\\u276E\\u2770\\u2772\\u2774\\u27C5\\u27E6\\u27E8\\u27EA\\u27EC\\u27EE\\u2983\\u2985\\u2987\\u2989\\u298B\\u298D\\u298F\\u2991\\u2993\\u2995\\u2997\\u29D8\\u29DA\\u29FC\\u2E22\\u2E24\\u2E26\\u2E28\\u2E42\\u2E55\\u2E57\\u2E59\\u2E5B\\u3008\\u300A\\u300C\\u300E\\u3010\\u3014\\u3016\\u3018\\u301A\\u301D\\uFD3F\\uFE17\\uFE35\\uFE37\\uFE39\\uFE3B\\uFE3D\\uFE3F\\uFE41\\uFE43\\uFE47\\uFE59\\uFE5B\\uFE5D\\uFF08\\uFF3B\\uFF5B\\uFF5F\\uFF62'\n    },\n    {\n        'name': 'S',\n        'alias': 'Symbol',\n        'bmp': '\\\\$\\\\+<->\\\\^`\\\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD',\n        'astral': '\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDD-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7C\\uDE80-\\uDE86\\uDE90-\\uDEAC\\uDEB0-\\uDEBA\\uDEC0-\\uDEC5\\uDED0-\\uDED9\\uDEE0-\\uDEE7\\uDEF0-\\uDEF6\\uDF00-\\uDF92\\uDF94-\\uDFCA]'\n    },\n    {\n        'name': 'Sc',\n        'alias': 'Currency_Symbol',\n        'bmp': '\\\\$\\xA2-\\xA5\\u058F\\u060B\\u07FE\\u07FF\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20C0\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6',\n        'astral': '\\uD807[\\uDFDD-\\uDFE0]|\\uD838\\uDEFF|\\uD83B\\uDCB0'\n    },\n    {\n        'name': 'Sk',\n        'alias': 'Modifier_Symbol',\n        'bmp': '\\\\^`\\xA8\\xAF\\xB4\\xB8\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u0888\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u309B\\u309C\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uAB5B\\uAB6A\\uAB6B\\uFBB2-\\uFBC2\\uFF3E\\uFF40\\uFFE3',\n        'astral': '\\uD83C[\\uDFFB-\\uDFFF]'\n    },\n    {\n        'name': 'Sm',\n        'alias': 'Math_Symbol',\n        'bmp': '\\\\+<->\\\\|~\\xAC\\xB1\\xD7\\xF7\\u03F6\\u0606-\\u0608\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u2118\\u2140-\\u2144\\u214B\\u2190-\\u2194\\u219A\\u219B\\u21A0\\u21A3\\u21A6\\u21AE\\u21CE\\u21CF\\u21D2\\u21D4\\u21F4-\\u22FF\\u2320\\u2321\\u237C\\u239B-\\u23B3\\u23DC-\\u23E1\\u25B7\\u25C1\\u25F8-\\u25FF\\u266F\\u27C0-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u27FF\\u2900-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2AFF\\u2B30-\\u2B44\\u2B47-\\u2B4C\\uFB29\\uFE62\\uFE64-\\uFE66\\uFF0B\\uFF1C-\\uFF1E\\uFF5C\\uFF5E\\uFFE2\\uFFE9-\\uFFEC',\n        'astral': '\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD83B[\\uDEF0\\uDEF1]'\n    },\n    {\n        'name': 'So',\n        'alias': 'Other_Symbol',\n        'bmp': '\\xA6\\xA9\\xAE\\xB0\\u0482\\u058D\\u058E\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09FA\\u0B70\\u0BF3-\\u0BF8\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116\\u2117\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u214A\\u214C\\u214D\\u214F\\u218A\\u218B\\u2195-\\u2199\\u219C-\\u219F\\u21A1\\u21A2\\u21A4\\u21A5\\u21A7-\\u21AD\\u21AF-\\u21CD\\u21D0\\u21D1\\u21D3\\u21D5-\\u21F3\\u2300-\\u2307\\u230C-\\u231F\\u2322-\\u2328\\u232B-\\u237B\\u237D-\\u239A\\u23B4-\\u23DB\\u23E2-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u25B6\\u25B8-\\u25C0\\u25C2-\\u25F7\\u2600-\\u266E\\u2670-\\u2767\\u2794-\\u27BF\\u2800-\\u28FF\\u2B00-\\u2B2F\\u2B45\\u2B46\\u2B4D-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA828-\\uA82B\\uA836\\uA837\\uA839\\uAA77-\\uAA79\\uFD40-\\uFD4F\\uFDCF\\uFDFD-\\uFDFF\\uFFE4\\uFFE8\\uFFED\\uFFEE\\uFFFC\\uFFFD',\n        'astral': '\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFDC\\uDFE1-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838\\uDD4F|\\uD83B[\\uDCAC\\uDD2E]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFA]|\\uD83D[\\uDC00-\\uDED7\\uDEDD-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7C\\uDE80-\\uDE86\\uDE90-\\uDEAC\\uDEB0-\\uDEBA\\uDEC0-\\uDEC5\\uDED0-\\uDED9\\uDEE0-\\uDEE7\\uDEF0-\\uDEF6\\uDF00-\\uDF92\\uDF94-\\uDFCA]'\n    },\n    {\n        'name': 'Z',\n        'alias': 'Separator',\n        'bmp': ' \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n    },\n    {\n        'name': 'Zl',\n        'alias': 'Line_Separator',\n        'bmp': '\\u2028'\n    },\n    {\n        'name': 'Zp',\n        'alias': 'Paragraph_Separator',\n        'bmp': '\\u2029'\n    },\n    {\n        'name': 'Zs',\n        'alias': 'Space_Separator',\n        'bmp': ' \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000'\n    }\n];\n","/*!\n * XRegExp Unicode Categories 5.1.0\n * <xregexp.com>\n * Steven Levithan (c) 2010-present MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nimport categories from '../../tools/output/categories';\n\nexport default (XRegExp) => {\n\n    /**\n     * Adds support for Unicode's general categories. E.g., `\\p{Lu}` or `\\p{Uppercase Letter}`. See\n     * category descriptions in UAX #44 <http://unicode.org/reports/tr44/#GC_Values_Table>. Token\n     * names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 14.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Categories');\n    }\n\n    XRegExp.addUnicodeData(categories);\n};\n","module.exports = [\n    {\n        'name': 'ASCII',\n        'bmp': '\\0-\\x7F'\n    },\n    {\n        'name': 'Alphabetic',\n        'bmp': 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0345\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05B0-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0657\\u0659-\\u065F\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0817\\u081A-\\u082C\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u08D4-\\u08DF\\u08E3-\\u08E9\\u08F0-\\u093B\\u093D-\\u094C\\u094E-\\u0950\\u0955-\\u0963\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C4\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09F0\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B\\u0A4C\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A70-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0AF9-\\u0AFC\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D-\\u0B44\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCC\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D7A-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E46\\u0E4D\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ECD\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F81\\u0F88-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u1036\\u1038\\u103B-\\u103F\\u1050-\\u108F\\u109A-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1713\\u171F-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17B3\\u17B6-\\u17C8\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u1938\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A61-\\u1A74\\u1AA7\\u1ABF\\u1AC0\\u1ACC-\\u1ACE\\u1B00-\\u1B33\\u1B35-\\u1B43\\u1B45-\\u1B4C\\u1B80-\\u1BA9\\u1BAC-\\u1BAF\\u1BBA-\\u1BE5\\u1BE7-\\u1BF1\\u1C00-\\u1C36\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1DE7-\\u1DF4\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u24B6-\\u24E9\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA674-\\uA67B\\uA67F-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA805\\uA807-\\uA827\\uA840-\\uA873\\uA880-\\uA8C3\\uA8C5\\uA8F2-\\uA8F7\\uA8FB\\uA8FD-\\uA8FF\\uA90A-\\uA92A\\uA930-\\uA952\\uA960-\\uA97C\\uA980-\\uA9B2\\uA9B4-\\uA9BF\\uA9CF\\uA9E0-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA60-\\uAA76\\uAA7A-\\uAABE\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABEA\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDE80-\\uDEA9\\uDEAB\\uDEAC\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC45\\uDC71-\\uDC75\\uDC82-\\uDCB8\\uDCC2\\uDCD0-\\uDCE8\\uDD00-\\uDD32\\uDD44-\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD80-\\uDDBF\\uDDC1-\\uDDC4\\uDDCE\\uDDCF\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE34\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEE8\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D-\\uDF44\\uDF47\\uDF48\\uDF4B\\uDF4C\\uDF50\\uDF57\\uDF5D-\\uDF63]|\\uD805[\\uDC00-\\uDC41\\uDC43-\\uDC45\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCC1\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDB5\\uDDB8-\\uDDBE\\uDDD8-\\uDDDD\\uDE00-\\uDE3E\\uDE40\\uDE44\\uDE80-\\uDEB5\\uDEB8\\uDF00-\\uDF1A\\uDF1D-\\uDF2A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC38\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B\\uDD3C\\uDD3F-\\uDD42\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDDF\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE32\\uDE35-\\uDE3E\\uDE50-\\uDE97\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC3E\\uDC40\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD41\\uDD43\\uDD46\\uDD47\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD96\\uDD98\\uDEE0-\\uDEF6\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3\\uDFF0\\uDFF1]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9E]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD47\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]'\n    },\n    {\n        'name': 'Any',\n        'isBmpLast': true,\n        'bmp': '\\0-\\uFFFF',\n        'astral': '[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]'\n    },\n    {\n        'name': 'Default_Ignorable_Code_Point',\n        'bmp': '\\xAD\\u034F\\u061C\\u115F\\u1160\\u17B4\\u17B5\\u180B-\\u180F\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8',\n        'astral': '\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|[\\uDB40-\\uDB43][\\uDC00-\\uDFFF]'\n    },\n    {\n        'name': 'Lowercase',\n        'bmp': 'a-z\\xAA\\xB5\\xBA\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02B8\\u02C0\\u02C1\\u02E0-\\u02E4\\u0345\\u0371\\u0373\\u0377\\u037A-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0560-\\u0588\\u10D0-\\u10FA\\u10FD-\\u10FF\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1DBF\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u2071\\u207F\\u2090-\\u209C\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2170-\\u217F\\u2184\\u24D0-\\u24E9\\u2C30-\\u2C5F\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7D\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B-\\uA69D\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7AF\\uA7B5\\uA7B7\\uA7B9\\uA7BB\\uA7BD\\uA7BF\\uA7C1\\uA7C3\\uA7C8\\uA7CA\\uA7D1\\uA7D3\\uA7D5\\uA7D7\\uA7D9\\uA7F6\\uA7F8-\\uA7FA\\uAB30-\\uAB5A\\uAB5C-\\uAB68\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\n        'astral': '\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD81B[\\uDE60-\\uDE7F]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD837[\\uDF00-\\uDF09\\uDF0B-\\uDF1E]|\\uD83A[\\uDD22-\\uDD43]'\n    },\n    {\n        'name': 'Noncharacter_Code_Point',\n        'bmp': '\\uFDD0-\\uFDEF\\uFFFE\\uFFFF',\n        'astral': '[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]'\n    },\n    {\n        'name': 'Uppercase',\n        'bmp': 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2160-\\u216F\\u2183\\u24B6-\\u24CF\\u2C00-\\u2C2F\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uA7B8\\uA7BA\\uA7BC\\uA7BE\\uA7C0\\uA7C2\\uA7C4-\\uA7C7\\uA7C9\\uA7D0\\uA7D6\\uA7D8\\uA7F5\\uFF21-\\uFF3A',\n        'astral': '\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD81B[\\uDE40-\\uDE5F]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]'\n    },\n    {\n        'name': 'White_Space',\n        'bmp': '\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\n    }\n];\n","/*!\n * XRegExp Unicode Properties 5.1.0\n * <xregexp.com>\n * Steven Levithan (c) 2012-present MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nimport properties from '../../tools/output/properties';\n\nexport default (XRegExp) => {\n\n    /**\n     * Adds properties to meet the UTS #18 Level 1 RL1.2 requirements for Unicode regex support. See\n     * <http://unicode.org/reports/tr18/#RL1.2>. Following are definitions of these properties from\n     * UAX #44 <http://unicode.org/reports/tr44/>:\n     *\n     * - Alphabetic\n     *   Characters with the Alphabetic property. Generated from: Lowercase + Uppercase + Lt + Lm +\n     *   Lo + Nl + Other_Alphabetic.\n     *\n     * - Default_Ignorable_Code_Point\n     *   For programmatic determination of default ignorable code points. New characters that should\n     *   be ignored in rendering (unless explicitly supported) will be assigned in these ranges,\n     *   permitting programs to correctly handle the default rendering of such characters when not\n     *   otherwise supported.\n     *\n     * - Lowercase\n     *   Characters with the Lowercase property. Generated from: Ll + Other_Lowercase.\n     *\n     * - Noncharacter_Code_Point\n     *   Code points permanently reserved for internal use.\n     *\n     * - Uppercase\n     *   Characters with the Uppercase property. Generated from: Lu + Other_Uppercase.\n     *\n     * - White_Space\n     *   Spaces, separator characters and other control characters which should be treated by\n     *   programming languages as \"white space\" for the purpose of parsing elements.\n     *\n     * The properties ASCII, Any, and Assigned are also included but are not defined in UAX #44. UTS\n     * #18 RL1.2 additionally requires support for Unicode scripts and general categories. These are\n     * included in XRegExp's Unicode Categories and Unicode Scripts addons.\n     *\n     * Token names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 14.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Properties');\n    }\n\n    const unicodeData = properties;\n\n    // Add non-generated data\n    unicodeData.push({\n        name: 'Assigned',\n        // Since this is defined as the inverse of Unicode category Cn (Unassigned), the Unicode\n        // Categories addon is required to use this property\n        inverseOf: 'Cn'\n    });\n\n    XRegExp.addUnicodeData(unicodeData);\n};\n","module.exports = [\n    {\n        'name': 'Adlam',\n        'astral': '\\uD83A[\\uDD00-\\uDD4B\\uDD50-\\uDD59\\uDD5E\\uDD5F]'\n    },\n    {\n        'name': 'Ahom',\n        'astral': '\\uD805[\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF46]'\n    },\n    {\n        'name': 'Anatolian_Hieroglyphs',\n        'astral': '\\uD811[\\uDC00-\\uDE46]'\n    },\n    {\n        'name': 'Arabic',\n        'bmp': '\\u0600-\\u0604\\u0606-\\u060B\\u060D-\\u061A\\u061C-\\u061E\\u0620-\\u063F\\u0641-\\u064A\\u0656-\\u066F\\u0671-\\u06DC\\u06DE-\\u06FF\\u0750-\\u077F\\u0870-\\u088E\\u0890\\u0891\\u0898-\\u08E1\\u08E3-\\u08FF\\uFB50-\\uFBC2\\uFBD3-\\uFD3D\\uFD40-\\uFD8F\\uFD92-\\uFDC7\\uFDCF\\uFDF0-\\uFDFF\\uFE70-\\uFE74\\uFE76-\\uFEFC',\n        'astral': '\\uD803[\\uDE60-\\uDE7E]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB\\uDEF0\\uDEF1]'\n    },\n    {\n        'name': 'Armenian',\n        'bmp': '\\u0531-\\u0556\\u0559-\\u058A\\u058D-\\u058F\\uFB13-\\uFB17'\n    },\n    {\n        'name': 'Avestan',\n        'astral': '\\uD802[\\uDF00-\\uDF35\\uDF39-\\uDF3F]'\n    },\n    {\n        'name': 'Balinese',\n        'bmp': '\\u1B00-\\u1B4C\\u1B50-\\u1B7E'\n    },\n    {\n        'name': 'Bamum',\n        'bmp': '\\uA6A0-\\uA6F7',\n        'astral': '\\uD81A[\\uDC00-\\uDE38]'\n    },\n    {\n        'name': 'Bassa_Vah',\n        'astral': '\\uD81A[\\uDED0-\\uDEED\\uDEF0-\\uDEF5]'\n    },\n    {\n        'name': 'Batak',\n        'bmp': '\\u1BC0-\\u1BF3\\u1BFC-\\u1BFF'\n    },\n    {\n        'name': 'Bengali',\n        'bmp': '\\u0980-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FE'\n    },\n    {\n        'name': 'Bhaiksuki',\n        'astral': '\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC45\\uDC50-\\uDC6C]'\n    },\n    {\n        'name': 'Bopomofo',\n        'bmp': '\\u02EA\\u02EB\\u3105-\\u312F\\u31A0-\\u31BF'\n    },\n    {\n        'name': 'Brahmi',\n        'astral': '\\uD804[\\uDC00-\\uDC4D\\uDC52-\\uDC75\\uDC7F]'\n    },\n    {\n        'name': 'Braille',\n        'bmp': '\\u2800-\\u28FF'\n    },\n    {\n        'name': 'Buginese',\n        'bmp': '\\u1A00-\\u1A1B\\u1A1E\\u1A1F'\n    },\n    {\n        'name': 'Buhid',\n        'bmp': '\\u1740-\\u1753'\n    },\n    {\n        'name': 'Canadian_Aboriginal',\n        'bmp': '\\u1400-\\u167F\\u18B0-\\u18F5',\n        'astral': '\\uD806[\\uDEB0-\\uDEBF]'\n    },\n    {\n        'name': 'Carian',\n        'astral': '\\uD800[\\uDEA0-\\uDED0]'\n    },\n    {\n        'name': 'Caucasian_Albanian',\n        'astral': '\\uD801[\\uDD30-\\uDD63\\uDD6F]'\n    },\n    {\n        'name': 'Chakma',\n        'astral': '\\uD804[\\uDD00-\\uDD34\\uDD36-\\uDD47]'\n    },\n    {\n        'name': 'Cham',\n        'bmp': '\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA5F'\n    },\n    {\n        'name': 'Cherokee',\n        'bmp': '\\u13A0-\\u13F5\\u13F8-\\u13FD\\uAB70-\\uABBF'\n    },\n    {\n        'name': 'Chorasmian',\n        'astral': '\\uD803[\\uDFB0-\\uDFCB]'\n    },\n    {\n        'name': 'Common',\n        'bmp': '\\0-@\\\\[-`\\\\{-\\xA9\\xAB-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9-\\u02DF\\u02E5-\\u02E9\\u02EC-\\u02FF\\u0374\\u037E\\u0385\\u0387\\u0605\\u060C\\u061B\\u061F\\u0640\\u06DD\\u08E2\\u0964\\u0965\\u0E3F\\u0FD5-\\u0FD8\\u10FB\\u16EB-\\u16ED\\u1735\\u1736\\u1802\\u1803\\u1805\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u2000-\\u200B\\u200E-\\u2064\\u2066-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20C0\\u2100-\\u2125\\u2127-\\u2129\\u212C-\\u2131\\u2133-\\u214D\\u214F-\\u215F\\u2189-\\u218B\\u2190-\\u2426\\u2440-\\u244A\\u2460-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2E00-\\u2E5D\\u2FF0-\\u2FFB\\u3000-\\u3004\\u3006\\u3008-\\u3020\\u3030-\\u3037\\u303C-\\u303F\\u309B\\u309C\\u30A0\\u30FB\\u30FC\\u3190-\\u319F\\u31C0-\\u31E3\\u3220-\\u325F\\u327F-\\u32CF\\u32FF\\u3358-\\u33FF\\u4DC0-\\u4DFF\\uA700-\\uA721\\uA788-\\uA78A\\uA830-\\uA839\\uA92E\\uA9CF\\uAB5B\\uAB6A\\uAB6B\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFF70\\uFF9E\\uFF9F\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD',\n        'astral': '\\uD800[\\uDD00-\\uDD02\\uDD07-\\uDD33\\uDD37-\\uDD3F\\uDD90-\\uDD9C\\uDDD0-\\uDDFC\\uDEE1-\\uDEFB]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD66\\uDD6A-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDEE0-\\uDEF3\\uDF00-\\uDF56\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDFCB\\uDFCE-\\uDFFF]|\\uD83B[\\uDC71-\\uDCB4\\uDD01-\\uDD3D]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD00-\\uDDAD\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDD-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7C\\uDE80-\\uDE86\\uDE90-\\uDEAC\\uDEB0-\\uDEBA\\uDEC0-\\uDEC5\\uDED0-\\uDED9\\uDEE0-\\uDEE7\\uDEF0-\\uDEF6\\uDF00-\\uDF92\\uDF94-\\uDFCA\\uDFF0-\\uDFF9]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]'\n    },\n    {\n        'name': 'Coptic',\n        'bmp': '\\u03E2-\\u03EF\\u2C80-\\u2CF3\\u2CF9-\\u2CFF'\n    },\n    {\n        'name': 'Cuneiform',\n        'astral': '\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC70-\\uDC74\\uDC80-\\uDD43]'\n    },\n    {\n        'name': 'Cypriot',\n        'astral': '\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F]'\n    },\n    {\n        'name': 'Cypro_Minoan',\n        'astral': '\\uD80B[\\uDF90-\\uDFF2]'\n    },\n    {\n        'name': 'Cyrillic',\n        'bmp': '\\u0400-\\u0484\\u0487-\\u052F\\u1C80-\\u1C88\\u1D2B\\u1D78\\u2DE0-\\u2DFF\\uA640-\\uA69F\\uFE2E\\uFE2F'\n    },\n    {\n        'name': 'Deseret',\n        'astral': '\\uD801[\\uDC00-\\uDC4F]'\n    },\n    {\n        'name': 'Devanagari',\n        'bmp': '\\u0900-\\u0950\\u0955-\\u0963\\u0966-\\u097F\\uA8E0-\\uA8FF'\n    },\n    {\n        'name': 'Dives_Akuru',\n        'astral': '\\uD806[\\uDD00-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD46\\uDD50-\\uDD59]'\n    },\n    {\n        'name': 'Dogra',\n        'astral': '\\uD806[\\uDC00-\\uDC3B]'\n    },\n    {\n        'name': 'Duployan',\n        'astral': '\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9C-\\uDC9F]'\n    },\n    {\n        'name': 'Egyptian_Hieroglyphs',\n        'astral': '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E\\uDC30-\\uDC38]'\n    },\n    {\n        'name': 'Elbasan',\n        'astral': '\\uD801[\\uDD00-\\uDD27]'\n    },\n    {\n        'name': 'Elymaic',\n        'astral': '\\uD803[\\uDFE0-\\uDFF6]'\n    },\n    {\n        'name': 'Ethiopic',\n        'bmp': '\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E',\n        'astral': '\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]'\n    },\n    {\n        'name': 'Georgian',\n        'bmp': '\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u10FF\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u2D00-\\u2D25\\u2D27\\u2D2D'\n    },\n    {\n        'name': 'Glagolitic',\n        'bmp': '\\u2C00-\\u2C5F',\n        'astral': '\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]'\n    },\n    {\n        'name': 'Gothic',\n        'astral': '\\uD800[\\uDF30-\\uDF4A]'\n    },\n    {\n        'name': 'Grantha',\n        'astral': '\\uD804[\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]'\n    },\n    {\n        'name': 'Greek',\n        'bmp': '\\u0370-\\u0373\\u0375-\\u0377\\u037A-\\u037D\\u037F\\u0384\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03E1\\u03F0-\\u03FF\\u1D26-\\u1D2A\\u1D5D-\\u1D61\\u1D66-\\u1D6A\\u1DBF\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u2126\\uAB65',\n        'astral': '\\uD800[\\uDD40-\\uDD8E\\uDDA0]|\\uD834[\\uDE00-\\uDE45]'\n    },\n    {\n        'name': 'Gujarati',\n        'bmp': '\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF'\n    },\n    {\n        'name': 'Gunjala_Gondi',\n        'astral': '\\uD807[\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9]'\n    },\n    {\n        'name': 'Gurmukhi',\n        'bmp': '\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A76'\n    },\n    {\n        'name': 'Han',\n        'bmp': '\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u3005\\u3007\\u3021-\\u3029\\u3038-\\u303B\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFA6D\\uFA70-\\uFAD9',\n        'astral': '\\uD81B[\\uDFE2\\uDFE3\\uDFF0\\uDFF1]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]'\n    },\n    {\n        'name': 'Hangul',\n        'bmp': '\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\u3200-\\u321E\\u3260-\\u327E\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC'\n    },\n    {\n        'name': 'Hanifi_Rohingya',\n        'astral': '\\uD803[\\uDD00-\\uDD27\\uDD30-\\uDD39]'\n    },\n    {\n        'name': 'Hanunoo',\n        'bmp': '\\u1720-\\u1734'\n    },\n    {\n        'name': 'Hatran',\n        'astral': '\\uD802[\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDCFF]'\n    },\n    {\n        'name': 'Hebrew',\n        'bmp': '\\u0591-\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F'\n    },\n    {\n        'name': 'Hiragana',\n        'bmp': '\\u3041-\\u3096\\u309D-\\u309F',\n        'astral': '\\uD82C[\\uDC01-\\uDD1F\\uDD50-\\uDD52]|\\uD83C\\uDE00'\n    },\n    {\n        'name': 'Imperial_Aramaic',\n        'astral': '\\uD802[\\uDC40-\\uDC55\\uDC57-\\uDC5F]'\n    },\n    {\n        'name': 'Inherited',\n        'bmp': '\\u0300-\\u036F\\u0485\\u0486\\u064B-\\u0655\\u0670\\u0951-\\u0954\\u1AB0-\\u1ACE\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u200C\\u200D\\u20D0-\\u20F0\\u302A-\\u302D\\u3099\\u309A\\uFE00-\\uFE0F\\uFE20-\\uFE2D',\n        'astral': '\\uD800[\\uDDFD\\uDEE0]|\\uD804\\uDF3B|\\uD833[\\uDF00-\\uDF2D\\uDF30-\\uDF46]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD]|\\uDB40[\\uDD00-\\uDDEF]'\n    },\n    {\n        'name': 'Inscriptional_Pahlavi',\n        'astral': '\\uD802[\\uDF60-\\uDF72\\uDF78-\\uDF7F]'\n    },\n    {\n        'name': 'Inscriptional_Parthian',\n        'astral': '\\uD802[\\uDF40-\\uDF55\\uDF58-\\uDF5F]'\n    },\n    {\n        'name': 'Javanese',\n        'bmp': '\\uA980-\\uA9CD\\uA9D0-\\uA9D9\\uA9DE\\uA9DF'\n    },\n    {\n        'name': 'Kaithi',\n        'astral': '\\uD804[\\uDC80-\\uDCC2\\uDCCD]'\n    },\n    {\n        'name': 'Kannada',\n        'bmp': '\\u0C80-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2'\n    },\n    {\n        'name': 'Katakana',\n        'bmp': '\\u30A1-\\u30FA\\u30FD-\\u30FF\\u31F0-\\u31FF\\u32D0-\\u32FE\\u3300-\\u3357\\uFF66-\\uFF6F\\uFF71-\\uFF9D',\n        'astral': '\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00\\uDD20-\\uDD22\\uDD64-\\uDD67]'\n    },\n    {\n        'name': 'Kayah_Li',\n        'bmp': '\\uA900-\\uA92D\\uA92F'\n    },\n    {\n        'name': 'Kharoshthi',\n        'astral': '\\uD802[\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F-\\uDE48\\uDE50-\\uDE58]'\n    },\n    {\n        'name': 'Khitan_Small_Script',\n        'astral': '\\uD81B\\uDFE4|\\uD822[\\uDF00-\\uDFFF]|\\uD823[\\uDC00-\\uDCD5]'\n    },\n    {\n        'name': 'Khmer',\n        'bmp': '\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u19E0-\\u19FF'\n    },\n    {\n        'name': 'Khojki',\n        'astral': '\\uD804[\\uDE00-\\uDE11\\uDE13-\\uDE3E]'\n    },\n    {\n        'name': 'Khudawadi',\n        'astral': '\\uD804[\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9]'\n    },\n    {\n        'name': 'Lao',\n        'bmp': '\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF'\n    },\n    {\n        'name': 'Latin',\n        'bmp': 'A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02E0-\\u02E4\\u1D00-\\u1D25\\u1D2C-\\u1D5C\\u1D62-\\u1D65\\u1D6B-\\u1D77\\u1D79-\\u1DBE\\u1E00-\\u1EFF\\u2071\\u207F\\u2090-\\u209C\\u212A\\u212B\\u2132\\u214E\\u2160-\\u2188\\u2C60-\\u2C7F\\uA722-\\uA787\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA7FF\\uAB30-\\uAB5A\\uAB5C-\\uAB64\\uAB66-\\uAB69\\uFB00-\\uFB06\\uFF21-\\uFF3A\\uFF41-\\uFF5A',\n        'astral': '\\uD801[\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD837[\\uDF00-\\uDF1E]'\n    },\n    {\n        'name': 'Lepcha',\n        'bmp': '\\u1C00-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C4F'\n    },\n    {\n        'name': 'Limbu',\n        'bmp': '\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u194F'\n    },\n    {\n        'name': 'Linear_A',\n        'astral': '\\uD801[\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]'\n    },\n    {\n        'name': 'Linear_B',\n        'astral': '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA]'\n    },\n    {\n        'name': 'Lisu',\n        'bmp': '\\uA4D0-\\uA4FF',\n        'astral': '\\uD807\\uDFB0'\n    },\n    {\n        'name': 'Lycian',\n        'astral': '\\uD800[\\uDE80-\\uDE9C]'\n    },\n    {\n        'name': 'Lydian',\n        'astral': '\\uD802[\\uDD20-\\uDD39\\uDD3F]'\n    },\n    {\n        'name': 'Mahajani',\n        'astral': '\\uD804[\\uDD50-\\uDD76]'\n    },\n    {\n        'name': 'Makasar',\n        'astral': '\\uD807[\\uDEE0-\\uDEF8]'\n    },\n    {\n        'name': 'Malayalam',\n        'bmp': '\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F'\n    },\n    {\n        'name': 'Mandaic',\n        'bmp': '\\u0840-\\u085B\\u085E'\n    },\n    {\n        'name': 'Manichaean',\n        'astral': '\\uD802[\\uDEC0-\\uDEE6\\uDEEB-\\uDEF6]'\n    },\n    {\n        'name': 'Marchen',\n        'astral': '\\uD807[\\uDC70-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]'\n    },\n    {\n        'name': 'Masaram_Gondi',\n        'astral': '\\uD807[\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]'\n    },\n    {\n        'name': 'Medefaidrin',\n        'astral': '\\uD81B[\\uDE40-\\uDE9A]'\n    },\n    {\n        'name': 'Meetei_Mayek',\n        'bmp': '\\uAAE0-\\uAAF6\\uABC0-\\uABED\\uABF0-\\uABF9'\n    },\n    {\n        'name': 'Mende_Kikakui',\n        'astral': '\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCD6]'\n    },\n    {\n        'name': 'Meroitic_Cursive',\n        'astral': '\\uD802[\\uDDA0-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDDFF]'\n    },\n    {\n        'name': 'Meroitic_Hieroglyphs',\n        'astral': '\\uD802[\\uDD80-\\uDD9F]'\n    },\n    {\n        'name': 'Miao',\n        'astral': '\\uD81B[\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F]'\n    },\n    {\n        'name': 'Modi',\n        'astral': '\\uD805[\\uDE00-\\uDE44\\uDE50-\\uDE59]'\n    },\n    {\n        'name': 'Mongolian',\n        'bmp': '\\u1800\\u1801\\u1804\\u1806-\\u1819\\u1820-\\u1878\\u1880-\\u18AA',\n        'astral': '\\uD805[\\uDE60-\\uDE6C]'\n    },\n    {\n        'name': 'Mro',\n        'astral': '\\uD81A[\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE6E\\uDE6F]'\n    },\n    {\n        'name': 'Multani',\n        'astral': '\\uD804[\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA9]'\n    },\n    {\n        'name': 'Myanmar',\n        'bmp': '\\u1000-\\u109F\\uA9E0-\\uA9FE\\uAA60-\\uAA7F'\n    },\n    {\n        'name': 'Nabataean',\n        'astral': '\\uD802[\\uDC80-\\uDC9E\\uDCA7-\\uDCAF]'\n    },\n    {\n        'name': 'Nandinagari',\n        'astral': '\\uD806[\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE4]'\n    },\n    {\n        'name': 'New_Tai_Lue',\n        'bmp': '\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE\\u19DF'\n    },\n    {\n        'name': 'Newa',\n        'astral': '\\uD805[\\uDC00-\\uDC5B\\uDC5D-\\uDC61]'\n    },\n    {\n        'name': 'Nko',\n        'bmp': '\\u07C0-\\u07FA\\u07FD-\\u07FF'\n    },\n    {\n        'name': 'Nushu',\n        'astral': '\\uD81B\\uDFE1|\\uD82C[\\uDD70-\\uDEFB]'\n    },\n    {\n        'name': 'Nyiakeng_Puachue_Hmong',\n        'astral': '\\uD838[\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDD4F]'\n    },\n    {\n        'name': 'Ogham',\n        'bmp': '\\u1680-\\u169C'\n    },\n    {\n        'name': 'Ol_Chiki',\n        'bmp': '\\u1C50-\\u1C7F'\n    },\n    {\n        'name': 'Old_Hungarian',\n        'astral': '\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDCFF]'\n    },\n    {\n        'name': 'Old_Italic',\n        'astral': '\\uD800[\\uDF00-\\uDF23\\uDF2D-\\uDF2F]'\n    },\n    {\n        'name': 'Old_North_Arabian',\n        'astral': '\\uD802[\\uDE80-\\uDE9F]'\n    },\n    {\n        'name': 'Old_Permic',\n        'astral': '\\uD800[\\uDF50-\\uDF7A]'\n    },\n    {\n        'name': 'Old_Persian',\n        'astral': '\\uD800[\\uDFA0-\\uDFC3\\uDFC8-\\uDFD5]'\n    },\n    {\n        'name': 'Old_Sogdian',\n        'astral': '\\uD803[\\uDF00-\\uDF27]'\n    },\n    {\n        'name': 'Old_South_Arabian',\n        'astral': '\\uD802[\\uDE60-\\uDE7F]'\n    },\n    {\n        'name': 'Old_Turkic',\n        'astral': '\\uD803[\\uDC00-\\uDC48]'\n    },\n    {\n        'name': 'Old_Uyghur',\n        'astral': '\\uD803[\\uDF70-\\uDF89]'\n    },\n    {\n        'name': 'Oriya',\n        'bmp': '\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77'\n    },\n    {\n        'name': 'Osage',\n        'astral': '\\uD801[\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB]'\n    },\n    {\n        'name': 'Osmanya',\n        'astral': '\\uD801[\\uDC80-\\uDC9D\\uDCA0-\\uDCA9]'\n    },\n    {\n        'name': 'Pahawh_Hmong',\n        'astral': '\\uD81A[\\uDF00-\\uDF45\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]'\n    },\n    {\n        'name': 'Palmyrene',\n        'astral': '\\uD802[\\uDC60-\\uDC7F]'\n    },\n    {\n        'name': 'Pau_Cin_Hau',\n        'astral': '\\uD806[\\uDEC0-\\uDEF8]'\n    },\n    {\n        'name': 'Phags_Pa',\n        'bmp': '\\uA840-\\uA877'\n    },\n    {\n        'name': 'Phoenician',\n        'astral': '\\uD802[\\uDD00-\\uDD1B\\uDD1F]'\n    },\n    {\n        'name': 'Psalter_Pahlavi',\n        'astral': '\\uD802[\\uDF80-\\uDF91\\uDF99-\\uDF9C\\uDFA9-\\uDFAF]'\n    },\n    {\n        'name': 'Rejang',\n        'bmp': '\\uA930-\\uA953\\uA95F'\n    },\n    {\n        'name': 'Runic',\n        'bmp': '\\u16A0-\\u16EA\\u16EE-\\u16F8'\n    },\n    {\n        'name': 'Samaritan',\n        'bmp': '\\u0800-\\u082D\\u0830-\\u083E'\n    },\n    {\n        'name': 'Saurashtra',\n        'bmp': '\\uA880-\\uA8C5\\uA8CE-\\uA8D9'\n    },\n    {\n        'name': 'Sharada',\n        'astral': '\\uD804[\\uDD80-\\uDDDF]'\n    },\n    {\n        'name': 'Shavian',\n        'astral': '\\uD801[\\uDC50-\\uDC7F]'\n    },\n    {\n        'name': 'Siddham',\n        'astral': '\\uD805[\\uDD80-\\uDDB5\\uDDB8-\\uDDDD]'\n    },\n    {\n        'name': 'SignWriting',\n        'astral': '\\uD836[\\uDC00-\\uDE8B\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]'\n    },\n    {\n        'name': 'Sinhala',\n        'bmp': '\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4',\n        'astral': '\\uD804[\\uDDE1-\\uDDF4]'\n    },\n    {\n        'name': 'Sogdian',\n        'astral': '\\uD803[\\uDF30-\\uDF59]'\n    },\n    {\n        'name': 'Sora_Sompeng',\n        'astral': '\\uD804[\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9]'\n    },\n    {\n        'name': 'Soyombo',\n        'astral': '\\uD806[\\uDE50-\\uDEA2]'\n    },\n    {\n        'name': 'Sundanese',\n        'bmp': '\\u1B80-\\u1BBF\\u1CC0-\\u1CC7'\n    },\n    {\n        'name': 'Syloti_Nagri',\n        'bmp': '\\uA800-\\uA82C'\n    },\n    {\n        'name': 'Syriac',\n        'bmp': '\\u0700-\\u070D\\u070F-\\u074A\\u074D-\\u074F\\u0860-\\u086A'\n    },\n    {\n        'name': 'Tagalog',\n        'bmp': '\\u1700-\\u1715\\u171F'\n    },\n    {\n        'name': 'Tagbanwa',\n        'bmp': '\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773'\n    },\n    {\n        'name': 'Tai_Le',\n        'bmp': '\\u1950-\\u196D\\u1970-\\u1974'\n    },\n    {\n        'name': 'Tai_Tham',\n        'bmp': '\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD'\n    },\n    {\n        'name': 'Tai_Viet',\n        'bmp': '\\uAA80-\\uAAC2\\uAADB-\\uAADF'\n    },\n    {\n        'name': 'Takri',\n        'astral': '\\uD805[\\uDE80-\\uDEB9\\uDEC0-\\uDEC9]'\n    },\n    {\n        'name': 'Tamil',\n        'bmp': '\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA',\n        'astral': '\\uD807[\\uDFC0-\\uDFF1\\uDFFF]'\n    },\n    {\n        'name': 'Tangsa',\n        'astral': '\\uD81A[\\uDE70-\\uDEBE\\uDEC0-\\uDEC9]'\n    },\n    {\n        'name': 'Tangut',\n        'astral': '\\uD81B\\uDFE0|[\\uD81C-\\uD820][\\uDC00-\\uDFFF]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEFF]|\\uD823[\\uDD00-\\uDD08]'\n    },\n    {\n        'name': 'Telugu',\n        'bmp': '\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C77-\\u0C7F'\n    },\n    {\n        'name': 'Thaana',\n        'bmp': '\\u0780-\\u07B1'\n    },\n    {\n        'name': 'Thai',\n        'bmp': '\\u0E01-\\u0E3A\\u0E40-\\u0E5B'\n    },\n    {\n        'name': 'Tibetan',\n        'bmp': '\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FD4\\u0FD9\\u0FDA'\n    },\n    {\n        'name': 'Tifinagh',\n        'bmp': '\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F'\n    },\n    {\n        'name': 'Tirhuta',\n        'astral': '\\uD805[\\uDC80-\\uDCC7\\uDCD0-\\uDCD9]'\n    },\n    {\n        'name': 'Toto',\n        'astral': '\\uD838[\\uDE90-\\uDEAE]'\n    },\n    {\n        'name': 'Ugaritic',\n        'astral': '\\uD800[\\uDF80-\\uDF9D\\uDF9F]'\n    },\n    {\n        'name': 'Vai',\n        'bmp': '\\uA500-\\uA62B'\n    },\n    {\n        'name': 'Vithkuqi',\n        'astral': '\\uD801[\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC]'\n    },\n    {\n        'name': 'Wancho',\n        'astral': '\\uD838[\\uDEC0-\\uDEF9\\uDEFF]'\n    },\n    {\n        'name': 'Warang_Citi',\n        'astral': '\\uD806[\\uDCA0-\\uDCF2\\uDCFF]'\n    },\n    {\n        'name': 'Yezidi',\n        'astral': '\\uD803[\\uDE80-\\uDEA9\\uDEAB-\\uDEAD\\uDEB0\\uDEB1]'\n    },\n    {\n        'name': 'Yi',\n        'bmp': '\\uA000-\\uA48C\\uA490-\\uA4C6'\n    },\n    {\n        'name': 'Zanabazar_Square',\n        'astral': '\\uD806[\\uDE00-\\uDE47]'\n    }\n];\n","/*!\n * XRegExp Unicode Scripts 5.1.0\n * <xregexp.com>\n * Steven Levithan (c) 2010-present MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\n\nimport scripts from '../../tools/output/scripts';\n\nexport default (XRegExp) => {\n\n    /**\n     * Adds support for all Unicode scripts. E.g., `\\p{Latin}`. Token names are case insensitive,\n     * and any spaces, hyphens, and underscores are ignored.\n     *\n     * Uses Unicode 14.0.0.\n     *\n     * @requires XRegExp, Unicode Base\n     */\n\n    if (!XRegExp.addUnicodeData) {\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Scripts');\n    }\n\n    XRegExp.addUnicodeData(scripts, 'Script');\n};\n","import XRegExp from './xregexp';\n\nimport build from './addons/build';\nimport matchRecursive from './addons/matchrecursive';\nimport unicodeBase from './addons/unicode-base';\nimport unicodeCategories from './addons/unicode-categories';\nimport unicodeProperties from './addons/unicode-properties';\nimport unicodeScripts from './addons/unicode-scripts';\n\nbuild(XRegExp);\nmatchRecursive(XRegExp);\nunicodeBase(XRegExp);\nunicodeCategories(XRegExp);\nunicodeProperties(XRegExp);\nunicodeScripts(XRegExp);\n\nexport default XRegExp;\n","import e from\"xregexp\";import t from\"lodash\";function r(){r=function(e,t){return new l(e,void 0,t)};var e=RegExp.prototype,t=new WeakMap;function l(e,r,s){var n=new RegExp(e,r);return t.set(n,s||t.get(e)),i(n,l.prototype)}function n(e,r){var s=t.get(r);return Object.keys(s).reduce(function(t,r){return t[r]=e[s[r]],t},Object.create(null))}return s(l,RegExp),l.prototype.exec=function(t){var r=e.exec.call(this,t);return r&&(r.groups=n(r,this)),r},l.prototype[Symbol.replace]=function(r,s){if(\"string\"==typeof s){var i=t.get(this);return e[Symbol.replace].call(this,r,s.replace(/\\$<([^>]+)>/g,function(e,t){return\"$\"+i[t]}))}if(\"function\"==typeof s){var l=this;return e[Symbol.replace].call(this,r,function(){var e=arguments;return\"object\"!=typeof e[e.length-1]&&(e=[].slice.call(e)).push(n(e,l)),s.apply(this,e)})}return e[Symbol.replace].call(this,r,s)},r.apply(this,arguments)}function s(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&i(e,t)}function i(e,t){return i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},i(e,t)}class l{constructor(s){this.LIKE=\"LIKE\",this.parse=e=>{let r=[],s=e;const i=this.splitPatentheses(e);if(!t.isEmpty(i))for(const e in i)s=s.replace(`${i[e]}`,`#${e}`),r.push(this.parse(i[e]));return this.parseQS(s,r)},this.splitPatentheses=t=>e.matchRecursive(t,\"\\\\(\",\"\\\\)\",\"g\"),this.parseQS=(e,t)=>{const s=/*#__PURE__*/r(/(([^\\s|^:|^!:|^>:|^<:]+)(:|!:|>:|<:)([^\\s|\"|\\[]+|\".*?\"|\\[.*?\\]))? ?(OR|AND)? ?([\\+|\\-|\\(#][^\\s]+|)? ?/gm,{key:2,operator:3,value:4,logic:5,plain:6});let i,l=[];for(;null!==(i=s.exec(e));){if(i.index===s.lastIndex&&s.lastIndex++,null===i)continue;let{key:e,value:r,operator:n,plain:a,logic:o}=i.groups;n||(n=\":\");let c=this.LIKE;switch(n){case\":\":default:c=this.LIKE;break;case\"!:\":c=`NOT ${this.LIKE}`;break;case\">:\":c=\">\";break;case\"<:\":c=\"<\"}if(r&&r.match(/\\[.*?\\]/)&&(c=c===`NOT ${this.LIKE}`?\"NOT BETWEEN\":\"BETWEEN\"),r&&-1!==r.indexOf(\",\")&&(c=c===`NOT ${this.LIKE}`?\"NOT IN\":\"IN\"),e&&l.push({key:this.checkAliases(e),operator:c,value:this.parseValue(r),logic:o||\"AND\"}),a&&-1!==a.indexOf(\"#\")){const e=a.replace(/#|\\(|\\)/g,\"\");l.push(t[parseInt(e)])}else if(this.allowGlobalSearch&&a&&-1===a.indexOf(\"#\")){let e=\"plain_+\";a.startsWith(\"-\")&&(e=\"plain_-\"),l.push({operator:e,value:this.parseValue(a.replace(/\\+|\\-/gm,\"\")),logic:o||\"AND\"})}}return l},this.aliases=s&&s.aliases||{},this.allowGlobalSearch=s&&s.allowGlobalSearch||!1,s&&s.caseInsensitive&&(this.LIKE=\"ILIKE\")}checkAliases(e){return this.aliases?this.aliases[e]?this.aliases[e].replaceAll(\"{{key}}\",e):this.aliases[\"*\"]?this.aliases[\"*\"].replaceAll(\"{{key}}\",e):e:e}parseValue(e){return e.replaceAll(/\"|\\?/g,\"\").replaceAll(\"*\",\"%\")}}class n{constructor(e,t=\"pg\"){this.table=e,this.dialect=t}parse(e){let t=\"\",r=[];for(let s of e)if(Array.isArray(s)){const{query:e,bindings:i}=this.parse(s);t+=`(${e})`,r=[...r,...i]}else if(\"object\"==typeof s){const{query:e,bindings:i}=this.convertCondition(s);t+=e,r=[...r,...i]}else console.warn(\"Unknown type detected in qry\");return t=t.replace(/( AND | OR )$/gm,\"\"),{query:t,bindings:r}}convertCondition(e){let{key:t,operator:r,value:s,logic:i}=e;if(!t){if(\"pg\"!==this.dialect)return console.warn(\"Only PostgreSQL supports global searching\"),\"\";let e=\"\";return\"plain_-\"===r&&(e=\"NOT\"),{query:`${e} to_tsvector(${this.table}::text) @@ to_tsquery(?) ${i} `,bindings:[s]}}let l=\"?\",n=[s];return\"BETWEEN\"!==r&&\"NOT BETWEEN\"!==r||(n=s.replace(/\\[|\\]/gm,\"\"),n=n.split(\" TO \"),l=\"? AND ?\"),\"IN\"!==r&&\"NOT IN\"!==r||(n=[s.split(\",\")]),{query:`${t} ${r} ${l} ${i} `,bindings:n}}}class a extends n{toKnex(e,t){const r=this.parse(t);return e.whereRaw(r.query,r.bindings)}}export{l as FQLParser,a as KnexParser,n as SQLParser};\n//# sourceMappingURL=parser.modern.js.map\n","import { Utils } from \"../../../common\";\r\n\r\nimport { FQLParser, KnexParser } from \"@landra_sistemas/fql-parser\";\r\nimport { KnexConnector } from \"..\";\r\n\r\nexport default class KnexFilterParser {\r\n  /**\r\n   *\r\n   * @param {*} builder\r\n   * @param {*} string\r\n   * @returns\r\n   */\r\n  static parseQueryString(builder, string, tableName) {\r\n    const options = {\r\n      allowGlobalSearch: true,\r\n      caseInsensitive: true,\r\n    };\r\n    //Agregar los aliases en caso de que se hayan configurado de forma global\r\n    if (KnexConnector.columnAliases && KnexConnector.columnAliases[tableName]) {\r\n      options.aliases = KnexConnector.columnAliases[tableName];\r\n    }\r\n    //Options\r\n    if (KnexConnector.caseInsensitive !== undefined) {\r\n      options.caseInsensitive = KnexConnector.caseInsensitive;\r\n    }\r\n    if (KnexConnector.allowGlobalSearch !== undefined) {\r\n      options.allowGlobalSearch = KnexConnector.allowGlobalSearch;\r\n    }\r\n    const parser = new FQLParser(options);\r\n    const data = parser.parse(string);\r\n\r\n    return new KnexParser(tableName).toKnex(builder, data);\r\n  }\r\n\r\n  /**\r\n   * Convierte un objeto clave valor en un conjunto de filtros.\r\n   *\r\n   * - Filtro estandar:\r\n   *    filters: {\r\n   *       \"column\": \"value\" -> filtro generico exact\r\n   *    }\r\n   * - Filtro Objeto:\r\n   *    filters:{\r\n   *       \"column\": {\r\n   *       \"type\": \"date|between|exists|notexists|greater|greaterEq|less|lessEq|exact|exactI|not|null|notnull|like|likeI\"\r\n   *       \"start\": \"xxx\", //inicio de rango para el filtro de date y between\r\n   *       \"end\": \"xxx\", //fin de rango para el filtro date y between\r\n   *       \"value\": \"xxx\" //valor a utilizar para el resto de filtros\r\n   *     }\r\n   * }\r\n   *  - Filtro Lista:\r\n   *     filters: {\r\n   *       \"column\": [1, 2, 3]\r\n   *     }\r\n   *    Filtro de tipo IN, todos los elementos que coincidan\r\n   *\r\n   * - Definicion de tipos:\r\n   *    date: filtro de fechas desde y hasta\r\n   *    between: filtro entre dos valores concretos\r\n   *    exists: busca si existe la propiedad\r\n   *    notexists: busca si existe la propiedad\r\n   *    greater: mayor que\r\n   *    greaterEq: mayor o igual que\r\n   *    less: menor que\r\n   *    lessEq: menor o igual que\r\n   *    exact: valor exacto\r\n   *    exactI: valor exacto ignorando mayusculas y minusculas\r\n   *    not: distinto de\r\n   *    null: igual a null\r\n   *    notnull: distinto de null\r\n   *    like: filtro like\r\n   *    likeI: filtro like ignorando mayusculas y minusculas\r\n   */\r\n  static parseFilters(builder, filter, tableName) {\r\n    let query = builder;\r\n\r\n    for (let prop in filter) {\r\n      let elm = filter[prop];\r\n\r\n      if (typeof elm === \"object\") {\r\n        switch (elm.type) {\r\n          case \"fql\":\r\n            query = KnexFilterParser.parseQueryString(\r\n              query,\r\n              elm.value,\r\n              tableName\r\n            );\r\n            break;\r\n          case \"date\":\r\n          case \"between\":\r\n            if (elm.start && elm.end) {\r\n              query = query.whereBetween(prop, [elm.start, elm.end]);\r\n            }\r\n            if (elm.start && !elm.end) {\r\n              query = query.where(prop, \">=\", elm.start);\r\n            }\r\n            if (!elm.start && elm.end) {\r\n              query = query.where(prop, \">=\", elm.end);\r\n            }\r\n            break;\r\n          case \"dateraw\":\r\n          case \"betweenraw\":\r\n            if (elm.start && elm.end) {\r\n              query = query.whereRaw(`${prop} BETWEEN ? AND ?`, [\r\n                elm.start,\r\n                elm.end,\r\n              ]);\r\n            }\r\n            if (elm.start && !elm.end) {\r\n              query = query.whereRaw(`${prop} >= ?`, [elm.start]);\r\n            }\r\n            if (!elm.start && elm.end) {\r\n              query = query.whereRaw(`${prop} >= ?`, [elm.end]);\r\n            }\r\n            break;\r\n          case \"jsonb\":\r\n            query = query.whereRaw(`${prop} ILIKE ?`, [\"%\" + elm.value + \"%\"]);\r\n            break;\r\n          case \"full-text-psql\":\r\n            query = query.whereRaw(\r\n              `to_tsvector(${prop}::text) @@ to_tsquery(?)`,\r\n              [elm.value]\r\n            );\r\n            break;\r\n\r\n          case \"greater\":\r\n          case \"greaterraw\":\r\n            query = query.whereRaw(`${prop} > ?`, [elm.value]);\r\n            break;\r\n          case \"greaterEq\":\r\n          case \"greaterEqraw\":\r\n            query = query.whereRaw(`${prop} >= ?`, [elm.value]);\r\n            break;\r\n          case \"less\":\r\n          case \"lessraw\":\r\n            query = query.whereRaw(`${prop} < ?`, [elm.value]);\r\n            break;\r\n          case \"lessEq\":\r\n          case \"lessEqraw\":\r\n            query = query.whereRaw(`${prop} <= ?`, [elm.value]);\r\n            break;\r\n          case \"exists\":\r\n            query = query.whereExists(prop);\r\n            break;\r\n          case \"notexists\":\r\n            query = query.whereNotExists(prop);\r\n            break;\r\n          case \"exact\":\r\n          case \"exactraw\":\r\n            query = query.whereRaw(`${prop} = ?`, [elm.value]);\r\n            break;\r\n          case \"in\":\r\n            let propComplex = prop;\r\n            if (propComplex.includes(\",\")) {\r\n              propComplex = prop.split(\",\");\r\n            }\r\n            if (!Array.isArray(elm.value) && elm.value != undefined) {\r\n              query = query.whereIn(propComplex, elm.value.split(\",\"));\r\n            } else {\r\n              if (elm.value != undefined) {\r\n                query = query.whereIn(propComplex, elm.value);\r\n              }\r\n            }\r\n            break;\r\n          case \"inraw\":\r\n            if (!Array.isArray(elm.value) && elm.value != undefined) {\r\n              query = query.whereRaw(`${prop} IN (?)`, [\r\n                elm.value\r\n                  .split(\",\")\r\n                  .map((e) => `'${e}'`)\r\n                  .join(\",\"),\r\n              ]);\r\n            } else {\r\n              if (elm.value != undefined) {\r\n                query = query.whereRaw(`${prop} IN (?)`, [\r\n                  elm.value.map((e) => `'${e}'`).join(\",\"),\r\n                ]);\r\n              }\r\n            }\r\n            break;\r\n          case \"not\":\r\n          case \"notraw\":\r\n            query = query.whereRaw(`${prop} != ?`, [elm.value]);\r\n            break;\r\n          case \"like\":\r\n          case \"likeraw\":\r\n            let value_likeraw = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n            query = query.whereRaw(` ${prop} LIKE ?`, [value_likeraw]);\r\n            break;\r\n          case \"notlike\":\r\n          case \"notlikeraw\":\r\n            let value_nolikeraw = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n            query = query.whereRaw(` ${prop} NOT LIKE ?`, [value_nolikeraw]);\r\n            break;\r\n          case \"likeI\":\r\n            let value_rawilike = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n            query = query.whereRaw(` ${prop} ILIKE ?`, [value_rawilike]);\r\n            break;\r\n          case \"notlikeI\":\r\n            let value_notrawilike = Utils.replaceAll(elm.value, \"*\", \"%\");\r\n            query = query.whereRaw(` ${prop} NOT ILIKE ?`, [value_notrawilike]);\r\n            break;\r\n          case \"null\":\r\n          case \"nullraw\":\r\n            query = query.whereRaw(`${prop} is NULL`);\r\n            break;\r\n          case \"notnull\":\r\n          case \"notnullraw\":\r\n            query = query.whereRaw(`${prop} is not NULL`);\r\n            break;\r\n        }\r\n      } else {\r\n        //Si el valor no es un objeto se devuelve\r\n        query = query.where(prop, elm);\r\n      }\r\n    }\r\n\r\n    // console.log(query.toSQL());\r\n    return query;\r\n  }\r\n\r\n  /**\r\n   * Conversion de un objeto {property: XX, direction: ASC|DESC - ascend|descend} a un ORDER BY\r\n   *\r\n   * @param {*} sorts\r\n   */\r\n  static parseSort(sort) {\r\n    if (!sort.field || !sort.direction) {\r\n      return 1;\r\n    }\r\n\r\n    let direction = \"ASC\";\r\n    if (sort.direction === \"descend\") {\r\n      direction = \"DESC\";\r\n    }\r\n\r\n    return sort.field + \" \" + direction;\r\n  }\r\n}\r\n","import Knex from 'knex'\r\n\r\nclass KnexConnector {\r\n\r\n\r\n    init(config) {\r\n\r\n        /**\r\n         * References the current connection of the app\r\n         * @type {Knex}\r\n         * @public\r\n         */\r\n        this.connection = Knex(config)\r\n    }\r\n\r\n    /**\r\n     * Configura de forma global los aliases de las columnas para utilizar en FQL.\r\n     * \r\n     * La estructura es \r\n     * {\r\n            \"table1\": {\r\n                \"alias1\": \"column1\",\r\n                \"alias2\": \"column2\"\r\n            },\r\n            \"table2\": {\r\n                \"alias1\": \"column1\"\r\n            }\r\n        }\r\n     *\r\n     * @param {*} aliases \r\n     */\r\n    setColumnAliases(aliases) {\r\n        this.columnAliases = aliases;\r\n    }\r\n    \r\n\r\n\r\n    test() {\r\n        return this.connection.raw('select 1+1 as result');\r\n    }\r\n}\r\n\r\n\r\nexport default new KnexConnector();","import KnexFilterParser from '../filters/KnexFilterParser';\r\nimport KnexConnector from '../KnexConnector';\r\n\r\nimport lodash from 'lodash';\r\n\r\n/**\r\n * Crear un dao con los métodos básicos\r\n */\r\nexport default class BaseKnexDao {\r\n\r\n    tableName = \"\";\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n\r\n    loadAllData(start, limit) {\r\n        return KnexConnector.connection.select('*').from(this.tableName).limit(limit || 10000).offset(start)\r\n    }\r\n\r\n    async loadFilteredData(filters, start, limit) {\r\n        let sorts = 1;\r\n        if (filters.sort) {\r\n            sorts = KnexFilterParser.parseSort(filters.sort);\r\n        }\r\n\r\n        return KnexConnector.connection.from(this.tableName).where((builder) => (\r\n            KnexFilterParser.parseFilters(builder, lodash.omit(filters, ['sort', 'start', 'limit']), this.tableName)\r\n        )).orderByRaw(sorts).limit(limit).offset(start);\r\n\r\n    }\r\n\r\n    \r\n    async countFilteredData(filters) {\r\n        let data = await KnexConnector.connection.from(this.tableName).where((builder) => (\r\n            KnexFilterParser.parseFilters(builder, lodash.omit(filters, ['sort', 'start', 'limit']), this.tableName)\r\n        )).count('id', { as: 'total' });\r\n\r\n        return data && data[0].total;\r\n    }\r\n\r\n    async loadById(objectId) {\r\n        const data = await KnexConnector.connection.from(this.tableName).where('id', objectId);\r\n\r\n        if (data && data[0]) {\r\n            return data[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    save(object) {\r\n        return KnexConnector.connection.from(this.tableName).insert(object).returning(\"*\");\r\n    }\r\n    update(objectId, newObject) {\r\n        return KnexConnector.connection.from(this.tableName).where(\"id\", objectId).update(newObject).returning(\"*\");\r\n    }\r\n    async delete(objectId) {\r\n        const existing = await this.loadById(objectId);\r\n        if (!existing) {\r\n            throw \"NotFound\";\r\n        }\r\n        return KnexConnector.connection.from(this.tableName).where(\"id\", objectId).delete()\r\n    }\r\n}\r\n","import BaseKnexDao from \"./knex/dao/BaseKnexDao\";\r\n\r\nexport default class IUserDao extends BaseKnexDao {\r\n    constructor(tableName) {\r\n        super(tableName);\r\n\r\n        if (!this.findByUsername) {\r\n            throw new Error(\"AuthHandler must have 'findByUsername' method\");\r\n        }\r\n    }\r\n}\r\n\r\n","import express from \"express\";\r\nimport { JsonResponse, Utils } from \"../common\";\r\n\r\nexport class BaseController {\r\n    constructor() {\r\n        this.router = express.Router();\r\n    }\r\n\r\n    configure(entity, config) {\r\n        const exAsync = Utils.expressHandler();\r\n        this.router.get(\r\n            `/${entity}`,\r\n            exAsync((request, response, next) => {\r\n                this.listEntidad(request, response, next);\r\n            })\r\n        );\r\n        this.router.post(\r\n            `/${entity}/list`,\r\n            exAsync((request, response, next) => {\r\n                this.listEntidad(request, response, next);\r\n            })\r\n        );\r\n        this.router.get(\r\n            `/${entity}/:id`,\r\n            exAsync((request, response, next) => {\r\n                this.getEntidad(request, response, next);\r\n            })\r\n        );\r\n        this.router.post(\r\n            `/${entity}`,\r\n            exAsync((request, response, next) => {\r\n                this.saveEntidad(request, response, next);\r\n            })\r\n        );\r\n        this.router.put(\r\n            `/${entity}/:id`,\r\n            exAsync((request, response, next) => {\r\n                this.updateEntidad(request, response, next);\r\n            })\r\n        );\r\n        this.router.delete(\r\n            `/${entity}/:id`,\r\n            exAsync((request, response, next) => {\r\n                this.deleteEntidad(request, response, next);\r\n            })\r\n        );\r\n\r\n        this.service = config.service;\r\n        this.table = config.table;\r\n\r\n        return this.router;\r\n    }\r\n\r\n    /**\r\n     * Lista entidades en la aplicacion, es posible enviarle parametros de filtrado.\r\n     *\r\n     *\r\n     * @api {post} /:entidad/list Listar entidades\r\n     * @apiName Listar entidades\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async listEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n            let filters =\r\n                request.method === \"POST\"\r\n                    ? request.body\r\n                    : request.query && request.query.filters\r\n                    ? JSON.parse(request.query.filters)\r\n                    : {};\r\n\r\n            let data = await service.list(filters, filters.start, filters.limit);\r\n            let jsRes = new JsonResponse(true, data.data, null, data.total);\r\n\r\n            response.json(jsRes.toJson());\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    }\r\n    /**\r\n     *Obtiene un elemento concreto mediante su identificador\r\n     *\r\n     *\r\n     * @api {get} /:entidad/:id Obtener entidad\r\n     * @apiName Obtener entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async getEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n            let data = await service.loadById(request.params.id);\r\n            let jsRes = new JsonResponse(true, data);\r\n            let code = 200;\r\n            if (data == null) {\r\n                code = 404;\r\n                let message = \"Element not found\";\r\n                jsRes = new JsonResponse(false, null, message, 0);\r\n            }\r\n\r\n            response.status(code).json(jsRes.toJson());\r\n        } catch (e) {\r\n            console.error(e);\r\n            let message = \"\";\r\n            if (e.code == \"22P02\") {\r\n                //PostgreSQL error Code form string_to_UUID\r\n                message = \"Expected uiid\";\r\n            }\r\n            let jsRes = new JsonResponse(false, null, message, 0);\r\n            response.status(400).json(jsRes.toJson());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Almacena un elemento en BD\r\n     *\r\n     *\r\n     * @api {post} /:entidad/:id Crear entidad\r\n     * @apiName Crear entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async saveEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n\r\n            let data = await service.save(request.body);\r\n            let jsRes = new JsonResponse(true, (data && data[0]) || { id: request.body.id });\r\n\r\n            response.setHeader(\"Location\", `/entity/${jsRes.data.id}`);\r\n            response.status(201).json(jsRes.toJson());\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Almacena un elemento en BD\r\n     *\r\n     *\r\n     * @api {put} /:entidad/:id Actualizar entidad\r\n     * @apiName Actualizar entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async updateEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n\r\n            let data = await service.update(request.params.id, request.body);\r\n            let jsRes = new JsonResponse(true, (data && data[0]) || { id: request.body.id });\r\n\r\n            response.json(jsRes.toJson());\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Elimina un elemento correspondiente al identificador recibido\r\n     *\r\n     *\r\n     * @api {delete} /:entidad/:id/delete Delete entidad\r\n     * @apiName Eliminar entidad\r\n     * @apiGroup Comun\r\n     * @apiPermission Auth Basic username:pwd\r\n     * @apiParam {Number} id entidades unique ID.\r\n     *\r\n     * @apiSuccess {Boolean} success\r\n     * @apiSuccess {Object[]} data  dataObject\r\n     */\r\n    async deleteEntidad(request, response, next) {\r\n        try {\r\n            let service = new this.service(null, this.table);\r\n            let data = await service.delete(request.params.id);\r\n            let jsRes = new JsonResponse(true, data);\r\n\r\n            response.status(204).json(jsRes.toJson());\r\n        } catch (e) {\r\n            console.error(e);\r\n            if (e == \"NotFound\") {\r\n                let message = \"Element not found\";\r\n                let jsRes = new JsonResponse(false, null, message, 0);\r\n                response.status(404).json(jsRes.toJson());\r\n            } else {\r\n                next(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { BaseKnexDao } from '../db';\r\n\r\n\r\nexport class BaseService {\r\n\r\n\r\n    constructor(cls, table) {\r\n        if (cls) {\r\n            this.dao = new cls();\r\n        } else {\r\n            this.dao = new BaseKnexDao(); //El sistema por defecto utiliza knex, si se pasa un dao personalizado se puede sobreescribir este comportamiento\r\n        }\r\n        if (table) {\r\n            this.dao.tableName = table;\r\n        }\r\n    }\r\n    /**\r\n     * Obtencion de una lista de elementos.\r\n     *\r\n     * filters, es opcional. Si no se pasan se devuelve lo que hay ;\r\n     */\r\n    async list(filters, start, limit) {\r\n        //Pagination\r\n        var start = start || 0;\r\n        var limit = limit || 1000;//Default limit\r\n\r\n        let response = {};\r\n        response.total = await this.dao.countFilteredData(filters, start, limit);\r\n\r\n        if (filters && Object.keys(filters).length !== 0) {\r\n            let filteredData = await this.dao.loadFilteredData(filters, start, limit)\r\n            response.data = filteredData\r\n            return response;\r\n        }\r\n\r\n        response.data = await this.dao.loadAllData(start, limit);\r\n        return response;\r\n    }\r\n\r\n\r\n    /**\r\n     * Obtencion de un elemento mediante su identificador\r\n     */\r\n    loadById(id) {\r\n        return this.dao.loadById(id);\r\n    }\r\n    /**\r\n     * Metodo de creacion.\r\n     *\r\n     * Si el identificador se pasa como undefined se creara un nuevo elemento,\r\n     * sino se modifica el correspondiente.\r\n     */\r\n    save(data) {\r\n        //Create\r\n        return this.dao.save(data);\r\n    }\r\n    /**\r\n     * Metodo de creacion.\r\n     *\r\n     * Si el identificador se pasa como undefined se creara un nuevo elemento,\r\n     * sino se modifica el correspondiente.\r\n     */\r\n    update(id, data) {\r\n        if (id) {\r\n            //Update\r\n            return this.dao.update(id, data);\r\n        }\r\n    }\r\n    /**\r\n     * Metodo de eliminado.\r\n     *\r\n     * El identificador es obligatorio para poder localizar el elemento a eliminar.\r\n     */\r\n    delete(id) {\r\n        if (id) {\r\n            return this.dao.delete(id);\r\n        }\r\n    }\r\n}\r\n\r\n","import { I18nLoader, Utils } from \"./common\";\r\nimport { EventHandler } from \"./events\";\r\nimport { ClusterServer, Server } from \"./server\";\r\nimport { Logger } from \"./logger\";\r\n\r\nimport net from 'net';\r\nimport repl from 'repl';\r\n\r\nclass App {\r\n\r\n    serverClass = Server\r\n    clusterClass = ClusterServer\r\n\r\n    /**\r\n     * Initializa las configuraciones para la app\r\n     * \r\n     */\r\n    async init(serverConfig) {\r\n        if (process.env.DISABLE_LOGGER != \"true\") {\r\n            await Logger.configure();\r\n        }\r\n\r\n        //Instanciar la clase server\r\n        const server = new this.serverClass(serverConfig, this.statics, this.routes);\r\n        if (this.customizeExpress) {\r\n            server.customizeExpress = this.customizeExpress;\r\n        }\r\n        if (this.beforeListen) {\r\n            server.beforeListen = this.beforeListen;\r\n        }\r\n        if (this.afterListen) {\r\n            server.afterListen = this.afterListen;\r\n        }\r\n\r\n        /**\r\n         * Gestor de eventos\r\n         * @type {EventHandler}\r\n         * @public\r\n         */\r\n        this.events = new EventHandler(this);\r\n        \r\n        /**\r\n         * Gestor de traducciones\r\n         * @type {I18nLoader}\r\n         * @public\r\n         */\r\n        this.i18n = new I18nLoader();\r\n        await this.i18n.load();\r\n        /**\r\n         * Servidor actual\r\n         * @type {ClusterServer}\r\n         * @public\r\n         */\r\n        this.server = new this.clusterClass(this);\r\n\r\n        this.server.setServerCls(server);\r\n        this.server.executeOnlyMain = () => {\r\n            if (this.executeOnlyMain) this.executeOnlyMain();\r\n\r\n            if (process.env.REPL_ENABLED == \"true\") {\r\n                this.startRepl();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ejecuta el servidor con la configuracion de #init()\r\n     */\r\n    async start() {\r\n        if (!this.server) {\r\n            throw new Error(\"Call init first\");\r\n        }\r\n        await this.server.start();\r\n    }\r\n\r\n\r\n    /**\r\n     * Inicia el server replify para poder conectar terminales remotas\r\n     * \r\n     * \r\n     * Para que arranque es necesario especificar REPL_ENABLED en el archivo .env\r\n     */\r\n    startRepl() {\r\n        try {\r\n            net.createServer((socket) => {\r\n                const remote = repl.start({\r\n                    prompt: \"lisco::remote> \",\r\n                    input: socket,\r\n                    output: socket,\r\n                    terminal: true,\r\n                    useColors: true,\r\n                    preview: false\r\n                });\r\n                remote.context.app = this;\r\n                remote.context.Utils = Utils;\r\n                remote.on('exit', socket.end.bind(socket))\r\n            }).listen(process.env.REPL_PORT || 5001);\r\n        } catch (e) {\r\n            console.log(\"Remote REPL Conn: \" + e);\r\n        }\r\n\r\n        console.log(`Remote REPL started on port ${(process.env.REPL_PORT || 5001)}`);\r\n\r\n    }\r\n}\r\n\r\nexport default new App();"],"names":["crypto","util","fs","path","uuid","jsonwebtoken","express","lodash","helmet","compression","cors","fileUpload","url","require$$0","require$$1","EventEmitter","Server","cluster","ClusterMessages","os","http","https","log4js","pathToRegexp","moment","t","e","KnexConnector","FQLParser","KnexParser","Knex","net","repl"],"mappings":"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"}