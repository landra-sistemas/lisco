import e from"helmet";import t from"express";import s from"compression";import r from"cors";import o from"express-fileupload";import a from"url";import n from"lodash";import i from"fs";import c from"util";import l from"crypto";import u from"chokidar";import h from"jsonwebtoken";import*as p from"uuid";import d from"http";import f from"https";import w from"path";import m from"cluster";import{Server as v}from"socket.io";import y from"os";import{EventEmitter as g}from"events";import b from"cluster-messages";import E from"log4js";import{pathToRegexp as S}from"path-to-regexp";import k from"moment";import{FQLParser as x,KnexParser as R}from"@landra_sistemas/fql-parser";import L from"knex";import D from"net";import A from"repl";import j from"yargs/yargs";import{hideBin as N}from"yargs/helpers";class _{static arrayToLower(e){return e.join("~").toLowerCase().split("~")}static replaceAll(e,t,s){return e.replace(new RegExp(t.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"),"g"),s)}static encrypt(e){const t=Buffer.from(process.env.CRYPT_SECRET,"hex"),s=Buffer.from(process.env.CRYPT_IV,"hex"),r=l.createCipheriv("aes-256-cbc",t,s);let o=r.update(e);return o=Buffer.concat([o,r.final()]),o.toString("hex")}static decrypt(e){const t=Buffer.from(process.env.CRYPT_SECRET,"hex"),s=Buffer.from(process.env.CRYPT_IV,"hex"),r=Buffer.from(e,"hex"),o=l.createDecipheriv("aes-256-cbc",t,s);let a=o.update(r);return a=Buffer.concat([a,o.final()]),a.toString()}static sleep(e){return c.promisify(setTimeout)(e)}static generateKeys(){return{key:l.randomBytes(32).toString("hex"),iv:l.randomBytes(16).toString("hex")}}static flattenObject(e){let t,s={};for(let r in e)if(e.hasOwnProperty(r))if(e[r]&&Array===e[r].constructor)s[r]=e[r];else if("object"==typeof e[r]){t=_.flattenObject(e[r]);for(let e in t)t.hasOwnProperty(e)&&(t[e]&&Array===t.constructor||(s[r+(isNaN(e)?"."+e:"")]=t[e]))}else s[r]=e[r];return s}static unflatten(e){var t={};for(var s in e){var r=s.split(".");r.reduce(function(t,o,a){return t[o]||(t[o]=isNaN(Number(r[a+1]))?r.length-1==a?e[s]:{}:[])},t)}return t}static expressHandler(){return e=>function(...t){const s=e(...t),r=t[t.length-1];return Promise.resolve(s).catch(e=>r(e))}}}class T{constructor(){this.watcher={}}async load(e){const t=e||process.env.DEFAULT_LANG;this.currentData||(this.currentData={}),this.currentDataFlat||(this.currentDataFlat={});const s=process.cwd()+"/i18n/lang_"+t+".json";this.watcher[t]=u.watch(s,{ignored:/(^|[/\\])\../,persistent:!0}),this.watcher[t].on("change",e=>this.loadFile(e,t)),await this.loadFile(s,t)}async loadFile(e,t){const s=c.promisify(i.readFile);try{const o=await s(e,"utf8");var r=JSON.parse(o);this.currentDataFlat[t]=_.flattenObject(r),this.currentData[t]=r}catch(e){if("ENOENT"===(null==e?void 0:e.code))return console.log("Lang file does not exist. Create it on ./i18n/lang_{xx}.json");console.error(e)}}async translate(e,t){return t||(t=process.env.DEFAULT_LANG),this.currentDataFlat&&this.currentDataFlat[t]&&this.currentDataFlat[t][e]?this.currentData[t][e]:this.currentDataFlat&&this.currentDataFlat[t]||(await this.load(t),!(this.currentDataFlat&&this.currentDataFlat[t]&&this.currentDataFlat[e]))?"undefined."+e:this.currentDataFlat[t][e]}}class I{constructor(e,t,s,r){this.data=t,this.success=e,this.total=r,this.message=s||""}toJson(){return this}}function O(){return O=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r])}return e},O.apply(this,arguments)}class ${constructor(e,t){this.privateKey=e,this.options=t}sign(e){const t=O({},this.options,{jwtid:p.v4()});return h.sign(e,this.privateKey,t)}verify(e){return h.verify(e,this.privateKey,this.options)}refresh(e){const t=h.verify(e,this.privateKey,this.options);delete t.sub,delete t.iss,delete t.aud,delete t.iat,delete t.exp,delete t.nbf,delete t.jti;const s=O({},this.options,{jwtid:p.v4()});return h.sign(t,this.privateKey,s)}}class P{constructor(e,s,r){this.app=t(),this.express_config=n.defaultsDeep(e,{helmet:!0,json:!0,urlencoded:!0,compression:!0,cors:{origin:!0,credentials:!0},fileupload:!0,socketio:{transports:["websocket"]},traceRequests:!1}),this.statics=s,this.routes=r}async initialize(){this.config(this.express_config),this.customizeExpress&&await this.customizeExpress(this.app),await this.configureRoutes(this.routes),await this.errorHandler()}customizeExpress(){}config(i){if(i&&i.helmet&&this.app.use(e(i&&n.isObject(i.helmet)&&i.helmet)),i&&i.json&&this.app.use(t.json()),i&&i.urlencoded&&this.app.use(t.urlencoded({extended:!0})),i&&i.compression&&this.app.use(s()),i&&i.cors&&(this.app.options("*",r(i&&n.isObject(i.cors)&&i.cors)),this.app.use(r(i&&n.isObject(i.cors)&&i.cors))),i&&i.fileupload&&this.app.use(o()),this.statics)for(const e in this.statics)this.app.use(e,t.static(this.statics[e]));i&&!0===i.traceRequests&&"true"!=process.env.DISABLE_LOGGER&&this.app.use((e,t,s)=>{e.requestTime=Date.now(),t.on("finish",()=>{let t=a.parse(e.url).pathname,s=Date.now()-e.requestTime;console.debug("APIRequest["+process.pid+"]::. ["+e.method+"] (user:"+(e&&e.session&&e.session.user_id||"")+")  "+t+" |-> took: "+s+" ms"),console.debug(JSON.stringify(e.body))}),s()})}configureRoutes(e){const s=t.Router();this.app.use(s),this.loadRoutes(this.app,e)}loadRoutes(e,t){if(t)for(const s of t){if(!s){console.warn("Empty route");continue}let t=s.configure();if(s.entity&&(t=s.configure(s.entity,{service:s.service,table:s.table})),!n.isEmpty(s.routes)){const e=_.expressHandler();for(const r in s.routes){const o=s.routes[r];for(const s in o){const a=o[s];Array.isArray(a)?t[s](r,a[0],e(a[1])):t[s](r,e(a))}}}t&&e.use(t)}}errorHandler(){this.app.use((e,t,s,r)=>{let o=new I;o.success=!1,o.message=e.message,console.error(e),s.status(500).json(o.toJson())})}}class C extends g{constructor(e){super(),process.env.PORT||console.log("Using 3000 as default port. Customize via env PORT."),this.port=this.normalizePort(process.env.PORT||3e3),this.clustered=process.env.CLUSTERED,this.workers=[],this.app=e,this.executeOnlyMain=()=>{}}setServerCls(e){this.server=e}async start(){"true"==this.clustered?this.initClustered():(this.configureSocketIO(),this.executeOnlyMain(),await this.initUnclustered())}configureSocketIO(){this.server.express_config&&this.server.express_config.socketio&&(this.app.io=new v(this.server.express_config&&this.server.express_config.socketio),this.app.io.listen(this.port+1))}async initClustered(){if(m.isPrimary){this.configureSocketIO(),this.executeOnlyMain(),(new b).on("event",(e,t)=>{e&&e.event&&(1==process.env.DEBUG_EVENTS&&console.debug(`Received '${e.event}' from ${e.props.owner} at Master`),this.app.events.emit(e.event,e.props,t))});const e=y.cpus().length;for(let t=0;t<e;t+=1)this.initWorker();m.on("exit",e=>{console.log("Worker "+e.id+" died :("),this.initWorker()})}else await this.initUnclustered(),console.log(`Worker ${process.pid} started`)}initWorker(){let e=m.fork();console.log(`Running worker ${e.process.pid}`),this.workers.push(e)}async initUnclustered(){this.server.port=this.port;let e=d.Server(this.server.app);if(await this.server.initialize(),this.server.beforeListen&&await this.server.beforeListen(),e.listen(this.server.port),this.server.afterListen&&await this.server.afterListen(),e.on("error",e=>{this.handleErrors(e,this.server.port)}),e.on("listening",()=>{console.log("Server Worker running on port: "+this.port+"!"),this.emit("listening",this.port)}),process.env.SSL&&"true"==process.env.SSL){process.env.SSL_KEY&&process.env.SSL_CERT&&process.env.SSL_PASS||(console.error("Invalid SSL configuration. SLL_KEY, SSL_CERT and SSL_PASS needed"),process.exit(0));var t={key:i.readFileSync(w.resolve(process.cwd(),process.env.SSL_KEY||"key.pem")),cert:i.readFileSync(w.resolve(process.cwd(),process.env.SSL_CERT||"cert.pem")),passphrase:process.env.SSL_PASS};process.env.SSL_PORT||console.log("Using 3443 as ssl default port. Customize via env SSL_PORT.");var s=this.normalizePort(process.env.SSL_PORT||3443),r=f.createServer(t,this.server.app);r.listen(s),r.on("error",e=>{this.handleErrors(e,s)}),r.on("listening",()=>{console.log("Server Worker running on port: "+s+"!"),this.emit("listening_ssl",s)})}}normalizePort(e){let t=parseInt(e,10);return isNaN(t)?e:t>=0&&t}handleErrors(e,t){if("listen"!==e.syscall)throw e;let s="string"==typeof t?"Pipe "+t:"Port "+t;switch(e.code){case"EACCES":console.error(s+" requires elevated privileges"),process.exit(1);break;case"EADDRINUSE":console.error(s+" is already in use"),process.exit(1);break;default:throw e}}}class F extends g{constructor(e){super(),this.messages=new b,this.app=e,m.isWorker&&this.messages.on("event",(e,t)=>{e&&e.event&&process.pid!==e.props.owner&&(1==process.env.DEBUG_EVENTS&&console.debug(`Receiving broadcast ${e.event} - ${process.pid}`),super.emit(e.event,O({},e.props),t))})}emit(e,t,s){super.emit(e,t,s),e&&t&&m.isWorker&&process.pid!==t.owner&&(1==process.env.DEBUG_EVENTS&&console.debug(`${e} -> Firing from ${process.pid} to master`),t||(t={}),t.owner=process.pid,this.messages.send("event",{event:e,props:O({},t)},s)),e&&t&&m.isPrimary&&this.app&&this.app.server&&this.app.server.workers&&(1==process.env.DEBUG_EVENTS&&console.debug(`${e} -> Firing from master to workers`),this.messages.send("event",{event:e,props:O({},t)},s))}}const{configure:U,getLogger:B}=E;class J{static async configure(){const e=c.promisify(i.readFile),t=await e(w.resolve(process.cwd(),"./log4js.json"),"utf8");U(JSON.parse(t)),(()=>{const e=B("log"),t=B("error"),s=B("debug");console.log=function(){let t=Array.prototype.slice.call(arguments);e.log("info",t[0])},console.error=function(){let e=Array.prototype.slice.call(arguments);t.log("error",e[0])},console.info=function(){let t=Array.prototype.slice.call(arguments);e.log("info",t[0])},console.debug=function(){let e=Array.prototype.slice.call(arguments);s.log("debug",e[0])},console.custom=function(e,t,s){B(e).log(t,s)}})()}}class z{constructor(e,s){this.router=t.Router(),this.publicPathsList=[...e,"/login"],this.AuthHandler=s}configure(){const e=_.expressHandler();return this.router.use(e((...e)=>this.check(...e))),this.router.post("/login",e((...e)=>this.loginPost(...e))),this.router.post("/logout",e((...e)=>this.logout(...e))),this.router}async check(e,t,s){try{for(let t of this.publicPathsList)if(null!==S(t).exec(a.parse(e.url).pathname))return s();return await this.AuthHandler.check(e)?s():t.status(403).json(new I(!1,null,"Forbidden").toJson())}catch(e){return console.error(e),t.status(403).json(new I(!1,null,"Forbidden").toJson())}}async loginPost(e,t){if(e.body.username)try{let s=await this.AuthHandler.validate(e,e.body.username,e.body.password);return s?t.status(200).json(new I(!0,s).toJson()):t.status(401).json(new I(!1,null,"Unauthorized - Incorrect credentials").toJson())}catch(e){return console.error(e),t.status(401).json(new I(!1,null,"Unauthorized - Error, check log").toJson())}return t.status(401).json(new I(!1,null,"Unauthorized - Missing parameters").toJson())}async logout(e,t){if(this.AuthHandler.logout)try{return await this.AuthHandler.logout(e),t.status(200).json(new I(!0).toJson())}catch(e){return console.error(e),t.status(500).json(new I(!1,null,e).toJson())}return t.status(200).json(new I(!0).toJson())}}class G{constructor(){if(!this.check)throw new Error("AuthHandler must have 'check' vethod");if(!this.validate)throw new Error("AuthHandler must have 'validate' vethod")}}class K extends G{constructor(e){if(super(),this.tokenGenerator=new $(process.env.JWT_SECRET,{audience:process.env.JWT_AUDIENCE,issuer:process.env.JWT_ISSUER,subject:process.env.JWT_SUBJECT,algorithm:process.env.JWT_ALGORITHM,expiresIn:process.env.JWT_EXPIRES}),!e)throw new Error("Need 'UserDao' for user validation. Create 'UserDao' class extending 'IUserDao'");this.userDao=e}async check(e){if(e.headers.authorization){const s=(e.headers.authorization||"").split(" ")[1]||"";if(!s)return console.error("Token needed"),!1;try{var t=this.tokenGenerator.verify(s);const{sub:r,username:o,exp:a}=t;return!(!r||!o||k(a).isAfter(new Date)||(e.session=O({},e.session,t),0))}catch(e){return console.error(e),!1}}return!1}async validate(e,t,s){const r=await this.userDao.findByUsername(t);return!(!r||r.username!==t||r.password!==_.encrypt(s))&&this.tokenGenerator.sign(n.omit(r,["password"]))}}class q extends G{constructor(e){if(super(),!e)throw new Error("Need 'UserDao' for user validation. Create 'UserDao' class extending 'IUserDao'");this.userDao=e}async check(e){if(e.headers.authorization){const t=(e.headers.authorization||"").split(" ")[1]||"",s=Buffer.from(t,"base64").toString().split(":"),r=s[0],o=s[1];return!!await this.validate(e,r,o)}return!(!e.session||!e.session.username)}async validate(e,t,s){const r=await this.userDao.findByUsername(t);return!(!r||r.username!==t||r.password!==_.encrypt(s)||(e.session=O({},e.session,n.omit(r,["password"])),0))}logout(e){return new Promise(t=>{e.session&&e.session.destroy(t)})}}var H=new class{init(e){this.connection=L(e)}setColumnAliases(e){this.columnAliases=e}test(){return this.connection.raw("select 1+1 as result")}};class W{static parseQueryString(e,t,s){const r={allowGlobalSearch:!0,caseInsensitive:!0};H.columnAliases&&H.columnAliases[s]&&(r.aliases=H.columnAliases[s]),void 0!==H.caseInsensitive&&(r.caseInsensitive=H.caseInsensitive),void 0!==H.allowGlobalSearch&&(r.allowGlobalSearch=H.allowGlobalSearch);const o=new x(r).parse(t);return new R(s).toKnex(e,o)}static parseFilters(e,t,s){let r=e;for(let e in t){let o=t[e];if("object"==typeof o)switch(o.type){case"fql":r=W.parseQueryString(r,o.value,s);break;case"date":case"between":o.start&&o.end&&(r=r.whereBetween(e,[o.start,o.end])),o.start&&!o.end&&(r=r.where(e,">=",o.start)),!o.start&&o.end&&(r=r.where(e,">=",o.end));break;case"dateraw":case"betweenraw":o.start&&o.end&&(r=r.whereRaw(`${e} BETWEEN ? AND ?`,[o.start,o.end])),o.start&&!o.end&&(r=r.whereRaw(`${e} >= ?`,[o.start])),!o.start&&o.end&&(r=r.whereRaw(`${e} >= ?`,[o.end]));break;case"jsonb":r=r.whereRaw(`${e} ILIKE ?`,["%"+o.value+"%"]);break;case"full-text-psql":r=r.whereRaw(`to_tsvector(${e}::text) @@ to_tsquery(?)`,[o.value]);break;case"greater":case"greaterraw":r=r.whereRaw(`${e} > ?`,[o.value]);break;case"greaterEq":case"greaterEqraw":r=r.whereRaw(`${e} >= ?`,[o.value]);break;case"less":case"lessraw":r=r.whereRaw(`${e} < ?`,[o.value]);break;case"lessEq":case"lessEqraw":r=r.whereRaw(`${e} <= ?`,[o.value]);break;case"exists":r=r.whereExists(e);break;case"notexists":r=r.whereNotExists(e);break;case"exact":case"exactraw":r=r.whereRaw(`${e} = ?`,[o.value]);break;case"in":let t=e;t.includes(",")&&(t=e.split(",")),Array.isArray(o.value)||null==o.value?null!=o.value&&(r=r.whereIn(t,o.value)):r=r.whereIn(t,o.value.split(","));break;case"inraw":Array.isArray(o.value)||null==o.value?null!=o.value&&(r=r.whereRaw(`${e} IN (?)`,[o.value.map(e=>`'${e}'`).join(",")])):r=r.whereRaw(`${e} IN (?)`,[o.value.split(",").map(e=>`'${e}'`).join(",")]);break;case"not":case"notraw":r=r.whereRaw(`${e} != ?`,[o.value]);break;case"like":case"likeraw":let a=_.replaceAll(o.value,"*","%");r=r.whereRaw(` ${e} LIKE ?`,[a]);break;case"notlike":case"notlikeraw":let n=_.replaceAll(o.value,"*","%");r=r.whereRaw(` ${e} NOT LIKE ?`,[n]);break;case"likeI":let i=_.replaceAll(o.value,"*","%");r=r.whereRaw(` ${e} ILIKE ?`,[i]);break;case"notlikeI":let c=_.replaceAll(o.value,"*","%");r=r.whereRaw(` ${e} NOT ILIKE ?`,[c]);break;case"null":case"nullraw":r=r.whereRaw(`${e} is NULL`);break;case"notnull":case"notnullraw":r=r.whereRaw(`${e} is not NULL`)}else r=r.where(e,o)}return r}static parseSort(e){if(!e.field||!e.direction)return 1;let t="ASC";return"descend"===e.direction&&(t="DESC"),e.field+" "+t}}class M{constructor(){this.tableName=""}loadAllData(e,t){return H.connection.select("*").from(this.tableName).limit(t||1e4).offset(e)}async loadFilteredData(e,t,s){let r=1;return e.sort&&(r=W.parseSort(e.sort)),H.connection.from(this.tableName).where(t=>W.parseFilters(t,n.omit(e,["sort","start","limit"]),this.tableName)).orderByRaw(r).limit(s).offset(t)}async countFilteredData(e){let t=await H.connection.from(this.tableName).where(t=>W.parseFilters(t,n.omit(e,["sort","start","limit"]),this.tableName)).count("id",{as:"total"});return t&&t[0].total}async loadById(e){const t=await H.connection.from(this.tableName).where("id",e);return t&&t[0]?t[0]:null}save(e){return H.connection.from(this.tableName).insert(e).returning("*")}update(e,t){return H.connection.from(this.tableName).where("id",e).update(t).returning("*")}async delete(e){if(!await this.loadById(e))throw"NotFound";return H.connection.from(this.tableName).where("id",e).delete()}}class Y extends M{constructor(e){if(super(e),!this.findByUsername)throw new Error("AuthHandler must have 'findByUsername' method")}}class V{constructor(){this.router=t.Router(),this.routes={}}configure(e,t){if(!e)return this.router;const s=_.expressHandler();return this.router.get(`/${e}`,s((...e)=>this.listEntidad(...e))),this.router.post(`/${e}/list`,s((...e)=>this.listEntidad(...e))),this.router.get(`/${e}/:id`,s((...e)=>this.getEntidad(...e))),this.router.post(`/${e}`,s((...e)=>this.saveEntidad(...e))),this.router.put(`/${e}/:id`,s((...e)=>this.updateEntidad(...e))),this.router.delete(`/${e}/:id`,s((...e)=>this.deleteEntidad(...e))),this.service=t.service,this.table=t.table,this.router}async listEntidad(e,t,s){try{let s=new this.service(null,this.table),r="POST"===e.method?e.body:e.query&&e.query.filters?JSON.parse(e.query.filters):{},o=await s.list(r,r.start,r.limit),a=new I(!0,o.data,null,o.total);t.json(a.toJson())}catch(e){s(e)}}async getEntidad(e,t,s){try{let s=new this.service(null,this.table),r=await s.loadById(e.params.id),o=new I(!0,r),a=200;null==r&&(a=404,o=new I(!1,null,"Element not found",0)),t.status(a).json(o.toJson())}catch(e){console.error(e);let s="";"22P02"==e.code&&(s="Expected uiid");let r=new I(!1,null,s,0);t.status(400).json(r.toJson())}}async saveEntidad(e,t,s){try{let s=new this.service(null,this.table),r=await s.save(e.body),o=new I(!0,r&&r[0]||{id:e.body.id});t.setHeader("Location",`/entity/${o.data.id}`),t.status(201).json(o.toJson())}catch(e){s(e)}}async updateEntidad(e,t,s){try{let s=new this.service(null,this.table),r=await s.update(e.params.id,e.body),o=new I(!0,r&&r[0]||{id:e.body.id});t.json(o.toJson())}catch(e){s(e)}}async deleteEntidad(e,t,s){try{let s=new this.service(null,this.table),r=await s.delete(e.params.id),o=new I(!0,r);t.status(204).json(o.toJson())}catch(e){if(console.error(e),"NotFound"==e){let e=new I(!1,null,"Element not found",0);t.status(404).json(e.toJson())}else s(e)}}}class Q{constructor(e,t){this.dao=e?new e:new M,t&&(this.dao.tableName=t)}async list(e,t,s){const r=t||0,o=s||1e3;let a={};if(a.total=await this.dao.countFilteredData(e,r,o),e&&0!==Object.keys(e).length){let t=await this.dao.loadFilteredData(e,r,o);return a.data=t,a}return a.data=await this.dao.loadAllData(t,s),a}loadById(e){return this.dao.loadById(e)}save(e){return this.dao.save(e)}update(e,t){if(e)return this.dao.update(e,t)}delete(e){if(e)return this.dao.delete(e)}}var X=new class{constructor(){this.serverClass=P,this.clusterClass=C}runtime(e){return async function(e){const t=j(N(process.argv)).usage("Como usar: \n            node $0 [options] \n            \n            ** Si no se especifican parámetros el servidor arrancará normalmente. **").alias("g","generateKeys").describe("g","Genera unas claves para la aplicación").alias("c","encrypt").describe("c","Codifica el String proporcionado en base a la contraseña de .env").nargs("c",1).help("h").alias("h","help");let s=[];if(e)for(const r of e)t.alias(r.key,r.alias),r.describe&&t.describe(r.key,r.describe),0!==r.nargs&&t.nargs(r.key,r.nargs),r.boolean&&t.boolean(r.key),r.choices&&t.choices(r.key,r.choices),r.required&&s.push(r.key);0!==s.length&&t.demandOption(s);const r=t.argv;if(r.generateKeys)return console.log("Generando claves para encriptación:"),console.log(_.generateKeys()),process.exit(1);if(r.encrypt)return console.log("Resultado encryptación:"),console.log(_.encrypt(r.encrypt)),process.exit(1);if(e)for(const t of e)if(r[t.key])return await t.fn(r),process.exit(1)}(e)}async init(e){"true"!=process.env.DISABLE_LOGGER&&await J.configure();const t=new this.serverClass(e,this.statics,this.routes);this.customizeExpress&&(t.customizeExpress=this.customizeExpress),this.beforeListen&&(t.beforeListen=this.beforeListen),this.afterListen&&(t.afterListen=this.afterListen),this.events=new F(this),this.i18n=new T,await this.i18n.load(),this.server=new this.clusterClass(this),this.server.setServerCls(t),this.server.executeOnlyMain=()=>{this.executeOnlyMain&&this.executeOnlyMain(),"true"==process.env.REPL_ENABLED&&this.startRepl()}}async start(){if(!this.server)throw new Error("Call init first");await this.server.start()}startRepl(){try{D.createServer(e=>{const t=A.start({prompt:"lisco::remote> ",input:e,output:e,terminal:!0,useColors:!0,preview:!1});t.context.app=this,t.context.Utils=_,t.context.db=H.connection,t.on("exit",e.end.bind(e))}).listen(process.env.REPL_PORT||5001)}catch(e){console.log("Remote REPL Conn: "+e)}console.log(`Remote REPL started on port ${process.env.REPL_PORT||5001}`)}};export{X as App,z as AuthController,V as BaseController,M as BaseKnexDao,Q as BaseService,C as ClusterServer,q as CookieAuthHandler,F as EventHandler,T as I18nLoader,G as IAuthHandler,Y as IUserDao,I as JsonResponse,K as JwtAuthHandler,H as KnexConnector,W as KnexFilterParser,J as Logger,P as Server,$ as TokenGenerator,_ as Utils};
//# sourceMappingURL=lisco.modern.js.map
